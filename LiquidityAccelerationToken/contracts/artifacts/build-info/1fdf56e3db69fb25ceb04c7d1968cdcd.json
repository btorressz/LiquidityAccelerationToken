{
	"id": "1fdf56e3db69fb25ceb04c7d1968cdcd",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.28",
	"solcLongVersion": "0.8.28+commit.7893614a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/LiquidityAccelerationToken.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.28;\n\n// OpenZeppelin imports for ERC20 interface, access control, security, and cryptography.\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\";\n\n/// @notice Interface for a mintable LAT token.\ninterface ILatToken is IERC20 {\n    function mint(address to, uint256 amount) external;\n}\n\n/// @notice Interface for a treasury vault that holds staked tokens.\ninterface ITreasuryVault {\n    function withdraw(address recipient, uint256 amount) external;\n}\n\n/// @title LiquidityAccelerationToken\n/// @notice This contract mimics a Solana Anchor program by implementing epoch‑based trading rewards,\n/// off‑chain signature verification, staking (with vesting, weighted rewards, and inactivity slashing),\n/// early withdrawal penalties, and a separate treasury vault for staked tokens.\n/// It also includes reentrancy protection and an emergency pause.\ncontract LiquidityAccelerationToken is Ownable, ReentrancyGuard {\n    using ECDSA for bytes32;\n\n    // ======================================\n    // State Variables & Configurations\n    // ======================================\n    \n    ILatToken public latToken;\n\n    uint256 public tradeRewardRate;\n    uint256 public stakeRewardRate;\n    uint256 public totalTrades;\n    uint256 public epochTradeVolume;\n    uint256 public tradeEpochDuration; // in seconds for trade reward claims\n    uint256 public poolTradingVolume;\n    uint256 public poolVolumeThreshold;\n    uint256 public poolBoostMultiplier;\n    uint256 public earlyWithdrawalFee = 10; // 10% penalty for early withdrawals\n\n    // Epoch-based rewards (checkpoint mechanism)\n    uint256 public lastEpochBlock;\n    uint256 public epochDuration; // in blocks (e.g. ~6500 blocks ~ 1 day)\n\n    // Inactivity slashing parameters\n    uint256 public inactivitySlashingTime = 30 days;\n    uint256 public inactivityPenaltyRate = 20; // 20% slash if inactive\n\n    // Maximum claimable reward per claim to prevent runaway minting.\n    uint256 public maxClaimable = 1_000_000 * 10**18;\n\n    // Emergency pause mechanism.\n    bool public paused;\n\n    // To ensure initialization happens only once.\n    bool public initialized;\n\n    // Nonces for replay protection in claim functions.\n    mapping(address => uint256) public nonces;\n\n    // Off-chain signature timestamp tracking.\n    mapping(address => uint256) public lastSignedClaim;\n\n    // Maker rebates and taker fees (for fee/rebate recording).\n    mapping(address => uint256) public makerRebates;\n    mapping(address => uint256) public takerFees;\n\n    // Liquidity boost multipliers per trader (default 100 means no boost).\n    mapping(address => uint256) public liquidityBoostMultiplier;\n\n    // Trader statistics.\n    struct TraderStats {\n        uint256 tradeCount;\n        uint256 totalVolume;\n        uint256 pendingTradeRewards;\n        uint256 lastClaim;\n    }\n    mapping(address => TraderStats) public traderStats;\n\n    // Staking information.\n    struct Stake {\n        uint256 amount;\n        uint256 lastUpdated;\n        uint256 stakeStart;\n    }\n    mapping(address => Stake) public stakes;\n\n    // Staked weight mapping to reward long-term stakers.\n    mapping(address => uint256) public stakedWeight;\n\n    // Vesting schedule structure for future extension.\n    struct VestingEntry {\n        uint256 totalReward;\n        uint256 claimed;\n        uint256 startTime;\n        uint256 duration; // in seconds\n    }\n    mapping(address => VestingEntry[]) public vestingSchedules;\n\n    // Treasury vault address where staked tokens are held.\n    address public vaultAddress;\n\n    // ======================================\n    // Events\n    // ======================================\n    event TradeRecorded(address indexed trader, uint256 tradeVolume, bool isMaker);\n    event TradeRewardsClaimed(address indexed trader, uint256 reward);\n    event StakeLat(address indexed trader, uint256 amount);\n    event StakeRewardsClaimed(address indexed trader, uint256 reward);\n    event StakeWithdrawn(address indexed trader, uint256 amountAfterPenalty, uint256 penalty);\n    event LiquidityMultiplierUpdated(address indexed trader, uint256 multiplier);\n    event Paused(bool isPaused);\n\n    // ======================================\n    // Modifiers\n    // ======================================\n    \n    modifier whenNotPaused() {\n        require(!paused, \"Contract is paused\");\n        _;\n    }\n    \n    // ======================================\n    // Constructor\n    // ======================================\n    constructor() Ownable(msg.sender) {}\n\n    // ======================================\n    // Initialization\n    // ======================================\n    \n    /// @notice Initializes the global state. Can only be called once by the owner.\n    /// @param _latToken The mintable LAT token.\n    /// @param _tradeRewardRate Base reward rate for trades.\n    /// @param _stakeRewardRate Base reward rate for staking.\n    /// @param _tradeEpochDuration Duration (in seconds) for trade reward epochs.\n    /// @param _poolVolumeThreshold Threshold to trigger liquidity pool boost.\n    /// @param _poolBoostMultiplier Boost multiplier (in percentage) for staking rewards.\n    /// @param _epochDuration Epoch duration in blocks (for checkpointing).\n    /// @param _vaultAddress The treasury vault address to hold staked tokens.\n    function initialize(\n        ILatToken _latToken,\n        uint256 _tradeRewardRate,\n        uint256 _stakeRewardRate,\n        uint256 _tradeEpochDuration,\n        uint256 _poolVolumeThreshold,\n        uint256 _poolBoostMultiplier,\n        uint256 _epochDuration,\n        address _vaultAddress\n    ) external onlyOwner {\n        require(!initialized, \"Already initialized\");\n        latToken = _latToken;\n        tradeRewardRate = _tradeRewardRate;\n        stakeRewardRate = _stakeRewardRate;\n        totalTrades = 0;\n        epochTradeVolume = 0;\n        tradeEpochDuration = _tradeEpochDuration;\n        poolTradingVolume = 0;\n        poolVolumeThreshold = _poolVolumeThreshold;\n        poolBoostMultiplier = _poolBoostMultiplier;\n        epochDuration = _epochDuration;\n        lastEpochBlock = block.number;\n        vaultAddress = _vaultAddress;\n        initialized = true;\n    }\n\n    /// @notice Emergency pause function to disable critical functions.\n    function setPaused(bool _paused) external onlyOwner {\n        paused = _paused;\n        emit Paused(_paused);\n    }\n\n    // ======================================\n    // Trade Recording & Reward Claiming\n    // ======================================\n\n    /// @notice Records a trade and updates global and per-trader statistics.\n    /// If a new epoch has started, the epoch trade volume is reset.\n    /// Also records maker rebates or taker fees.\n    /// @param tradeVolume The volume of the trade.\n    /// @param isMaker Whether the trader is a market maker.\n    function recordTrade(uint256 tradeVolume, bool isMaker) external whenNotPaused nonReentrant {\n        require(initialized, \"Not initialized\");\n\n        // Epoch checkpoint: Reset epoch volume if the epoch duration (in blocks) has passed.\n        if (block.number >= lastEpochBlock + epochDuration) {\n            epochTradeVolume = 0;\n            lastEpochBlock = block.number;\n        }\n\n        totalTrades += 1;\n        epochTradeVolume += tradeVolume;\n        poolTradingVolume += tradeVolume;\n\n        TraderStats storage stats = traderStats[msg.sender];\n        stats.tradeCount += 1;\n        stats.totalVolume += tradeVolume;\n\n        // Dynamic multiplier: 150% if global epoch volume is below threshold.\n        uint256 multiplier = epochTradeVolume < poolVolumeThreshold ? 150 : 100;\n        uint256 reward = (tradeVolume * tradeRewardRate * multiplier) / 100;\n        stats.pendingTradeRewards += reward;\n\n        // Record maker rebate or taker fee (example: 1%).\n        if (isMaker) {\n            makerRebates[msg.sender] += tradeVolume / 100;\n        } else {\n            takerFees[msg.sender] += tradeVolume / 100;\n        }\n\n        // Initialize last claim time on first trade.\n        if (stats.lastClaim == 0) {\n            stats.lastClaim = block.timestamp;\n        }\n\n        emit TradeRecorded(msg.sender, tradeVolume, isMaker);\n    }\n\n    /// @notice Allows traders to claim accumulated trade rewards after the epoch duration.\n    /// Uses a nonce and off‑chain EIP‑712 style signature for replay protection.\n    /// @param expectedNonce The expected nonce for msg.sender.\n    /// @param signature The signature over (msg.sender, expectedNonce).\n    function claimTradeRewards(uint256 expectedNonce, bytes memory signature) external whenNotPaused nonReentrant {\n        require(initialized, \"Not initialized\");\n        require(nonces[msg.sender] == expectedNonce, \"Invalid nonce\");\n        require(verifySignature(msg.sender, expectedNonce, signature), \"Invalid signature\");\n\n        nonces[msg.sender]++;\n\n        TraderStats storage stats = traderStats[msg.sender];\n        require(block.timestamp >= stats.lastClaim + tradeEpochDuration, \"Epoch duration not ended\");\n        uint256 reward = stats.pendingTradeRewards;\n        require(reward > 0, \"No pending rewards\");\n        require(reward <= maxClaimable, \"Reward exceeds max claimable\");\n\n        // Reset pending rewards and update claim timestamp.\n        stats.pendingTradeRewards = 0;\n        stats.lastClaim = block.timestamp;\n\n        latToken.mint(msg.sender, reward);\n        emit TradeRewardsClaimed(msg.sender, reward);\n    }\n\n    // ======================================\n    // Staking & Reward Claiming\n    // ======================================\n\n    /// @notice Stakes LAT tokens by transferring them to a treasury vault.\n    /// The user must approve this contract beforehand.\n    /// Also updates the staked weight (used for long‑term reward multipliers).\n    /// @param amount The amount of LAT tokens to stake.\n    function stakeLat(uint256 amount) external whenNotPaused nonReentrant {\n        require(initialized, \"Not initialized\");\n        // Transfer tokens from the user directly to the vault.\n        require(latToken.transferFrom(msg.sender, vaultAddress, amount), \"Transfer failed\");\n\n        Stake storage s = stakes[msg.sender];\n        if (s.stakeStart == 0) {\n            s.stakeStart = block.timestamp;\n            stakedWeight[msg.sender] = 100; // Base weight.\n        } else {\n            // Increase weight for long-term stakers.\n            stakedWeight[msg.sender] += 10;\n        }\n        s.amount += amount;\n        s.lastUpdated = block.timestamp;\n\n        emit StakeLat(msg.sender, amount);\n    }\n\n    /// @notice Claims staking rewards based on the staked amount and elapsed time.\n    /// Applies pool boosts, liquidity boosts, staked weight, and inactivity slashing if applicable.\n    /// Uses nonce-based replay protection.\n    /// @param expectedNonce The expected nonce for msg.sender.\n    function claimStakeRewards(uint256 expectedNonce) external whenNotPaused nonReentrant {\n        require(initialized, \"Not initialized\");\n        require(nonces[msg.sender] == expectedNonce, \"Invalid nonce\");\n        nonces[msg.sender]++;\n\n        Stake storage s = stakes[msg.sender];\n        require(s.stakeStart != 0, \"No stake found\");\n\n        uint256 elapsed = block.timestamp - s.lastUpdated;\n        require(elapsed > 0, \"No time elapsed\");\n\n        // Calculate effective stake reward rate.\n        uint256 effectiveStakeRewardRate = stakeRewardRate;\n        if (poolTradingVolume > poolVolumeThreshold) {\n            effectiveStakeRewardRate = (stakeRewardRate * poolBoostMultiplier) / 100;\n        }\n        // Apply additional liquidity boost (default multiplier is 100).\n        uint256 liquidityMultiplier = liquidityBoostMultiplier[msg.sender] == 0\n            ? 100\n            : liquidityBoostMultiplier[msg.sender];\n        effectiveStakeRewardRate = (effectiveStakeRewardRate * liquidityMultiplier) / 100;\n\n        // Base reward calculation.\n        uint256 reward = s.amount * effectiveStakeRewardRate * elapsed;\n\n        // Apply staked weight multiplier.\n        reward = (reward * stakedWeight[msg.sender]) / 100;\n\n        // Apply inactivity slashing if the staker has been inactive for too long.\n        if (block.timestamp > s.lastUpdated + inactivitySlashingTime) {\n            uint256 penalty = (reward * inactivityPenaltyRate) / 100;\n            reward = reward - penalty;\n        }\n\n        s.lastUpdated = block.timestamp;\n        latToken.mint(msg.sender, reward);\n        emit StakeRewardsClaimed(msg.sender, reward);\n    }\n\n    /// @notice Withdraws staked LAT tokens from the treasury vault.\n    /// If withdrawn before 7 days from staking, an early withdrawal fee is applied.\n    /// @param amount The amount of staked tokens to withdraw.\n    function withdrawStake(uint256 amount) external whenNotPaused nonReentrant {\n        require(initialized, \"Not initialized\");\n        Stake storage s = stakes[msg.sender];\n        require(amount <= s.amount, \"Insufficient staked amount\");\n\n        uint256 penalty = 0;\n        // Apply penalty if withdrawing before 7 days have elapsed since staking.\n        if (block.timestamp < s.stakeStart + 7 days) {\n            penalty = (amount * earlyWithdrawalFee) / 100;\n        }\n        uint256 amountAfterPenalty = amount - penalty;\n        s.amount -= amount;\n\n        // Withdraw the tokens for the user from the vault.\n        ITreasuryVault(vaultAddress).withdraw(msg.sender, amountAfterPenalty);\n        // Withdraw the penalty amount to the owner.\n        if (penalty > 0) {\n            ITreasuryVault(vaultAddress).withdraw(owner(), penalty);\n        }\n\n        emit StakeWithdrawn(msg.sender, amountAfterPenalty, penalty);\n    }\n\n    // ======================================\n    // Administration & Utility\n    // ======================================\n\n    /// @notice Admin-only function to update a trader's liquidity boost multiplier.\n    /// @param trader The address of the trader.\n    /// @param lpTokens The amount of liquidity provider tokens held (if > 0, multiplier is set to 120).\n    function updateLiquidityMultiplier(address trader, uint256 lpTokens) external onlyOwner {\n        liquidityBoostMultiplier[trader] = lpTokens > 0 ? 120 : 100;\n        emit LiquidityMultiplierUpdated(trader, liquidityBoostMultiplier[trader]);\n    }\n\n    // ======================================\n    // Off‑chain Signature Verification (EIP‑712 style)\n    // ======================================\n\n    /// @notice Verifies that the provided signature is valid for (signer, expectedNonce) using the Ethereum Signed Message format.\n    /// @param signer The expected signer address.\n    /// @param expectedNonce The expected nonce to prevent replay attacks.\n    /// @param signature The ECDSA signature to verify.\n    /// @return True if the signature is valid, false otherwise.\n      function verifySignature(address signer, uint256 expectedNonce, bytes memory signature) internal pure returns (bool) {\n             bytes32 messageHash = keccak256(abi.encodePacked(signer, expectedNonce));\n             bytes32 ethSignedMessageHash = keccak256(abi.encodePacked(\"\\x19Ethereum Signed Message:\\n32\", messageHash));\n             return ECDSA.recover(ethSignedMessageHash, signature) == signer;\n        }\n}\n"
			},
			"@openzeppelin/contracts/utils/cryptography/ECDSA.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS\n    }\n\n    /**\n     * @dev The signature derives the `address(0)`.\n     */\n    error ECDSAInvalidSignature();\n\n    /**\n     * @dev The signature has an invalid length.\n     */\n    error ECDSAInvalidSignatureLength(uint256 length);\n\n    /**\n     * @dev The signature has an S value that is in the upper half order.\n     */\n    error ECDSAInvalidSignatureS(bytes32 s);\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n     * return address(0) without also returning an error description. Errors are documented using an enum (error type)\n     * and a bytes32 providing additional information about the error.\n     *\n     * If no error is returned, then the address can be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes memory signature\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            assembly (\"memory-safe\") {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length));\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, signature);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[ERC-2098 short signatures]\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes32 r,\n        bytes32 vs\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        unchecked {\n            bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n            // We do not check for an overflow here since the shift operation results in 0 or 1.\n            uint8 v = uint8((uint256(vs) >> 255) + 27);\n            return tryRecover(hash, v, r, s);\n        }\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     */\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, r, vs);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function tryRecover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS, s);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature, bytes32(0));\n        }\n\n        return (signer, RecoverError.NoError, bytes32(0));\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, v, r, s);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Optionally reverts with the corresponding custom error according to the `error` argument provided.\n     */\n    function _throwError(RecoverError error, bytes32 errorArg) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert ECDSAInvalidSignature();\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert ECDSAInvalidSignatureLength(uint256(errorArg));\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert ECDSAInvalidSignatureS(errorArg);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/ERC20Burnable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC20} from \"../ERC20.sol\";\nimport {Context} from \"../../../utils/Context.sol\";\n\n/**\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\n * tokens and those that they have an allowance for, in a way that can be\n * recognized off-chain (via event analysis).\n */\nabstract contract ERC20Burnable is Context, ERC20 {\n    /**\n     * @dev Destroys a `value` amount of tokens from the caller.\n     *\n     * See {ERC20-_burn}.\n     */\n    function burn(uint256 value) public virtual {\n        _burn(_msgSender(), value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, deducting from\n     * the caller's allowance.\n     *\n     * See {ERC20-_burn} and {ERC20-allowance}.\n     *\n     * Requirements:\n     *\n     * - the caller must have allowance for ``accounts``'s tokens of at least\n     * `value`.\n     */\n    function burnFrom(address account, uint256 value) public virtual {\n        _spendAllowance(account, _msgSender(), value);\n        _burn(account, value);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 295,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 372,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 378,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 380,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 382,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 384,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
				"ERC20Burnable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}."
							},
							"burnFrom(address,uint256)": {
								"details": "Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":\"ERC20Burnable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26\",\"dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 372,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 378,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 380,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 382,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 384,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/cryptography/ECDSA.sol": {
				"ECDSA": {
					"abi": [
						{
							"inputs": [],
							"name": "ECDSAInvalidSignature",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "ECDSAInvalidSignatureLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "ECDSAInvalidSignatureS",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.",
						"errors": {
							"ECDSAInvalidSignature()": [
								{
									"details": "The signature derives the `address(0)`."
								}
							],
							"ECDSAInvalidSignatureLength(uint256)": [
								{
									"details": "The signature has an invalid length."
								}
							],
							"ECDSAInvalidSignatureS(bytes32)": [
								{
									"details": "The signature has an S value that is in the upper half order."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":344:7814  library ECDSA {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":344:7814  library ECDSA {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa26469706673582212200a1a99e509a95f7cdbd190774c05461ca734f29b6619e0a2dc19c9b537ffd91064736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212200a1a99e509a95f7cdbd190774c05461ca734f29b6619e0a2dc19c9b537ffd91064736f6c634300081c0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXP BYTE SWAP10 0xE5 MULMOD 0xA9 PUSH0 PUSH29 0xDBD190774C05461CA734F29B6619E0A2DC19C9B537FFD91064736F6C63 NUMBER STOP ADDMOD SHR STOP CALLER ",
							"sourceMap": "344:7470:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212200a1a99e509a95f7cdbd190774c05461ca734f29b6619e0a2dc19c9b537ffd91064736f6c634300081c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXP BYTE SWAP10 0xE5 MULMOD 0xA9 PUSH0 PUSH29 0xDBD190774C05461CA734F29B6619E0A2DC19C9B537FFD91064736F6C63 NUMBER STOP ADDMOD SHR STOP CALLER ",
							"sourceMap": "344:7470:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_throwError(enum ECDSA.RecoverError,bytes32)": "infinite",
								"recover(bytes32,bytes memory)": "infinite",
								"recover(bytes32,bytes32,bytes32)": "infinite",
								"recover(bytes32,uint8,bytes32,bytes32)": "infinite",
								"tryRecover(bytes32,bytes memory)": "infinite",
								"tryRecover(bytes32,bytes32,bytes32)": "infinite",
								"tryRecover(bytes32,uint8,bytes32,bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 344,
									"end": 7814,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200a1a99e509a95f7cdbd190774c05461ca734f29b6619e0a2dc19c9b537ffd91064736f6c634300081c0033",
									".code": [
										{
											"begin": 344,
											"end": 7814,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 344,
											"end": 7814,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 344,
											"end": 7814,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 344,
											"end": 7814,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 344,
											"end": 7814,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 344,
											"end": 7814,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 344,
											"end": 7814,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 344,
											"end": 7814,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 344,
											"end": 7814,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
								"contracts/LiquidityAccelerationToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/LiquidityAccelerationToken.sol": {
				"ILatToken": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"mint(address,uint256)": "40c10f19",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Interface for a mintable LAT token.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LiquidityAccelerationToken.sol\":\"ILatToken\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26\",\"dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]},\"contracts/LiquidityAccelerationToken.sol\":{\"keccak256\":\"0x7685fa7df91ee893cbc41916f564ef2d7f97ea76fa53b1c18d3009973f8e54b1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5345d4bd3ea581e64e2b8d4d09bd9a5e0334eff2f3dab6d42004c3939c16b886\",\"dweb:/ipfs/QmWBGQChw2AXm33jQc8gjDx4zE8EBL7YNGohP9LwcbVrbq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Interface for a mintable LAT token.",
						"version": 1
					}
				},
				"ITreasuryVault": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"withdraw(address,uint256)": "f3fef3a3"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Interface for a treasury vault that holds staked tokens.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LiquidityAccelerationToken.sol\":\"ITreasuryVault\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26\",\"dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]},\"contracts/LiquidityAccelerationToken.sol\":{\"keccak256\":\"0x7685fa7df91ee893cbc41916f564ef2d7f97ea76fa53b1c18d3009973f8e54b1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5345d4bd3ea581e64e2b8d4d09bd9a5e0334eff2f3dab6d42004c3939c16b886\",\"dweb:/ipfs/QmWBGQChw2AXm33jQc8gjDx4zE8EBL7YNGohP9LwcbVrbq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Interface for a treasury vault that holds staked tokens.",
						"version": 1
					}
				},
				"LiquidityAccelerationToken": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "ECDSAInvalidSignature",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "ECDSAInvalidSignatureLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "ECDSAInvalidSignatureS",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "trader",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "multiplier",
									"type": "uint256"
								}
							],
							"name": "LiquidityMultiplierUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bool",
									"name": "isPaused",
									"type": "bool"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "trader",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "StakeLat",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "trader",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "reward",
									"type": "uint256"
								}
							],
							"name": "StakeRewardsClaimed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "trader",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountAfterPenalty",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "penalty",
									"type": "uint256"
								}
							],
							"name": "StakeWithdrawn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "trader",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tradeVolume",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "isMaker",
									"type": "bool"
								}
							],
							"name": "TradeRecorded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "trader",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "reward",
									"type": "uint256"
								}
							],
							"name": "TradeRewardsClaimed",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "expectedNonce",
									"type": "uint256"
								}
							],
							"name": "claimStakeRewards",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "expectedNonce",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								}
							],
							"name": "claimTradeRewards",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "earlyWithdrawalFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "epochDuration",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "epochTradeVolume",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "inactivityPenaltyRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "inactivitySlashingTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract ILatToken",
									"name": "_latToken",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_tradeRewardRate",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_stakeRewardRate",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_tradeEpochDuration",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_poolVolumeThreshold",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_poolBoostMultiplier",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_epochDuration",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_vaultAddress",
									"type": "address"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "initialized",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lastEpochBlock",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "lastSignedClaim",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "latToken",
							"outputs": [
								{
									"internalType": "contract ILatToken",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "liquidityBoostMultiplier",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "makerRebates",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxClaimable",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "poolBoostMultiplier",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "poolTradingVolume",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "poolVolumeThreshold",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tradeVolume",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "isMaker",
									"type": "bool"
								}
							],
							"name": "recordTrade",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "_paused",
									"type": "bool"
								}
							],
							"name": "setPaused",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "stakeLat",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakeRewardRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "stakedWeight",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "stakes",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "lastUpdated",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "stakeStart",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "takerFees",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalTrades",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tradeEpochDuration",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tradeRewardRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "traderStats",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "tradeCount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "totalVolume",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "pendingTradeRewards",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "lastClaim",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "trader",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "lpTokens",
									"type": "uint256"
								}
							],
							"name": "updateLiquidityMultiplier",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "vaultAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "vestingSchedules",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "totalReward",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "claimed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "startTime",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "duration",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdrawStake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ECDSAInvalidSignature()": [
								{
									"details": "The signature derives the `address(0)`."
								}
							],
							"ECDSAInvalidSignatureLength(uint256)": [
								{
									"details": "The signature has an invalid length."
								}
							],
							"ECDSAInvalidSignatureS(bytes32)": [
								{
									"details": "The signature has an S value that is in the upper half order."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"claimStakeRewards(uint256)": {
								"params": {
									"expectedNonce": "The expected nonce for msg.sender."
								}
							},
							"claimTradeRewards(uint256,bytes)": {
								"params": {
									"expectedNonce": "The expected nonce for msg.sender.",
									"signature": "The signature over (msg.sender, expectedNonce)."
								}
							},
							"initialize(address,uint256,uint256,uint256,uint256,uint256,uint256,address)": {
								"params": {
									"_epochDuration": "Epoch duration in blocks (for checkpointing).",
									"_latToken": "The mintable LAT token.",
									"_poolBoostMultiplier": "Boost multiplier (in percentage) for staking rewards.",
									"_poolVolumeThreshold": "Threshold to trigger liquidity pool boost.",
									"_stakeRewardRate": "Base reward rate for staking.",
									"_tradeEpochDuration": "Duration (in seconds) for trade reward epochs.",
									"_tradeRewardRate": "Base reward rate for trades.",
									"_vaultAddress": "The treasury vault address to hold staked tokens."
								}
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"recordTrade(uint256,bool)": {
								"params": {
									"isMaker": "Whether the trader is a market maker.",
									"tradeVolume": "The volume of the trade."
								}
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"stakeLat(uint256)": {
								"params": {
									"amount": "The amount of LAT tokens to stake."
								}
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"updateLiquidityMultiplier(address,uint256)": {
								"params": {
									"lpTokens": "The amount of liquidity provider tokens held (if > 0, multiplier is set to 120).",
									"trader": "The address of the trader."
								}
							},
							"withdrawStake(uint256)": {
								"params": {
									"amount": "The amount of staked tokens to withdraw."
								}
							}
						},
						"title": "LiquidityAccelerationToken",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/LiquidityAccelerationToken.sol\":1161:15541  contract LiquidityAccelerationToken is Ownable, ReentrancyGuard {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/LiquidityAccelerationToken.sol\":1802:1804  10 */\n  0x0a\n    /* \"contracts/LiquidityAccelerationToken.sol\":1766:1804  uint256 public earlyWithdrawalFee = 10 */\n  0x0b\n  sstore\n    /* \"contracts/LiquidityAccelerationToken.sol\":2087:2094  30 days */\n  0x278d00\n    /* \"contracts/LiquidityAccelerationToken.sol\":2047:2094  uint256 public inactivitySlashingTime = 30 days */\n  0x0e\n  sstore\n    /* \"contracts/LiquidityAccelerationToken.sol\":2139:2141  20 */\n  0x14\n    /* \"contracts/LiquidityAccelerationToken.sol\":2100:2141  uint256 public inactivityPenaltyRate = 20 */\n  0x0f\n  sstore\n    /* \"contracts/LiquidityAccelerationToken.sol\":2273:2291  1_000_000 * 10**18 */\n  0xd3c21bcecceda1000000\n    /* \"contracts/LiquidityAccelerationToken.sol\":2243:2291  uint256 public maxClaimable = 1_000_000 * 10**18 */\n  0x10\n  sstore\n    /* \"contracts/LiquidityAccelerationToken.sol\":4780:4816  constructor() Ownable(msg.sender) {} */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n    /* \"contracts/LiquidityAccelerationToken.sol\":4802:4812  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_6\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_7\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_7:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_6:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_9\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_10)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_9:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1828  _status */\n  dup1\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/LiquidityAccelerationToken.sol\":1161:15541  contract LiquidityAccelerationToken is Ownable, ReentrancyGuard {... */\n  jump(tag_13)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_10:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x00\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x00\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:133   */\ntag_15:\n    /* \"#utility.yul\":44:51   */\n  0x00\n    /* \"#utility.yul\":84:126   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":77:82   */\n  dup3\n    /* \"#utility.yul\":73:127   */\n  and\n    /* \"#utility.yul\":62:127   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:133   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":139:235   */\ntag_16:\n    /* \"#utility.yul\":176:183   */\n  0x00\n    /* \"#utility.yul\":205:229   */\n  tag_21\n    /* \"#utility.yul\":223:228   */\n  dup3\n    /* \"#utility.yul\":205:229   */\n  tag_15\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":194:229   */\n  swap1\n  pop\n    /* \"#utility.yul\":139:235   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":241:359   */\ntag_17:\n    /* \"#utility.yul\":328:352   */\n  tag_23\n    /* \"#utility.yul\":346:351   */\n  dup2\n    /* \"#utility.yul\":328:352   */\n  tag_16\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":323:326   */\n  dup3\n    /* \"#utility.yul\":316:353   */\n  mstore\n    /* \"#utility.yul\":241:359   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":365:587   */\ntag_8:\n    /* \"#utility.yul\":458:462   */\n  0x00\n    /* \"#utility.yul\":496:498   */\n  0x20\n    /* \"#utility.yul\":485:494   */\n  dup3\n    /* \"#utility.yul\":481:499   */\n  add\n    /* \"#utility.yul\":473:499   */\n  swap1\n  pop\n    /* \"#utility.yul\":509:580   */\n  tag_25\n    /* \"#utility.yul\":577:578   */\n  0x00\n    /* \"#utility.yul\":566:575   */\n  dup4\n    /* \"#utility.yul\":562:579   */\n  add\n    /* \"#utility.yul\":553:559   */\n  dup5\n    /* \"#utility.yul\":509:580   */\n  tag_17\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":365:587   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/LiquidityAccelerationToken.sol\":1161:15541  contract LiquidityAccelerationToken is Ownable, ReentrancyGuard {... */\ntag_13:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/LiquidityAccelerationToken.sol\":1161:15541  contract LiquidityAccelerationToken is Ownable, ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x64cb6142\n      gt\n      tag_41\n      jumpi\n      dup1\n      0xdd69becd\n      gt\n      tag_42\n      jumpi\n      dup1\n      0xf03f80c3\n      gt\n      tag_43\n      jumpi\n      dup1\n      0xf03f80c3\n      eq\n      tag_36\n      jumpi\n      dup1\n      0xf1ea7692\n      eq\n      tag_37\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_38\n      jumpi\n      dup1\n      0xf3482650\n      eq\n      tag_39\n      jumpi\n      dup1\n      0xf6cc5157\n      eq\n      tag_40\n      jumpi\n      jump(tag_2)\n    tag_43:\n      dup1\n      0xdd69becd\n      eq\n      tag_31\n      jumpi\n      dup1\n      0xe275c997\n      eq\n      tag_32\n      jumpi\n      dup1\n      0xe90b0d76\n      eq\n      tag_33\n      jumpi\n      dup1\n      0xe927e7c0\n      eq\n      tag_34\n      jumpi\n      dup1\n      0xeab35b77\n      eq\n      tag_35\n      jumpi\n      jump(tag_2)\n    tag_42:\n      dup1\n      0x848ff684\n      gt\n      tag_44\n      jumpi\n      dup1\n      0x848ff684\n      eq\n      tag_26\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_27\n      jumpi\n      dup1\n      0x94d9b235\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xc2362dd5\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xccc8362c\n      eq\n      tag_30\n      jumpi\n      jump(tag_2)\n    tag_44:\n      dup1\n      0x64cb6142\n      eq\n      tag_22\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_23\n      jumpi\n      dup1\n      0x7ecebe00\n      eq\n      tag_24\n      jumpi\n      dup1\n      0x8119185b\n      eq\n      tag_25\n      jumpi\n      jump(tag_2)\n    tag_41:\n      dup1\n      0x25d5971f\n      gt\n      tag_45\n      jumpi\n      dup1\n      0x519445e2\n      gt\n      tag_46\n      jumpi\n      dup1\n      0x519445e2\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x5829b3c7\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x58ba9d27\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x5e2a9fa2\n      eq\n      tag_21\n      jumpi\n      jump(tag_2)\n    tag_46:\n      dup1\n      0x25d5971f\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x31fdc2ba\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x430bf08a\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x45626bd6\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x4ff0876a\n      eq\n      tag_16\n      jumpi\n      jump(tag_2)\n    tag_45:\n      dup1\n      0x158ef93e\n      gt\n      tag_47\n      jumpi\n      dup1\n      0x158ef93e\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x16330d40\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x16934fc4\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x16c38b3c\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x1bff38cd\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_47:\n      dup1\n      0x011a4568\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x0524fb7e\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x05c50a35\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x0fd7bf50\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"contracts/LiquidityAccelerationToken.sol\":2763:2807  mapping(address => uint256) public takerFees */\n    tag_3:\n      tag_48\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      tag_51\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_52\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LiquidityAccelerationToken.sol\":10151:10856  function stakeLat(uint256 amount) external whenNotPaused nonReentrant {... */\n    tag_4:\n      tag_54\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_55\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n      tag_57\n      jump\t// in\n    tag_54:\n      stop\n        /* \"contracts/LiquidityAccelerationToken.sol\":3134:3184  mapping(address => TraderStats) public traderStats */\n    tag_5:\n      tag_58\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_59\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_59:\n      tag_60\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      tag_61\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LiquidityAccelerationToken.sol\":1398:1423  ILatToken public latToken */\n    tag_6:\n      tag_63\n      tag_64\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      tag_65\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LiquidityAccelerationToken.sol\":2408:2431  bool public initialized */\n    tag_7:\n      tag_67\n      tag_68\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      tag_69\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LiquidityAccelerationToken.sol\":1766:1804  uint256 public earlyWithdrawalFee = 10 */\n    tag_8:\n      tag_71\n      tag_72\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      tag_73\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LiquidityAccelerationToken.sol\":3325:3364  mapping(address => Stake) public stakes */\n    tag_9:\n      tag_74\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_75\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_75:\n      tag_76\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      tag_77\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LiquidityAccelerationToken.sol\":6563:6678  function setPaused(bool _paused) external onlyOwner {... */\n    tag_10:\n      tag_79\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_80\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_80:\n      tag_82\n      jump\t// in\n    tag_79:\n      stop\n        /* \"contracts/LiquidityAccelerationToken.sol\":1726:1760  uint256 public poolBoostMultiplier */\n    tag_11:\n      tag_83\n      tag_84\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      tag_85\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LiquidityAccelerationToken.sol\":13034:13967  function withdrawStake(uint256 amount) external whenNotPaused nonReentrant {... */\n    tag_12:\n      tag_86\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_87\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_87:\n      tag_88\n      jump\t// in\n    tag_86:\n      stop\n        /* \"contracts/LiquidityAccelerationToken.sol\":14337:14584  function updateLiquidityMultiplier(address trader, uint256 lpTokens) external onlyOwner {... */\n    tag_13:\n      tag_89\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_90\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_90:\n      tag_92\n      jump\t// in\n    tag_89:\n      stop\n        /* \"contracts/LiquidityAccelerationToken.sol\":3817:3844  address public vaultAddress */\n    tag_14:\n      tag_93\n      tag_94\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      tag_95\n      swap2\n      swap1\n      tag_96\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LiquidityAccelerationToken.sol\":3692:3750  mapping(address => VestingEntry[]) public vestingSchedules */\n    tag_15:\n      tag_97\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_98\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_98:\n      tag_99\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      tag_100\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LiquidityAccelerationToken.sol\":1933:1961  uint256 public epochDuration */\n    tag_16:\n      tag_101\n      tag_102\n      jump\t// in\n    tag_101:\n      mload(0x40)\n      tag_103\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_103:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LiquidityAccelerationToken.sol\":1534:1565  uint256 public epochTradeVolume */\n    tag_17:\n      tag_104\n      tag_105\n      jump\t// in\n    tag_104:\n      mload(0x40)\n      tag_106\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_106:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LiquidityAccelerationToken.sol\":2890:2949  mapping(address => uint256) public liquidityBoostMultiplier */\n    tag_18:\n      tag_107\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_108\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_108:\n      tag_109\n      jump\t// in\n    tag_107:\n      mload(0x40)\n      tag_110\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_110:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LiquidityAccelerationToken.sol\":3429:3476  mapping(address => uint256) public stakedWeight */\n    tag_19:\n      tag_111\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_112\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_112:\n      tag_113\n      jump\t// in\n    tag_111:\n      mload(0x40)\n      tag_114\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_114:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LiquidityAccelerationToken.sol\":2332:2350  bool public paused */\n    tag_20:\n      tag_115\n      tag_116\n      jump\t// in\n    tag_115:\n      mload(0x40)\n      tag_117\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_117:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LiquidityAccelerationToken.sol\":2710:2757  mapping(address => uint256) public makerRebates */\n    tag_21:\n      tag_118\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_119\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_119:\n      tag_120\n      jump\t// in\n    tag_118:\n      mload(0x40)\n      tag_121\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_121:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LiquidityAccelerationToken.sol\":1686:1720  uint256 public poolVolumeThreshold */\n    tag_22:\n      tag_122\n      tag_123\n      jump\t// in\n    tag_122:\n      mload(0x40)\n      tag_124\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_124:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_23:\n      tag_125\n      tag_126\n      jump\t// in\n    tag_125:\n      stop\n        /* \"contracts/LiquidityAccelerationToken.sol\":2494:2535  mapping(address => uint256) public nonces */\n    tag_24:\n      tag_127\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_128\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_128:\n      tag_129\n      jump\t// in\n    tag_127:\n      mload(0x40)\n      tag_130\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_130:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LiquidityAccelerationToken.sol\":2047:2094  uint256 public inactivitySlashingTime = 30 days */\n    tag_25:\n      tag_131\n      tag_132\n      jump\t// in\n    tag_131:\n      mload(0x40)\n      tag_133\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_133:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LiquidityAccelerationToken.sol\":5603:6485  function initialize(... */\n    tag_26:\n      tag_134\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_135\n      swap2\n      swap1\n      tag_136\n      jump\t// in\n    tag_135:\n      tag_137\n      jump\t// in\n    tag_134:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_27:\n      tag_138\n      tag_139\n      jump\t// in\n    tag_138:\n      mload(0x40)\n      tag_140\n      swap2\n      swap1\n      tag_96\n      jump\t// in\n    tag_140:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LiquidityAccelerationToken.sol\":2100:2141  uint256 public inactivityPenaltyRate = 20 */\n    tag_28:\n      tag_141\n      tag_142\n      jump\t// in\n    tag_141:\n      mload(0x40)\n      tag_143\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_143:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LiquidityAccelerationToken.sol\":1898:1927  uint256 public lastEpochBlock */\n    tag_29:\n      tag_144\n      tag_145\n      jump\t// in\n    tag_144:\n      mload(0x40)\n      tag_146\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_146:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LiquidityAccelerationToken.sol\":1466:1496  uint256 public stakeRewardRate */\n    tag_30:\n      tag_147\n      tag_148\n      jump\t// in\n    tag_147:\n      mload(0x40)\n      tag_149\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_149:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LiquidityAccelerationToken.sol\":11155:12811  function claimStakeRewards(uint256 expectedNonce) external whenNotPaused nonReentrant {... */\n    tag_31:\n      tag_150\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_151\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_151:\n      tag_152\n      jump\t// in\n    tag_150:\n      stop\n        /* \"contracts/LiquidityAccelerationToken.sol\":1502:1528  uint256 public totalTrades */\n    tag_32:\n      tag_153\n      tag_154\n      jump\t// in\n    tag_153:\n      mload(0x40)\n      tag_155\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_155:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LiquidityAccelerationToken.sol\":8805:9748  function claimTradeRewards(uint256 expectedNonce, bytes memory signature) external whenNotPaused nonReentrant {... */\n    tag_33:\n      tag_156\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_157\n      swap2\n      swap1\n      tag_158\n      jump\t// in\n    tag_157:\n      tag_159\n      jump\t// in\n    tag_156:\n      stop\n        /* \"contracts/LiquidityAccelerationToken.sol\":7128:8484  function recordTrade(uint256 tradeVolume, bool isMaker) external whenNotPaused nonReentrant {... */\n    tag_34:\n      tag_160\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_161\n      swap2\n      swap1\n      tag_162\n      jump\t// in\n    tag_161:\n      tag_163\n      jump\t// in\n    tag_160:\n      stop\n        /* \"contracts/LiquidityAccelerationToken.sol\":1648:1680  uint256 public poolTradingVolume */\n    tag_35:\n      tag_164\n      tag_165\n      jump\t// in\n    tag_164:\n      mload(0x40)\n      tag_166\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_166:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LiquidityAccelerationToken.sol\":2243:2291  uint256 public maxClaimable = 1_000_000 * 10**18 */\n    tag_36:\n      tag_167\n      tag_168\n      jump\t// in\n    tag_167:\n      mload(0x40)\n      tag_169\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_169:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LiquidityAccelerationToken.sol\":1571:1604  uint256 public tradeEpochDuration */\n    tag_37:\n      tag_170\n      tag_171\n      jump\t// in\n    tag_170:\n      mload(0x40)\n      tag_172\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_172:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_38:\n      tag_173\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_174\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_174:\n      tag_175\n      jump\t// in\n    tag_173:\n      stop\n        /* \"contracts/LiquidityAccelerationToken.sol\":2589:2639  mapping(address => uint256) public lastSignedClaim */\n    tag_39:\n      tag_176\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_177\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_177:\n      tag_178\n      jump\t// in\n    tag_176:\n      mload(0x40)\n      tag_179\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_179:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LiquidityAccelerationToken.sol\":1430:1460  uint256 public tradeRewardRate */\n    tag_40:\n      tag_180\n      tag_181\n      jump\t// in\n    tag_180:\n      mload(0x40)\n      tag_182\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_182:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LiquidityAccelerationToken.sol\":2763:2807  mapping(address => uint256) public takerFees */\n    tag_51:\n      mstore(0x20, 0x15)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/LiquidityAccelerationToken.sol\":10151:10856  function stakeLat(uint256 amount) external whenNotPaused nonReentrant {... */\n    tag_57:\n        /* \"contracts/LiquidityAccelerationToken.sol\":4612:4618  paused */\n      0x11\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/LiquidityAccelerationToken.sol\":4611:4618  !paused */\n      iszero\n        /* \"contracts/LiquidityAccelerationToken.sol\":4603:4641  require(!paused, \"Contract is paused\") */\n      tag_184\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_185\n      swap1\n      tag_186\n      jump\t// in\n    tag_185:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_184:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_188\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_189\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_188:\n        /* \"contracts/LiquidityAccelerationToken.sol\":10239:10250  initialized */\n      0x11\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/LiquidityAccelerationToken.sol\":10231:10270  require(initialized, \"Not initialized\") */\n      tag_191\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_192\n      swap1\n      tag_193\n      jump\t// in\n    tag_192:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_191:\n        /* \"contracts/LiquidityAccelerationToken.sol\":10352:10360  latToken */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/LiquidityAccelerationToken.sol\":10352:10373  latToken.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/LiquidityAccelerationToken.sol\":10374:10384  msg.sender */\n      caller\n        /* \"contracts/LiquidityAccelerationToken.sol\":10386:10398  vaultAddress */\n      0x1b\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/LiquidityAccelerationToken.sol\":10400:10406  amount */\n      dup5\n        /* \"contracts/LiquidityAccelerationToken.sol\":10352:10407  latToken.transferFrom(msg.sender, vaultAddress, amount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_194\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_195\n      jump\t// in\n    tag_194:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_197\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_197:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_198\n      swap2\n      swap1\n      tag_199\n      jump\t// in\n    tag_198:\n        /* \"contracts/LiquidityAccelerationToken.sol\":10344:10427  require(latToken.transferFrom(msg.sender, vaultAddress, amount), \"Transfer failed\") */\n      tag_200\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_201\n      swap1\n      tag_202\n      jump\t// in\n    tag_201:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_200:\n        /* \"contracts/LiquidityAccelerationToken.sol\":10438:10453  Stake storage s */\n      0x00\n        /* \"contracts/LiquidityAccelerationToken.sol\":10456:10462  stakes */\n      0x18\n        /* \"contracts/LiquidityAccelerationToken.sol\":10456:10474  stakes[msg.sender] */\n      0x00\n        /* \"contracts/LiquidityAccelerationToken.sol\":10463:10473  msg.sender */\n      caller\n        /* \"contracts/LiquidityAccelerationToken.sol\":10456:10474  stakes[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/LiquidityAccelerationToken.sol\":10438:10474  Stake storage s = stakes[msg.sender] */\n      swap1\n      pop\n        /* \"contracts/LiquidityAccelerationToken.sol\":10504:10505  0 */\n      0x00\n        /* \"contracts/LiquidityAccelerationToken.sol\":10488:10489  s */\n      dup2\n        /* \"contracts/LiquidityAccelerationToken.sol\":10488:10500  s.stakeStart */\n      0x02\n      add\n      sload\n        /* \"contracts/LiquidityAccelerationToken.sol\":10488:10505  s.stakeStart == 0 */\n      sub\n        /* \"contracts/LiquidityAccelerationToken.sol\":10484:10737  if (s.stakeStart == 0) {... */\n      tag_203\n      jumpi\n        /* \"contracts/LiquidityAccelerationToken.sol\":10536:10551  block.timestamp */\n      timestamp\n        /* \"contracts/LiquidityAccelerationToken.sol\":10521:10522  s */\n      dup2\n        /* \"contracts/LiquidityAccelerationToken.sol\":10521:10533  s.stakeStart */\n      0x02\n      add\n        /* \"contracts/LiquidityAccelerationToken.sol\":10521:10551  s.stakeStart = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/LiquidityAccelerationToken.sol\":10592:10595  100 */\n      0x64\n        /* \"contracts/LiquidityAccelerationToken.sol\":10565:10577  stakedWeight */\n      0x19\n        /* \"contracts/LiquidityAccelerationToken.sol\":10565:10589  stakedWeight[msg.sender] */\n      0x00\n        /* \"contracts/LiquidityAccelerationToken.sol\":10578:10588  msg.sender */\n      caller\n        /* \"contracts/LiquidityAccelerationToken.sol\":10565:10589  stakedWeight[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/LiquidityAccelerationToken.sol\":10565:10595  stakedWeight[msg.sender] = 100 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/LiquidityAccelerationToken.sol\":10484:10737  if (s.stakeStart == 0) {... */\n      jump(tag_204)\n    tag_203:\n        /* \"contracts/LiquidityAccelerationToken.sol\":10724:10726  10 */\n      0x0a\n        /* \"contracts/LiquidityAccelerationToken.sol\":10696:10708  stakedWeight */\n      0x19\n        /* \"contracts/LiquidityAccelerationToken.sol\":10696:10720  stakedWeight[msg.sender] */\n      0x00\n        /* \"contracts/LiquidityAccelerationToken.sol\":10709:10719  msg.sender */\n      caller\n        /* \"contracts/LiquidityAccelerationToken.sol\":10696:10720  stakedWeight[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/LiquidityAccelerationToken.sol\":10696:10726  stakedWeight[msg.sender] += 10 */\n      dup3\n      dup3\n      sload\n      tag_205\n      swap2\n      swap1\n      tag_206\n      jump\t// in\n    tag_205:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/LiquidityAccelerationToken.sol\":10484:10737  if (s.stakeStart == 0) {... */\n    tag_204:\n        /* \"contracts/LiquidityAccelerationToken.sol\":10758:10764  amount */\n      dup2\n        /* \"contracts/LiquidityAccelerationToken.sol\":10746:10747  s */\n      dup2\n        /* \"contracts/LiquidityAccelerationToken.sol\":10746:10754  s.amount */\n      0x00\n      add\n      0x00\n        /* \"contracts/LiquidityAccelerationToken.sol\":10746:10764  s.amount += amount */\n      dup3\n      dup3\n      sload\n      tag_207\n      swap2\n      swap1\n      tag_206\n      jump\t// in\n    tag_207:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/LiquidityAccelerationToken.sol\":10790:10805  block.timestamp */\n      timestamp\n        /* \"contracts/LiquidityAccelerationToken.sol\":10774:10775  s */\n      dup2\n        /* \"contracts/LiquidityAccelerationToken.sol\":10774:10787  s.lastUpdated */\n      0x01\n      add\n        /* \"contracts/LiquidityAccelerationToken.sol\":10774:10805  s.lastUpdated = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/LiquidityAccelerationToken.sol\":10830:10840  msg.sender */\n      caller\n        /* \"contracts/LiquidityAccelerationToken.sol\":10821:10849  StakeLat(msg.sender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x6afd9b8c734cbfeda8ba55afbdd1ac413bf617456b50196186371d2cc95b8572\n        /* \"contracts/LiquidityAccelerationToken.sol\":10842:10848  amount */\n      dup4\n        /* \"contracts/LiquidityAccelerationToken.sol\":10821:10849  StakeLat(msg.sender, amount) */\n      mload(0x40)\n      tag_208\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_208:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/LiquidityAccelerationToken.sol\":10221:10856  {... */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_209\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_210\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_209:\n        /* \"contracts/LiquidityAccelerationToken.sol\":10151:10856  function stakeLat(uint256 amount) external whenNotPaused nonReentrant {... */\n      pop\n      jump\t// out\n        /* \"contracts/LiquidityAccelerationToken.sol\":3134:3184  mapping(address => TraderStats) public traderStats */\n    tag_60:\n      mstore(0x20, 0x17)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      dup1\n      0x03\n      add\n      sload\n      swap1\n      pop\n      dup5\n      jump\t// out\n        /* \"contracts/LiquidityAccelerationToken.sol\":1398:1423  ILatToken public latToken */\n    tag_64:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/LiquidityAccelerationToken.sol\":2408:2431  bool public initialized */\n    tag_68:\n      0x11\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/LiquidityAccelerationToken.sol\":1766:1804  uint256 public earlyWithdrawalFee = 10 */\n    tag_72:\n      sload(0x0b)\n      dup2\n      jump\t// out\n        /* \"contracts/LiquidityAccelerationToken.sol\":3325:3364  mapping(address => Stake) public stakes */\n    tag_76:\n      mstore(0x20, 0x18)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      pop\n      dup4\n      jump\t// out\n        /* \"contracts/LiquidityAccelerationToken.sol\":6563:6678  function setPaused(bool _paused) external onlyOwner {... */\n    tag_82:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_212\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_213\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_212:\n        /* \"contracts/LiquidityAccelerationToken.sol\":6634:6641  _paused */\n      dup1\n        /* \"contracts/LiquidityAccelerationToken.sol\":6625:6631  paused */\n      0x11\n      0x00\n        /* \"contracts/LiquidityAccelerationToken.sol\":6625:6641  paused = _paused */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/LiquidityAccelerationToken.sol\":6656:6671  Paused(_paused) */\n      0x0e2fb031ee032dc02d8011dc50b816eb450cf856abd8261680dac74f72165bd2\n        /* \"contracts/LiquidityAccelerationToken.sol\":6663:6670  _paused */\n      dup2\n        /* \"contracts/LiquidityAccelerationToken.sol\":6656:6671  Paused(_paused) */\n      mload(0x40)\n      tag_215\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_215:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/LiquidityAccelerationToken.sol\":6563:6678  function setPaused(bool _paused) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/LiquidityAccelerationToken.sol\":1726:1760  uint256 public poolBoostMultiplier */\n    tag_84:\n      sload(0x0a)\n      dup2\n      jump\t// out\n        /* \"contracts/LiquidityAccelerationToken.sol\":13034:13967  function withdrawStake(uint256 amount) external whenNotPaused nonReentrant {... */\n    tag_88:\n        /* \"contracts/LiquidityAccelerationToken.sol\":4612:4618  paused */\n      0x11\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/LiquidityAccelerationToken.sol\":4611:4618  !paused */\n      iszero\n        /* \"contracts/LiquidityAccelerationToken.sol\":4603:4641  require(!paused, \"Contract is paused\") */\n      tag_217\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_218\n      swap1\n      tag_186\n      jump\t// in\n    tag_218:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_217:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_220\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_189\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_220:\n        /* \"contracts/LiquidityAccelerationToken.sol\":13127:13138  initialized */\n      0x11\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/LiquidityAccelerationToken.sol\":13119:13158  require(initialized, \"Not initialized\") */\n      tag_222\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_223\n      swap1\n      tag_193\n      jump\t// in\n    tag_223:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_222:\n        /* \"contracts/LiquidityAccelerationToken.sol\":13168:13183  Stake storage s */\n      0x00\n        /* \"contracts/LiquidityAccelerationToken.sol\":13186:13192  stakes */\n      0x18\n        /* \"contracts/LiquidityAccelerationToken.sol\":13186:13204  stakes[msg.sender] */\n      0x00\n        /* \"contracts/LiquidityAccelerationToken.sol\":13193:13203  msg.sender */\n      caller\n        /* \"contracts/LiquidityAccelerationToken.sol\":13186:13204  stakes[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/LiquidityAccelerationToken.sol\":13168:13204  Stake storage s = stakes[msg.sender] */\n      swap1\n      pop\n        /* \"contracts/LiquidityAccelerationToken.sol\":13232:13233  s */\n      dup1\n        /* \"contracts/LiquidityAccelerationToken.sol\":13232:13240  s.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/LiquidityAccelerationToken.sol\":13222:13228  amount */\n      dup3\n        /* \"contracts/LiquidityAccelerationToken.sol\":13222:13240  amount <= s.amount */\n      gt\n      iszero\n        /* \"contracts/LiquidityAccelerationToken.sol\":13214:13271  require(amount <= s.amount, \"Insufficient staked amount\") */\n      tag_224\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_225\n      swap1\n      tag_226\n      jump\t// in\n    tag_225:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_224:\n        /* \"contracts/LiquidityAccelerationToken.sol\":13282:13297  uint256 penalty */\n      0x00\n        /* \"contracts/LiquidityAccelerationToken.sol\":13300:13301  0 */\n      0x00\n        /* \"contracts/LiquidityAccelerationToken.sol\":13282:13301  uint256 penalty = 0 */\n      swap1\n      pop\n        /* \"contracts/LiquidityAccelerationToken.sol\":13430:13436  7 days */\n      0x093a80\n        /* \"contracts/LiquidityAccelerationToken.sol\":13415:13416  s */\n      dup3\n        /* \"contracts/LiquidityAccelerationToken.sol\":13415:13427  s.stakeStart */\n      0x02\n      add\n      sload\n        /* \"contracts/LiquidityAccelerationToken.sol\":13415:13436  s.stakeStart + 7 days */\n      tag_227\n      swap2\n      swap1\n      tag_206\n      jump\t// in\n    tag_227:\n        /* \"contracts/LiquidityAccelerationToken.sol\":13397:13412  block.timestamp */\n      timestamp\n        /* \"contracts/LiquidityAccelerationToken.sol\":13397:13436  block.timestamp < s.stakeStart + 7 days */\n      lt\n        /* \"contracts/LiquidityAccelerationToken.sol\":13393:13508  if (block.timestamp < s.stakeStart + 7 days) {... */\n      iszero\n      tag_228\n      jumpi\n        /* \"contracts/LiquidityAccelerationToken.sol\":13494:13497  100 */\n      0x64\n        /* \"contracts/LiquidityAccelerationToken.sol\":13472:13490  earlyWithdrawalFee */\n      sload(0x0b)\n        /* \"contracts/LiquidityAccelerationToken.sol\":13463:13469  amount */\n      dup5\n        /* \"contracts/LiquidityAccelerationToken.sol\":13463:13490  amount * earlyWithdrawalFee */\n      tag_229\n      swap2\n      swap1\n      tag_230\n      jump\t// in\n    tag_229:\n        /* \"contracts/LiquidityAccelerationToken.sol\":13462:13497  (amount * earlyWithdrawalFee) / 100 */\n      tag_231\n      swap2\n      swap1\n      tag_232\n      jump\t// in\n    tag_231:\n        /* \"contracts/LiquidityAccelerationToken.sol\":13452:13497  penalty = (amount * earlyWithdrawalFee) / 100 */\n      swap1\n      pop\n        /* \"contracts/LiquidityAccelerationToken.sol\":13393:13508  if (block.timestamp < s.stakeStart + 7 days) {... */\n    tag_228:\n        /* \"contracts/LiquidityAccelerationToken.sol\":13517:13543  uint256 amountAfterPenalty */\n      0x00\n        /* \"contracts/LiquidityAccelerationToken.sol\":13555:13562  penalty */\n      dup2\n        /* \"contracts/LiquidityAccelerationToken.sol\":13546:13552  amount */\n      dup5\n        /* \"contracts/LiquidityAccelerationToken.sol\":13546:13562  amount - penalty */\n      tag_233\n      swap2\n      swap1\n      tag_234\n      jump\t// in\n    tag_233:\n        /* \"contracts/LiquidityAccelerationToken.sol\":13517:13562  uint256 amountAfterPenalty = amount - penalty */\n      swap1\n      pop\n        /* \"contracts/LiquidityAccelerationToken.sol\":13584:13590  amount */\n      dup4\n        /* \"contracts/LiquidityAccelerationToken.sol\":13572:13573  s */\n      dup4\n        /* \"contracts/LiquidityAccelerationToken.sol\":13572:13580  s.amount */\n      0x00\n      add\n      0x00\n        /* \"contracts/LiquidityAccelerationToken.sol\":13572:13590  s.amount -= amount */\n      dup3\n      dup3\n      sload\n      tag_235\n      swap2\n      swap1\n      tag_234\n      jump\t// in\n    tag_235:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/LiquidityAccelerationToken.sol\":13676:13688  vaultAddress */\n      0x1b\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/LiquidityAccelerationToken.sol\":13661:13698  ITreasuryVault(vaultAddress).withdraw */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf3fef3a3\n        /* \"contracts/LiquidityAccelerationToken.sol\":13699:13709  msg.sender */\n      caller\n        /* \"contracts/LiquidityAccelerationToken.sol\":13711:13729  amountAfterPenalty */\n      dup4\n        /* \"contracts/LiquidityAccelerationToken.sol\":13661:13730  ITreasuryVault(vaultAddress).withdraw(msg.sender, amountAfterPenalty) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_236\n      swap3\n      swap2\n      swap1\n      tag_237\n      jump\t// in\n    tag_236:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_238\n      jumpi\n      revert(0x00, 0x00)\n    tag_238:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_240\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_240:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/LiquidityAccelerationToken.sol\":13807:13808  0 */\n      0x00\n        /* \"contracts/LiquidityAccelerationToken.sol\":13797:13804  penalty */\n      dup3\n        /* \"contracts/LiquidityAccelerationToken.sol\":13797:13808  penalty > 0 */\n      gt\n        /* \"contracts/LiquidityAccelerationToken.sol\":13793:13890  if (penalty > 0) {... */\n      iszero\n      tag_241\n      jumpi\n        /* \"contracts/LiquidityAccelerationToken.sol\":13839:13851  vaultAddress */\n      0x1b\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/LiquidityAccelerationToken.sol\":13824:13861  ITreasuryVault(vaultAddress).withdraw */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf3fef3a3\n        /* \"contracts/LiquidityAccelerationToken.sol\":13862:13869  owner() */\n      tag_242\n        /* \"contracts/LiquidityAccelerationToken.sol\":13862:13867  owner */\n      tag_139\n        /* \"contracts/LiquidityAccelerationToken.sol\":13862:13869  owner() */\n      jump\t// in\n    tag_242:\n        /* \"contracts/LiquidityAccelerationToken.sol\":13871:13878  penalty */\n      dup5\n        /* \"contracts/LiquidityAccelerationToken.sol\":13824:13879  ITreasuryVault(vaultAddress).withdraw(owner(), penalty) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_243\n      swap3\n      swap2\n      swap1\n      tag_237\n      jump\t// in\n    tag_243:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_244\n      jumpi\n      revert(0x00, 0x00)\n    tag_244:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_246\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_246:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/LiquidityAccelerationToken.sol\":13793:13890  if (penalty > 0) {... */\n    tag_241:\n        /* \"contracts/LiquidityAccelerationToken.sol\":13920:13930  msg.sender */\n      caller\n        /* \"contracts/LiquidityAccelerationToken.sol\":13905:13960  StakeWithdrawn(msg.sender, amountAfterPenalty, penalty) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x933735aa8de6d7547d0126171b2f31b9c34dd00f3ecd4be85a0ba047db4fafef\n        /* \"contracts/LiquidityAccelerationToken.sol\":13932:13950  amountAfterPenalty */\n      dup3\n        /* \"contracts/LiquidityAccelerationToken.sol\":13952:13959  penalty */\n      dup5\n        /* \"contracts/LiquidityAccelerationToken.sol\":13905:13960  StakeWithdrawn(msg.sender, amountAfterPenalty, penalty) */\n      mload(0x40)\n      tag_247\n      swap3\n      swap2\n      swap1\n      tag_248\n      jump\t// in\n    tag_247:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/LiquidityAccelerationToken.sol\":13109:13967  {... */\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_249\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_210\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_249:\n        /* \"contracts/LiquidityAccelerationToken.sol\":13034:13967  function withdrawStake(uint256 amount) external whenNotPaused nonReentrant {... */\n      pop\n      jump\t// out\n        /* \"contracts/LiquidityAccelerationToken.sol\":14337:14584  function updateLiquidityMultiplier(address trader, uint256 lpTokens) external onlyOwner {... */\n    tag_92:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_251\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_213\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_251:\n        /* \"contracts/LiquidityAccelerationToken.sol\":14481:14482  0 */\n      0x00\n        /* \"contracts/LiquidityAccelerationToken.sol\":14470:14478  lpTokens */\n      dup2\n        /* \"contracts/LiquidityAccelerationToken.sol\":14470:14482  lpTokens > 0 */\n      gt\n        /* \"contracts/LiquidityAccelerationToken.sol\":14470:14494  lpTokens > 0 ? 120 : 100 */\n      tag_253\n      jumpi\n        /* \"contracts/LiquidityAccelerationToken.sol\":14491:14494  100 */\n      0x64\n        /* \"contracts/LiquidityAccelerationToken.sol\":14470:14494  lpTokens > 0 ? 120 : 100 */\n      jump(tag_254)\n    tag_253:\n        /* \"contracts/LiquidityAccelerationToken.sol\":14485:14488  120 */\n      0x78\n        /* \"contracts/LiquidityAccelerationToken.sol\":14470:14494  lpTokens > 0 ? 120 : 100 */\n    tag_254:\n        /* \"contracts/LiquidityAccelerationToken.sol\":14435:14494  liquidityBoostMultiplier[trader] = lpTokens > 0 ? 120 : 100 */\n      0xff\n      and\n        /* \"contracts/LiquidityAccelerationToken.sol\":14435:14459  liquidityBoostMultiplier */\n      0x16\n        /* \"contracts/LiquidityAccelerationToken.sol\":14435:14467  liquidityBoostMultiplier[trader] */\n      0x00\n        /* \"contracts/LiquidityAccelerationToken.sol\":14460:14466  trader */\n      dup5\n        /* \"contracts/LiquidityAccelerationToken.sol\":14435:14467  liquidityBoostMultiplier[trader] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/LiquidityAccelerationToken.sol\":14435:14494  liquidityBoostMultiplier[trader] = lpTokens > 0 ? 120 : 100 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/LiquidityAccelerationToken.sol\":14536:14542  trader */\n      dup2\n        /* \"contracts/LiquidityAccelerationToken.sol\":14509:14577  LiquidityMultiplierUpdated(trader, liquidityBoostMultiplier[trader]) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xabcc9b515858a553f53609bb223669708665910a51030d923c842de23f099913\n        /* \"contracts/LiquidityAccelerationToken.sol\":14544:14568  liquidityBoostMultiplier */\n      0x16\n        /* \"contracts/LiquidityAccelerationToken.sol\":14544:14576  liquidityBoostMultiplier[trader] */\n      0x00\n        /* \"contracts/LiquidityAccelerationToken.sol\":14569:14575  trader */\n      dup6\n        /* \"contracts/LiquidityAccelerationToken.sol\":14544:14576  liquidityBoostMultiplier[trader] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/LiquidityAccelerationToken.sol\":14509:14577  LiquidityMultiplierUpdated(trader, liquidityBoostMultiplier[trader]) */\n      mload(0x40)\n      tag_255\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_255:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/LiquidityAccelerationToken.sol\":14337:14584  function updateLiquidityMultiplier(address trader, uint256 lpTokens) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/LiquidityAccelerationToken.sol\":3817:3844  address public vaultAddress */\n    tag_94:\n      0x1b\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/LiquidityAccelerationToken.sol\":3692:3750  mapping(address => VestingEntry[]) public vestingSchedules */\n    tag_99:\n      mstore(0x20, 0x1a)\n      dup2\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_256\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_256:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n      0x00\n      swap2\n      pop\n      swap2\n      pop\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      dup1\n      0x03\n      add\n      sload\n      swap1\n      pop\n      dup5\n      jump\t// out\n        /* \"contracts/LiquidityAccelerationToken.sol\":1933:1961  uint256 public epochDuration */\n    tag_102:\n      sload(0x0d)\n      dup2\n      jump\t// out\n        /* \"contracts/LiquidityAccelerationToken.sol\":1534:1565  uint256 public epochTradeVolume */\n    tag_105:\n      sload(0x06)\n      dup2\n      jump\t// out\n        /* \"contracts/LiquidityAccelerationToken.sol\":2890:2949  mapping(address => uint256) public liquidityBoostMultiplier */\n    tag_109:\n      mstore(0x20, 0x16)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/LiquidityAccelerationToken.sol\":3429:3476  mapping(address => uint256) public stakedWeight */\n    tag_113:\n      mstore(0x20, 0x19)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/LiquidityAccelerationToken.sol\":2332:2350  bool public paused */\n    tag_116:\n      0x11\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/LiquidityAccelerationToken.sol\":2710:2757  mapping(address => uint256) public makerRebates */\n    tag_120:\n      mstore(0x20, 0x14)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/LiquidityAccelerationToken.sol\":1686:1720  uint256 public poolVolumeThreshold */\n    tag_123:\n      sload(0x09)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_126:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_259\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_213\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_259:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_261\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_262\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_261:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/LiquidityAccelerationToken.sol\":2494:2535  mapping(address => uint256) public nonces */\n    tag_129:\n      mstore(0x20, 0x12)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/LiquidityAccelerationToken.sol\":2047:2094  uint256 public inactivitySlashingTime = 30 days */\n    tag_132:\n      sload(0x0e)\n      dup2\n      jump\t// out\n        /* \"contracts/LiquidityAccelerationToken.sol\":5603:6485  function initialize(... */\n    tag_137:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_264\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_213\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_264:\n        /* \"contracts/LiquidityAccelerationToken.sol\":5940:5951  initialized */\n      0x11\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/LiquidityAccelerationToken.sol\":5939:5951  !initialized */\n      iszero\n        /* \"contracts/LiquidityAccelerationToken.sol\":5931:5975  require(!initialized, \"Already initialized\") */\n      tag_266\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_267\n      swap1\n      tag_268\n      jump\t// in\n    tag_267:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_266:\n        /* \"contracts/LiquidityAccelerationToken.sol\":5996:6005  _latToken */\n      dup8\n        /* \"contracts/LiquidityAccelerationToken.sol\":5985:5993  latToken */\n      0x02\n      0x00\n        /* \"contracts/LiquidityAccelerationToken.sol\":5985:6005  latToken = _latToken */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/LiquidityAccelerationToken.sol\":6033:6049  _tradeRewardRate */\n      dup7\n        /* \"contracts/LiquidityAccelerationToken.sol\":6015:6030  tradeRewardRate */\n      0x03\n        /* \"contracts/LiquidityAccelerationToken.sol\":6015:6049  tradeRewardRate = _tradeRewardRate */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/LiquidityAccelerationToken.sol\":6077:6093  _stakeRewardRate */\n      dup6\n        /* \"contracts/LiquidityAccelerationToken.sol\":6059:6074  stakeRewardRate */\n      0x04\n        /* \"contracts/LiquidityAccelerationToken.sol\":6059:6093  stakeRewardRate = _stakeRewardRate */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/LiquidityAccelerationToken.sol\":6117:6118  0 */\n      0x00\n        /* \"contracts/LiquidityAccelerationToken.sol\":6103:6114  totalTrades */\n      0x05\n        /* \"contracts/LiquidityAccelerationToken.sol\":6103:6118  totalTrades = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/LiquidityAccelerationToken.sol\":6147:6148  0 */\n      0x00\n        /* \"contracts/LiquidityAccelerationToken.sol\":6128:6144  epochTradeVolume */\n      0x06\n        /* \"contracts/LiquidityAccelerationToken.sol\":6128:6148  epochTradeVolume = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/LiquidityAccelerationToken.sol\":6179:6198  _tradeEpochDuration */\n      dup5\n        /* \"contracts/LiquidityAccelerationToken.sol\":6158:6176  tradeEpochDuration */\n      0x07\n        /* \"contracts/LiquidityAccelerationToken.sol\":6158:6198  tradeEpochDuration = _tradeEpochDuration */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/LiquidityAccelerationToken.sol\":6228:6229  0 */\n      0x00\n        /* \"contracts/LiquidityAccelerationToken.sol\":6208:6225  poolTradingVolume */\n      0x08\n        /* \"contracts/LiquidityAccelerationToken.sol\":6208:6229  poolTradingVolume = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/LiquidityAccelerationToken.sol\":6261:6281  _poolVolumeThreshold */\n      dup4\n        /* \"contracts/LiquidityAccelerationToken.sol\":6239:6258  poolVolumeThreshold */\n      0x09\n        /* \"contracts/LiquidityAccelerationToken.sol\":6239:6281  poolVolumeThreshold = _poolVolumeThreshold */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/LiquidityAccelerationToken.sol\":6313:6333  _poolBoostMultiplier */\n      dup3\n        /* \"contracts/LiquidityAccelerationToken.sol\":6291:6310  poolBoostMultiplier */\n      0x0a\n        /* \"contracts/LiquidityAccelerationToken.sol\":6291:6333  poolBoostMultiplier = _poolBoostMultiplier */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/LiquidityAccelerationToken.sol\":6359:6373  _epochDuration */\n      dup2\n        /* \"contracts/LiquidityAccelerationToken.sol\":6343:6356  epochDuration */\n      0x0d\n        /* \"contracts/LiquidityAccelerationToken.sol\":6343:6373  epochDuration = _epochDuration */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/LiquidityAccelerationToken.sol\":6400:6412  block.number */\n      number\n        /* \"contracts/LiquidityAccelerationToken.sol\":6383:6397  lastEpochBlock */\n      0x0c\n        /* \"contracts/LiquidityAccelerationToken.sol\":6383:6412  lastEpochBlock = block.number */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/LiquidityAccelerationToken.sol\":6437:6450  _vaultAddress */\n      dup1\n        /* \"contracts/LiquidityAccelerationToken.sol\":6422:6434  vaultAddress */\n      0x1b\n      0x00\n        /* \"contracts/LiquidityAccelerationToken.sol\":6422:6450  vaultAddress = _vaultAddress */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/LiquidityAccelerationToken.sol\":6474:6478  true */\n      0x01\n        /* \"contracts/LiquidityAccelerationToken.sol\":6460:6471  initialized */\n      0x11\n      0x01\n        /* \"contracts/LiquidityAccelerationToken.sol\":6460:6478  initialized = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/LiquidityAccelerationToken.sol\":5603:6485  function initialize(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_139:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/LiquidityAccelerationToken.sol\":2100:2141  uint256 public inactivityPenaltyRate = 20 */\n    tag_142:\n      sload(0x0f)\n      dup2\n      jump\t// out\n        /* \"contracts/LiquidityAccelerationToken.sol\":1898:1927  uint256 public lastEpochBlock */\n    tag_145:\n      sload(0x0c)\n      dup2\n      jump\t// out\n        /* \"contracts/LiquidityAccelerationToken.sol\":1466:1496  uint256 public stakeRewardRate */\n    tag_148:\n      sload(0x04)\n      dup2\n      jump\t// out\n        /* \"contracts/LiquidityAccelerationToken.sol\":11155:12811  function claimStakeRewards(uint256 expectedNonce) external whenNotPaused nonReentrant {... */\n    tag_152:\n        /* \"contracts/LiquidityAccelerationToken.sol\":4612:4618  paused */\n      0x11\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/LiquidityAccelerationToken.sol\":4611:4618  !paused */\n      iszero\n        /* \"contracts/LiquidityAccelerationToken.sol\":4603:4641  require(!paused, \"Contract is paused\") */\n      tag_271\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_272\n      swap1\n      tag_186\n      jump\t// in\n    tag_272:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_271:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_274\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_189\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_274:\n        /* \"contracts/LiquidityAccelerationToken.sol\":11259:11270  initialized */\n      0x11\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/LiquidityAccelerationToken.sol\":11251:11290  require(initialized, \"Not initialized\") */\n      tag_276\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_277\n      swap1\n      tag_193\n      jump\t// in\n    tag_277:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_276:\n        /* \"contracts/LiquidityAccelerationToken.sol\":11330:11343  expectedNonce */\n      dup1\n        /* \"contracts/LiquidityAccelerationToken.sol\":11308:11314  nonces */\n      0x12\n        /* \"contracts/LiquidityAccelerationToken.sol\":11308:11326  nonces[msg.sender] */\n      0x00\n        /* \"contracts/LiquidityAccelerationToken.sol\":11315:11325  msg.sender */\n      caller\n        /* \"contracts/LiquidityAccelerationToken.sol\":11308:11326  nonces[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/LiquidityAccelerationToken.sol\":11308:11343  nonces[msg.sender] == expectedNonce */\n      eq\n        /* \"contracts/LiquidityAccelerationToken.sol\":11300:11361  require(nonces[msg.sender] == expectedNonce, \"Invalid nonce\") */\n      tag_278\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_279\n      swap1\n      tag_280\n      jump\t// in\n    tag_279:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_278:\n        /* \"contracts/LiquidityAccelerationToken.sol\":11371:11377  nonces */\n      0x12\n        /* \"contracts/LiquidityAccelerationToken.sol\":11371:11389  nonces[msg.sender] */\n      0x00\n        /* \"contracts/LiquidityAccelerationToken.sol\":11378:11388  msg.sender */\n      caller\n        /* \"contracts/LiquidityAccelerationToken.sol\":11371:11389  nonces[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/LiquidityAccelerationToken.sol\":11371:11391  nonces[msg.sender]++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_281\n      swap1\n      tag_282\n      jump\t// in\n    tag_281:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"contracts/LiquidityAccelerationToken.sol\":11402:11417  Stake storage s */\n      0x00\n        /* \"contracts/LiquidityAccelerationToken.sol\":11420:11426  stakes */\n      0x18\n        /* \"contracts/LiquidityAccelerationToken.sol\":11420:11438  stakes[msg.sender] */\n      0x00\n        /* \"contracts/LiquidityAccelerationToken.sol\":11427:11437  msg.sender */\n      caller\n        /* \"contracts/LiquidityAccelerationToken.sol\":11420:11438  stakes[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/LiquidityAccelerationToken.sol\":11402:11438  Stake storage s = stakes[msg.sender] */\n      swap1\n      pop\n        /* \"contracts/LiquidityAccelerationToken.sol\":11472:11473  0 */\n      0x00\n        /* \"contracts/LiquidityAccelerationToken.sol\":11456:11457  s */\n      dup2\n        /* \"contracts/LiquidityAccelerationToken.sol\":11456:11468  s.stakeStart */\n      0x02\n      add\n      sload\n        /* \"contracts/LiquidityAccelerationToken.sol\":11456:11473  s.stakeStart != 0 */\n      sub\n        /* \"contracts/LiquidityAccelerationToken.sol\":11448:11492  require(s.stakeStart != 0, \"No stake found\") */\n      tag_283\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_284\n      swap1\n      tag_285\n      jump\t// in\n    tag_284:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_283:\n        /* \"contracts/LiquidityAccelerationToken.sol\":11503:11518  uint256 elapsed */\n      0x00\n        /* \"contracts/LiquidityAccelerationToken.sol\":11539:11540  s */\n      dup2\n        /* \"contracts/LiquidityAccelerationToken.sol\":11539:11552  s.lastUpdated */\n      0x01\n      add\n      sload\n        /* \"contracts/LiquidityAccelerationToken.sol\":11521:11536  block.timestamp */\n      timestamp\n        /* \"contracts/LiquidityAccelerationToken.sol\":11521:11552  block.timestamp - s.lastUpdated */\n      tag_286\n      swap2\n      swap1\n      tag_234\n      jump\t// in\n    tag_286:\n        /* \"contracts/LiquidityAccelerationToken.sol\":11503:11552  uint256 elapsed = block.timestamp - s.lastUpdated */\n      swap1\n      pop\n        /* \"contracts/LiquidityAccelerationToken.sol\":11580:11581  0 */\n      0x00\n        /* \"contracts/LiquidityAccelerationToken.sol\":11570:11577  elapsed */\n      dup2\n        /* \"contracts/LiquidityAccelerationToken.sol\":11570:11581  elapsed > 0 */\n      gt\n        /* \"contracts/LiquidityAccelerationToken.sol\":11562:11601  require(elapsed > 0, \"No time elapsed\") */\n      tag_287\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_288\n      swap1\n      tag_289\n      jump\t// in\n    tag_288:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_287:\n        /* \"contracts/LiquidityAccelerationToken.sol\":11662:11694  uint256 effectiveStakeRewardRate */\n      0x00\n        /* \"contracts/LiquidityAccelerationToken.sol\":11697:11712  stakeRewardRate */\n      sload(0x04)\n        /* \"contracts/LiquidityAccelerationToken.sol\":11662:11712  uint256 effectiveStakeRewardRate = stakeRewardRate */\n      swap1\n      pop\n        /* \"contracts/LiquidityAccelerationToken.sol\":11746:11765  poolVolumeThreshold */\n      sload(0x09)\n        /* \"contracts/LiquidityAccelerationToken.sol\":11726:11743  poolTradingVolume */\n      sload(0x08)\n        /* \"contracts/LiquidityAccelerationToken.sol\":11726:11765  poolTradingVolume > poolVolumeThreshold */\n      gt\n        /* \"contracts/LiquidityAccelerationToken.sol\":11722:11864  if (poolTradingVolume > poolVolumeThreshold) {... */\n      iszero\n      tag_290\n      jumpi\n        /* \"contracts/LiquidityAccelerationToken.sol\":11850:11853  100 */\n      0x64\n        /* \"contracts/LiquidityAccelerationToken.sol\":11827:11846  poolBoostMultiplier */\n      sload(0x0a)\n        /* \"contracts/LiquidityAccelerationToken.sol\":11809:11824  stakeRewardRate */\n      sload(0x04)\n        /* \"contracts/LiquidityAccelerationToken.sol\":11809:11846  stakeRewardRate * poolBoostMultiplier */\n      tag_291\n      swap2\n      swap1\n      tag_230\n      jump\t// in\n    tag_291:\n        /* \"contracts/LiquidityAccelerationToken.sol\":11808:11853  (stakeRewardRate * poolBoostMultiplier) / 100 */\n      tag_292\n      swap2\n      swap1\n      tag_232\n      jump\t// in\n    tag_292:\n        /* \"contracts/LiquidityAccelerationToken.sol\":11781:11853  effectiveStakeRewardRate = (stakeRewardRate * poolBoostMultiplier) / 100 */\n      swap1\n      pop\n        /* \"contracts/LiquidityAccelerationToken.sol\":11722:11864  if (poolTradingVolume > poolVolumeThreshold) {... */\n    tag_290:\n        /* \"contracts/LiquidityAccelerationToken.sol\":11946:11973  uint256 liquidityMultiplier */\n      0x00\n        /* \"contracts/LiquidityAccelerationToken.sol\":12016:12017  0 */\n      0x00\n        /* \"contracts/LiquidityAccelerationToken.sol\":11976:12000  liquidityBoostMultiplier */\n      0x16\n        /* \"contracts/LiquidityAccelerationToken.sol\":11976:12012  liquidityBoostMultiplier[msg.sender] */\n      0x00\n        /* \"contracts/LiquidityAccelerationToken.sol\":12001:12011  msg.sender */\n      caller\n        /* \"contracts/LiquidityAccelerationToken.sol\":11976:12012  liquidityBoostMultiplier[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/LiquidityAccelerationToken.sol\":11976:12017  liquidityBoostMultiplier[msg.sender] == 0 */\n      eq\n        /* \"contracts/LiquidityAccelerationToken.sol\":11976:12086  liquidityBoostMultiplier[msg.sender] == 0... */\n      tag_293\n      jumpi\n        /* \"contracts/LiquidityAccelerationToken.sol\":12050:12074  liquidityBoostMultiplier */\n      0x16\n        /* \"contracts/LiquidityAccelerationToken.sol\":12050:12086  liquidityBoostMultiplier[msg.sender] */\n      0x00\n        /* \"contracts/LiquidityAccelerationToken.sol\":12075:12085  msg.sender */\n      caller\n        /* \"contracts/LiquidityAccelerationToken.sol\":12050:12086  liquidityBoostMultiplier[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/LiquidityAccelerationToken.sol\":11976:12086  liquidityBoostMultiplier[msg.sender] == 0... */\n      jump(tag_294)\n    tag_293:\n        /* \"contracts/LiquidityAccelerationToken.sol\":12032:12035  100 */\n      0x64\n        /* \"contracts/LiquidityAccelerationToken.sol\":11976:12086  liquidityBoostMultiplier[msg.sender] == 0... */\n    tag_294:\n        /* \"contracts/LiquidityAccelerationToken.sol\":11946:12086  uint256 liquidityMultiplier = liquidityBoostMultiplier[msg.sender] == 0... */\n      swap1\n      pop\n        /* \"contracts/LiquidityAccelerationToken.sol\":12174:12177  100 */\n      0x64\n        /* \"contracts/LiquidityAccelerationToken.sol\":12151:12170  liquidityMultiplier */\n      dup2\n        /* \"contracts/LiquidityAccelerationToken.sol\":12124:12148  effectiveStakeRewardRate */\n      dup4\n        /* \"contracts/LiquidityAccelerationToken.sol\":12124:12170  effectiveStakeRewardRate * liquidityMultiplier */\n      tag_295\n      swap2\n      swap1\n      tag_230\n      jump\t// in\n    tag_295:\n        /* \"contracts/LiquidityAccelerationToken.sol\":12123:12177  (effectiveStakeRewardRate * liquidityMultiplier) / 100 */\n      tag_296\n      swap2\n      swap1\n      tag_232\n      jump\t// in\n    tag_296:\n        /* \"contracts/LiquidityAccelerationToken.sol\":12096:12177  effectiveStakeRewardRate = (effectiveStakeRewardRate * liquidityMultiplier) / 100 */\n      swap2\n      pop\n        /* \"contracts/LiquidityAccelerationToken.sol\":12224:12238  uint256 reward */\n      0x00\n        /* \"contracts/LiquidityAccelerationToken.sol\":12279:12286  elapsed */\n      dup4\n        /* \"contracts/LiquidityAccelerationToken.sol\":12252:12276  effectiveStakeRewardRate */\n      dup4\n        /* \"contracts/LiquidityAccelerationToken.sol\":12241:12242  s */\n      dup7\n        /* \"contracts/LiquidityAccelerationToken.sol\":12241:12249  s.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/LiquidityAccelerationToken.sol\":12241:12276  s.amount * effectiveStakeRewardRate */\n      tag_297\n      swap2\n      swap1\n      tag_230\n      jump\t// in\n    tag_297:\n        /* \"contracts/LiquidityAccelerationToken.sol\":12241:12286  s.amount * effectiveStakeRewardRate * elapsed */\n      tag_298\n      swap2\n      swap1\n      tag_230\n      jump\t// in\n    tag_298:\n        /* \"contracts/LiquidityAccelerationToken.sol\":12224:12286  uint256 reward = s.amount * effectiveStakeRewardRate * elapsed */\n      swap1\n      pop\n        /* \"contracts/LiquidityAccelerationToken.sol\":12387:12390  100 */\n      0x64\n        /* \"contracts/LiquidityAccelerationToken.sol\":12359:12371  stakedWeight */\n      0x19\n        /* \"contracts/LiquidityAccelerationToken.sol\":12359:12383  stakedWeight[msg.sender] */\n      0x00\n        /* \"contracts/LiquidityAccelerationToken.sol\":12372:12382  msg.sender */\n      caller\n        /* \"contracts/LiquidityAccelerationToken.sol\":12359:12383  stakedWeight[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/LiquidityAccelerationToken.sol\":12350:12356  reward */\n      dup3\n        /* \"contracts/LiquidityAccelerationToken.sol\":12350:12383  reward * stakedWeight[msg.sender] */\n      tag_299\n      swap2\n      swap1\n      tag_230\n      jump\t// in\n    tag_299:\n        /* \"contracts/LiquidityAccelerationToken.sol\":12349:12390  (reward * stakedWeight[msg.sender]) / 100 */\n      tag_300\n      swap2\n      swap1\n      tag_232\n      jump\t// in\n    tag_300:\n        /* \"contracts/LiquidityAccelerationToken.sol\":12340:12390  reward = (reward * stakedWeight[msg.sender]) / 100 */\n      swap1\n      pop\n        /* \"contracts/LiquidityAccelerationToken.sol\":12522:12544  inactivitySlashingTime */\n      sload(0x0e)\n        /* \"contracts/LiquidityAccelerationToken.sol\":12506:12507  s */\n      dup6\n        /* \"contracts/LiquidityAccelerationToken.sol\":12506:12519  s.lastUpdated */\n      0x01\n      add\n      sload\n        /* \"contracts/LiquidityAccelerationToken.sol\":12506:12544  s.lastUpdated + inactivitySlashingTime */\n      tag_301\n      swap2\n      swap1\n      tag_206\n      jump\t// in\n    tag_301:\n        /* \"contracts/LiquidityAccelerationToken.sol\":12488:12503  block.timestamp */\n      timestamp\n        /* \"contracts/LiquidityAccelerationToken.sol\":12488:12544  block.timestamp > s.lastUpdated + inactivitySlashingTime */\n      gt\n        /* \"contracts/LiquidityAccelerationToken.sol\":12484:12666  if (block.timestamp > s.lastUpdated + inactivitySlashingTime) {... */\n      iszero\n      tag_302\n      jumpi\n        /* \"contracts/LiquidityAccelerationToken.sol\":12560:12575  uint256 penalty */\n      0x00\n        /* \"contracts/LiquidityAccelerationToken.sol\":12613:12616  100 */\n      0x64\n        /* \"contracts/LiquidityAccelerationToken.sol\":12588:12609  inactivityPenaltyRate */\n      sload(0x0f)\n        /* \"contracts/LiquidityAccelerationToken.sol\":12579:12585  reward */\n      dup4\n        /* \"contracts/LiquidityAccelerationToken.sol\":12579:12609  reward * inactivityPenaltyRate */\n      tag_303\n      swap2\n      swap1\n      tag_230\n      jump\t// in\n    tag_303:\n        /* \"contracts/LiquidityAccelerationToken.sol\":12578:12616  (reward * inactivityPenaltyRate) / 100 */\n      tag_304\n      swap2\n      swap1\n      tag_232\n      jump\t// in\n    tag_304:\n        /* \"contracts/LiquidityAccelerationToken.sol\":12560:12616  uint256 penalty = (reward * inactivityPenaltyRate) / 100 */\n      swap1\n      pop\n        /* \"contracts/LiquidityAccelerationToken.sol\":12648:12655  penalty */\n      dup1\n        /* \"contracts/LiquidityAccelerationToken.sol\":12639:12645  reward */\n      dup3\n        /* \"contracts/LiquidityAccelerationToken.sol\":12639:12655  reward - penalty */\n      tag_305\n      swap2\n      swap1\n      tag_234\n      jump\t// in\n    tag_305:\n        /* \"contracts/LiquidityAccelerationToken.sol\":12630:12655  reward = reward - penalty */\n      swap2\n      pop\n        /* \"contracts/LiquidityAccelerationToken.sol\":12546:12666  {... */\n      pop\n        /* \"contracts/LiquidityAccelerationToken.sol\":12484:12666  if (block.timestamp > s.lastUpdated + inactivitySlashingTime) {... */\n    tag_302:\n        /* \"contracts/LiquidityAccelerationToken.sol\":12692:12707  block.timestamp */\n      timestamp\n        /* \"contracts/LiquidityAccelerationToken.sol\":12676:12677  s */\n      dup6\n        /* \"contracts/LiquidityAccelerationToken.sol\":12676:12689  s.lastUpdated */\n      0x01\n      add\n        /* \"contracts/LiquidityAccelerationToken.sol\":12676:12707  s.lastUpdated = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/LiquidityAccelerationToken.sol\":12717:12725  latToken */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/LiquidityAccelerationToken.sol\":12717:12730  latToken.mint */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x40c10f19\n        /* \"contracts/LiquidityAccelerationToken.sol\":12731:12741  msg.sender */\n      caller\n        /* \"contracts/LiquidityAccelerationToken.sol\":12743:12749  reward */\n      dup4\n        /* \"contracts/LiquidityAccelerationToken.sol\":12717:12750  latToken.mint(msg.sender, reward) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_306\n      swap3\n      swap2\n      swap1\n      tag_237\n      jump\t// in\n    tag_306:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_307\n      jumpi\n      revert(0x00, 0x00)\n    tag_307:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_309\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_309:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/LiquidityAccelerationToken.sol\":12785:12795  msg.sender */\n      caller\n        /* \"contracts/LiquidityAccelerationToken.sol\":12765:12804  StakeRewardsClaimed(msg.sender, reward) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x4dd465eb9d4bf90caf3400cc334c731b4cef0aa7f013e5d72f20b0cec2e30ea9\n        /* \"contracts/LiquidityAccelerationToken.sol\":12797:12803  reward */\n      dup3\n        /* \"contracts/LiquidityAccelerationToken.sol\":12765:12804  StakeRewardsClaimed(msg.sender, reward) */\n      mload(0x40)\n      tag_310\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_310:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/LiquidityAccelerationToken.sol\":11241:12811  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_311\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_210\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_311:\n        /* \"contracts/LiquidityAccelerationToken.sol\":11155:12811  function claimStakeRewards(uint256 expectedNonce) external whenNotPaused nonReentrant {... */\n      pop\n      jump\t// out\n        /* \"contracts/LiquidityAccelerationToken.sol\":1502:1528  uint256 public totalTrades */\n    tag_154:\n      sload(0x05)\n      dup2\n      jump\t// out\n        /* \"contracts/LiquidityAccelerationToken.sol\":8805:9748  function claimTradeRewards(uint256 expectedNonce, bytes memory signature) external whenNotPaused nonReentrant {... */\n    tag_159:\n        /* \"contracts/LiquidityAccelerationToken.sol\":4612:4618  paused */\n      0x11\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/LiquidityAccelerationToken.sol\":4611:4618  !paused */\n      iszero\n        /* \"contracts/LiquidityAccelerationToken.sol\":4603:4641  require(!paused, \"Contract is paused\") */\n      tag_313\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_314\n      swap1\n      tag_186\n      jump\t// in\n    tag_314:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_313:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_316\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_189\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_316:\n        /* \"contracts/LiquidityAccelerationToken.sol\":8933:8944  initialized */\n      0x11\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/LiquidityAccelerationToken.sol\":8925:8964  require(initialized, \"Not initialized\") */\n      tag_318\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_319\n      swap1\n      tag_193\n      jump\t// in\n    tag_319:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_318:\n        /* \"contracts/LiquidityAccelerationToken.sol\":9004:9017  expectedNonce */\n      dup2\n        /* \"contracts/LiquidityAccelerationToken.sol\":8982:8988  nonces */\n      0x12\n        /* \"contracts/LiquidityAccelerationToken.sol\":8982:9000  nonces[msg.sender] */\n      0x00\n        /* \"contracts/LiquidityAccelerationToken.sol\":8989:8999  msg.sender */\n      caller\n        /* \"contracts/LiquidityAccelerationToken.sol\":8982:9000  nonces[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/LiquidityAccelerationToken.sol\":8982:9017  nonces[msg.sender] == expectedNonce */\n      eq\n        /* \"contracts/LiquidityAccelerationToken.sol\":8974:9035  require(nonces[msg.sender] == expectedNonce, \"Invalid nonce\") */\n      tag_320\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_321\n      swap1\n      tag_280\n      jump\t// in\n    tag_321:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_320:\n        /* \"contracts/LiquidityAccelerationToken.sol\":9053:9106  verifySignature(msg.sender, expectedNonce, signature) */\n      tag_322\n        /* \"contracts/LiquidityAccelerationToken.sol\":9069:9079  msg.sender */\n      caller\n        /* \"contracts/LiquidityAccelerationToken.sol\":9081:9094  expectedNonce */\n      dup4\n        /* \"contracts/LiquidityAccelerationToken.sol\":9096:9105  signature */\n      dup4\n        /* \"contracts/LiquidityAccelerationToken.sol\":9053:9068  verifySignature */\n      tag_323\n        /* \"contracts/LiquidityAccelerationToken.sol\":9053:9106  verifySignature(msg.sender, expectedNonce, signature) */\n      jump\t// in\n    tag_322:\n        /* \"contracts/LiquidityAccelerationToken.sol\":9045:9128  require(verifySignature(msg.sender, expectedNonce, signature), \"Invalid signature\") */\n      tag_324\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_325\n      swap1\n      tag_326\n      jump\t// in\n    tag_325:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_324:\n        /* \"contracts/LiquidityAccelerationToken.sol\":9139:9145  nonces */\n      0x12\n        /* \"contracts/LiquidityAccelerationToken.sol\":9139:9157  nonces[msg.sender] */\n      0x00\n        /* \"contracts/LiquidityAccelerationToken.sol\":9146:9156  msg.sender */\n      caller\n        /* \"contracts/LiquidityAccelerationToken.sol\":9139:9157  nonces[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/LiquidityAccelerationToken.sol\":9139:9159  nonces[msg.sender]++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_327\n      swap1\n      tag_282\n      jump\t// in\n    tag_327:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"contracts/LiquidityAccelerationToken.sol\":9170:9195  TraderStats storage stats */\n      0x00\n        /* \"contracts/LiquidityAccelerationToken.sol\":9198:9209  traderStats */\n      0x17\n        /* \"contracts/LiquidityAccelerationToken.sol\":9198:9221  traderStats[msg.sender] */\n      0x00\n        /* \"contracts/LiquidityAccelerationToken.sol\":9210:9220  msg.sender */\n      caller\n        /* \"contracts/LiquidityAccelerationToken.sol\":9198:9221  traderStats[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/LiquidityAccelerationToken.sol\":9170:9221  TraderStats storage stats = traderStats[msg.sender] */\n      swap1\n      pop\n        /* \"contracts/LiquidityAccelerationToken.sol\":9276:9294  tradeEpochDuration */\n      sload(0x07)\n        /* \"contracts/LiquidityAccelerationToken.sol\":9258:9263  stats */\n      dup2\n        /* \"contracts/LiquidityAccelerationToken.sol\":9258:9273  stats.lastClaim */\n      0x03\n      add\n      sload\n        /* \"contracts/LiquidityAccelerationToken.sol\":9258:9294  stats.lastClaim + tradeEpochDuration */\n      tag_328\n      swap2\n      swap1\n      tag_206\n      jump\t// in\n    tag_328:\n        /* \"contracts/LiquidityAccelerationToken.sol\":9239:9254  block.timestamp */\n      timestamp\n        /* \"contracts/LiquidityAccelerationToken.sol\":9239:9294  block.timestamp >= stats.lastClaim + tradeEpochDuration */\n      lt\n      iszero\n        /* \"contracts/LiquidityAccelerationToken.sol\":9231:9323  require(block.timestamp >= stats.lastClaim + tradeEpochDuration, \"Epoch duration not ended\") */\n      tag_329\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_330\n      swap1\n      tag_331\n      jump\t// in\n    tag_330:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_329:\n        /* \"contracts/LiquidityAccelerationToken.sol\":9333:9347  uint256 reward */\n      0x00\n        /* \"contracts/LiquidityAccelerationToken.sol\":9350:9355  stats */\n      dup2\n        /* \"contracts/LiquidityAccelerationToken.sol\":9350:9375  stats.pendingTradeRewards */\n      0x02\n      add\n      sload\n        /* \"contracts/LiquidityAccelerationToken.sol\":9333:9375  uint256 reward = stats.pendingTradeRewards */\n      swap1\n      pop\n        /* \"contracts/LiquidityAccelerationToken.sol\":9402:9403  0 */\n      0x00\n        /* \"contracts/LiquidityAccelerationToken.sol\":9393:9399  reward */\n      dup2\n        /* \"contracts/LiquidityAccelerationToken.sol\":9393:9403  reward > 0 */\n      gt\n        /* \"contracts/LiquidityAccelerationToken.sol\":9385:9426  require(reward > 0, \"No pending rewards\") */\n      tag_332\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_333\n      swap1\n      tag_334\n      jump\t// in\n    tag_333:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_332:\n        /* \"contracts/LiquidityAccelerationToken.sol\":9454:9466  maxClaimable */\n      sload(0x10)\n        /* \"contracts/LiquidityAccelerationToken.sol\":9444:9450  reward */\n      dup2\n        /* \"contracts/LiquidityAccelerationToken.sol\":9444:9466  reward <= maxClaimable */\n      gt\n      iszero\n        /* \"contracts/LiquidityAccelerationToken.sol\":9436:9499  require(reward <= maxClaimable, \"Reward exceeds max claimable\") */\n      tag_335\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_336\n      swap1\n      tag_337\n      jump\t// in\n    tag_336:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_335:\n        /* \"contracts/LiquidityAccelerationToken.sol\":9599:9600  0 */\n      0x00\n        /* \"contracts/LiquidityAccelerationToken.sol\":9571:9576  stats */\n      dup3\n        /* \"contracts/LiquidityAccelerationToken.sol\":9571:9596  stats.pendingTradeRewards */\n      0x02\n      add\n        /* \"contracts/LiquidityAccelerationToken.sol\":9571:9600  stats.pendingTradeRewards = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/LiquidityAccelerationToken.sol\":9628:9643  block.timestamp */\n      timestamp\n        /* \"contracts/LiquidityAccelerationToken.sol\":9610:9615  stats */\n      dup3\n        /* \"contracts/LiquidityAccelerationToken.sol\":9610:9625  stats.lastClaim */\n      0x03\n      add\n        /* \"contracts/LiquidityAccelerationToken.sol\":9610:9643  stats.lastClaim = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/LiquidityAccelerationToken.sol\":9654:9662  latToken */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/LiquidityAccelerationToken.sol\":9654:9667  latToken.mint */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x40c10f19\n        /* \"contracts/LiquidityAccelerationToken.sol\":9668:9678  msg.sender */\n      caller\n        /* \"contracts/LiquidityAccelerationToken.sol\":9680:9686  reward */\n      dup4\n        /* \"contracts/LiquidityAccelerationToken.sol\":9654:9687  latToken.mint(msg.sender, reward) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_338\n      swap3\n      swap2\n      swap1\n      tag_237\n      jump\t// in\n    tag_338:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_339\n      jumpi\n      revert(0x00, 0x00)\n    tag_339:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_341\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_341:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/LiquidityAccelerationToken.sol\":9722:9732  msg.sender */\n      caller\n        /* \"contracts/LiquidityAccelerationToken.sol\":9702:9741  TradeRewardsClaimed(msg.sender, reward) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xb127973bf29d1dae6424fef4f7461e0b9c444636ab23a8392d9969500034a13d\n        /* \"contracts/LiquidityAccelerationToken.sol\":9734:9740  reward */\n      dup3\n        /* \"contracts/LiquidityAccelerationToken.sol\":9702:9741  TradeRewardsClaimed(msg.sender, reward) */\n      mload(0x40)\n      tag_342\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_342:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/LiquidityAccelerationToken.sol\":8915:9748  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_343\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_210\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_343:\n        /* \"contracts/LiquidityAccelerationToken.sol\":8805:9748  function claimTradeRewards(uint256 expectedNonce, bytes memory signature) external whenNotPaused nonReentrant {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/LiquidityAccelerationToken.sol\":7128:8484  function recordTrade(uint256 tradeVolume, bool isMaker) external whenNotPaused nonReentrant {... */\n    tag_163:\n        /* \"contracts/LiquidityAccelerationToken.sol\":4612:4618  paused */\n      0x11\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/LiquidityAccelerationToken.sol\":4611:4618  !paused */\n      iszero\n        /* \"contracts/LiquidityAccelerationToken.sol\":4603:4641  require(!paused, \"Contract is paused\") */\n      tag_345\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_346\n      swap1\n      tag_186\n      jump\t// in\n    tag_346:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_345:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_348\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_189\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_348:\n        /* \"contracts/LiquidityAccelerationToken.sol\":7238:7249  initialized */\n      0x11\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/LiquidityAccelerationToken.sol\":7230:7269  require(initialized, \"Not initialized\") */\n      tag_350\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_351\n      swap1\n      tag_193\n      jump\t// in\n    tag_351:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_350:\n        /* \"contracts/LiquidityAccelerationToken.sol\":7411:7424  epochDuration */\n      sload(0x0d)\n        /* \"contracts/LiquidityAccelerationToken.sol\":7394:7408  lastEpochBlock */\n      sload(0x0c)\n        /* \"contracts/LiquidityAccelerationToken.sol\":7394:7424  lastEpochBlock + epochDuration */\n      tag_352\n      swap2\n      swap1\n      tag_206\n      jump\t// in\n    tag_352:\n        /* \"contracts/LiquidityAccelerationToken.sol\":7378:7390  block.number */\n      number\n        /* \"contracts/LiquidityAccelerationToken.sol\":7378:7424  block.number >= lastEpochBlock + epochDuration */\n      lt\n        /* \"contracts/LiquidityAccelerationToken.sol\":7374:7514  if (block.number >= lastEpochBlock + epochDuration) {... */\n      tag_353\n      jumpi\n        /* \"contracts/LiquidityAccelerationToken.sol\":7459:7460  0 */\n      0x00\n        /* \"contracts/LiquidityAccelerationToken.sol\":7440:7456  epochTradeVolume */\n      0x06\n        /* \"contracts/LiquidityAccelerationToken.sol\":7440:7460  epochTradeVolume = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/LiquidityAccelerationToken.sol\":7491:7503  block.number */\n      number\n        /* \"contracts/LiquidityAccelerationToken.sol\":7474:7488  lastEpochBlock */\n      0x0c\n        /* \"contracts/LiquidityAccelerationToken.sol\":7474:7503  lastEpochBlock = block.number */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/LiquidityAccelerationToken.sol\":7374:7514  if (block.number >= lastEpochBlock + epochDuration) {... */\n    tag_353:\n        /* \"contracts/LiquidityAccelerationToken.sol\":7539:7540  1 */\n      0x01\n        /* \"contracts/LiquidityAccelerationToken.sol\":7524:7535  totalTrades */\n      0x05\n      0x00\n        /* \"contracts/LiquidityAccelerationToken.sol\":7524:7540  totalTrades += 1 */\n      dup3\n      dup3\n      sload\n      tag_354\n      swap2\n      swap1\n      tag_206\n      jump\t// in\n    tag_354:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/LiquidityAccelerationToken.sol\":7570:7581  tradeVolume */\n      dup2\n        /* \"contracts/LiquidityAccelerationToken.sol\":7550:7566  epochTradeVolume */\n      0x06\n      0x00\n        /* \"contracts/LiquidityAccelerationToken.sol\":7550:7581  epochTradeVolume += tradeVolume */\n      dup3\n      dup3\n      sload\n      tag_355\n      swap2\n      swap1\n      tag_206\n      jump\t// in\n    tag_355:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/LiquidityAccelerationToken.sol\":7612:7623  tradeVolume */\n      dup2\n        /* \"contracts/LiquidityAccelerationToken.sol\":7591:7608  poolTradingVolume */\n      0x08\n      0x00\n        /* \"contracts/LiquidityAccelerationToken.sol\":7591:7623  poolTradingVolume += tradeVolume */\n      dup3\n      dup3\n      sload\n      tag_356\n      swap2\n      swap1\n      tag_206\n      jump\t// in\n    tag_356:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/LiquidityAccelerationToken.sol\":7634:7659  TraderStats storage stats */\n      0x00\n        /* \"contracts/LiquidityAccelerationToken.sol\":7662:7673  traderStats */\n      0x17\n        /* \"contracts/LiquidityAccelerationToken.sol\":7662:7685  traderStats[msg.sender] */\n      0x00\n        /* \"contracts/LiquidityAccelerationToken.sol\":7674:7684  msg.sender */\n      caller\n        /* \"contracts/LiquidityAccelerationToken.sol\":7662:7685  traderStats[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/LiquidityAccelerationToken.sol\":7634:7685  TraderStats storage stats = traderStats[msg.sender] */\n      swap1\n      pop\n        /* \"contracts/LiquidityAccelerationToken.sol\":7715:7716  1 */\n      0x01\n        /* \"contracts/LiquidityAccelerationToken.sol\":7695:7700  stats */\n      dup2\n        /* \"contracts/LiquidityAccelerationToken.sol\":7695:7711  stats.tradeCount */\n      0x00\n      add\n      0x00\n        /* \"contracts/LiquidityAccelerationToken.sol\":7695:7716  stats.tradeCount += 1 */\n      dup3\n      dup3\n      sload\n      tag_357\n      swap2\n      swap1\n      tag_206\n      jump\t// in\n    tag_357:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/LiquidityAccelerationToken.sol\":7747:7758  tradeVolume */\n      dup3\n        /* \"contracts/LiquidityAccelerationToken.sol\":7726:7731  stats */\n      dup2\n        /* \"contracts/LiquidityAccelerationToken.sol\":7726:7743  stats.totalVolume */\n      0x01\n      add\n      0x00\n        /* \"contracts/LiquidityAccelerationToken.sol\":7726:7758  stats.totalVolume += tradeVolume */\n      dup3\n      dup3\n      sload\n      tag_358\n      swap2\n      swap1\n      tag_206\n      jump\t// in\n    tag_358:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/LiquidityAccelerationToken.sol\":7848:7866  uint256 multiplier */\n      0x00\n        /* \"contracts/LiquidityAccelerationToken.sol\":7888:7907  poolVolumeThreshold */\n      sload(0x09)\n        /* \"contracts/LiquidityAccelerationToken.sol\":7869:7885  epochTradeVolume */\n      sload(0x06)\n        /* \"contracts/LiquidityAccelerationToken.sol\":7869:7907  epochTradeVolume < poolVolumeThreshold */\n      lt\n        /* \"contracts/LiquidityAccelerationToken.sol\":7869:7919  epochTradeVolume < poolVolumeThreshold ? 150 : 100 */\n      tag_359\n      jumpi\n        /* \"contracts/LiquidityAccelerationToken.sol\":7916:7919  100 */\n      0x64\n        /* \"contracts/LiquidityAccelerationToken.sol\":7869:7919  epochTradeVolume < poolVolumeThreshold ? 150 : 100 */\n      jump(tag_360)\n    tag_359:\n        /* \"contracts/LiquidityAccelerationToken.sol\":7910:7913  150 */\n      0x96\n        /* \"contracts/LiquidityAccelerationToken.sol\":7869:7919  epochTradeVolume < poolVolumeThreshold ? 150 : 100 */\n    tag_360:\n        /* \"contracts/LiquidityAccelerationToken.sol\":7848:7919  uint256 multiplier = epochTradeVolume < poolVolumeThreshold ? 150 : 100 */\n      0xff\n      and\n      swap1\n      pop\n        /* \"contracts/LiquidityAccelerationToken.sol\":7929:7943  uint256 reward */\n      0x00\n        /* \"contracts/LiquidityAccelerationToken.sol\":7993:7996  100 */\n      0x64\n        /* \"contracts/LiquidityAccelerationToken.sol\":7979:7989  multiplier */\n      dup3\n        /* \"contracts/LiquidityAccelerationToken.sol\":7961:7976  tradeRewardRate */\n      sload(0x03)\n        /* \"contracts/LiquidityAccelerationToken.sol\":7947:7958  tradeVolume */\n      dup8\n        /* \"contracts/LiquidityAccelerationToken.sol\":7947:7976  tradeVolume * tradeRewardRate */\n      tag_361\n      swap2\n      swap1\n      tag_230\n      jump\t// in\n    tag_361:\n        /* \"contracts/LiquidityAccelerationToken.sol\":7947:7989  tradeVolume * tradeRewardRate * multiplier */\n      tag_362\n      swap2\n      swap1\n      tag_230\n      jump\t// in\n    tag_362:\n        /* \"contracts/LiquidityAccelerationToken.sol\":7946:7996  (tradeVolume * tradeRewardRate * multiplier) / 100 */\n      tag_363\n      swap2\n      swap1\n      tag_232\n      jump\t// in\n    tag_363:\n        /* \"contracts/LiquidityAccelerationToken.sol\":7929:7996  uint256 reward = (tradeVolume * tradeRewardRate * multiplier) / 100 */\n      swap1\n      pop\n        /* \"contracts/LiquidityAccelerationToken.sol\":8035:8041  reward */\n      dup1\n        /* \"contracts/LiquidityAccelerationToken.sol\":8006:8011  stats */\n      dup4\n        /* \"contracts/LiquidityAccelerationToken.sol\":8006:8031  stats.pendingTradeRewards */\n      0x02\n      add\n      0x00\n        /* \"contracts/LiquidityAccelerationToken.sol\":8006:8041  stats.pendingTradeRewards += reward */\n      dup3\n      dup3\n      sload\n      tag_364\n      swap2\n      swap1\n      tag_206\n      jump\t// in\n    tag_364:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/LiquidityAccelerationToken.sol\":8115:8122  isMaker */\n      dup4\n        /* \"contracts/LiquidityAccelerationToken.sol\":8111:8267  if (isMaker) {... */\n      iszero\n      tag_365\n      jumpi\n        /* \"contracts/LiquidityAccelerationToken.sol\":8180:8183  100 */\n      0x64\n        /* \"contracts/LiquidityAccelerationToken.sol\":8166:8177  tradeVolume */\n      dup6\n        /* \"contracts/LiquidityAccelerationToken.sol\":8166:8183  tradeVolume / 100 */\n      tag_366\n      swap2\n      swap1\n      tag_232\n      jump\t// in\n    tag_366:\n        /* \"contracts/LiquidityAccelerationToken.sol\":8138:8150  makerRebates */\n      0x14\n        /* \"contracts/LiquidityAccelerationToken.sol\":8138:8162  makerRebates[msg.sender] */\n      0x00\n        /* \"contracts/LiquidityAccelerationToken.sol\":8151:8161  msg.sender */\n      caller\n        /* \"contracts/LiquidityAccelerationToken.sol\":8138:8162  makerRebates[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/LiquidityAccelerationToken.sol\":8138:8183  makerRebates[msg.sender] += tradeVolume / 100 */\n      dup3\n      dup3\n      sload\n      tag_367\n      swap2\n      swap1\n      tag_206\n      jump\t// in\n    tag_367:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/LiquidityAccelerationToken.sol\":8111:8267  if (isMaker) {... */\n      jump(tag_368)\n    tag_365:\n        /* \"contracts/LiquidityAccelerationToken.sol\":8253:8256  100 */\n      0x64\n        /* \"contracts/LiquidityAccelerationToken.sol\":8239:8250  tradeVolume */\n      dup6\n        /* \"contracts/LiquidityAccelerationToken.sol\":8239:8256  tradeVolume / 100 */\n      tag_369\n      swap2\n      swap1\n      tag_232\n      jump\t// in\n    tag_369:\n        /* \"contracts/LiquidityAccelerationToken.sol\":8214:8223  takerFees */\n      0x15\n        /* \"contracts/LiquidityAccelerationToken.sol\":8214:8235  takerFees[msg.sender] */\n      0x00\n        /* \"contracts/LiquidityAccelerationToken.sol\":8224:8234  msg.sender */\n      caller\n        /* \"contracts/LiquidityAccelerationToken.sol\":8214:8235  takerFees[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/LiquidityAccelerationToken.sol\":8214:8256  takerFees[msg.sender] += tradeVolume / 100 */\n      dup3\n      dup3\n      sload\n      tag_370\n      swap2\n      swap1\n      tag_206\n      jump\t// in\n    tag_370:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/LiquidityAccelerationToken.sol\":8111:8267  if (isMaker) {... */\n    tag_368:\n        /* \"contracts/LiquidityAccelerationToken.sol\":8354:8355  0 */\n      0x00\n        /* \"contracts/LiquidityAccelerationToken.sol\":8335:8340  stats */\n      dup4\n        /* \"contracts/LiquidityAccelerationToken.sol\":8335:8350  stats.lastClaim */\n      0x03\n      add\n      sload\n        /* \"contracts/LiquidityAccelerationToken.sol\":8335:8355  stats.lastClaim == 0 */\n      sub\n        /* \"contracts/LiquidityAccelerationToken.sol\":8331:8415  if (stats.lastClaim == 0) {... */\n      tag_371\n      jumpi\n        /* \"contracts/LiquidityAccelerationToken.sol\":8389:8404  block.timestamp */\n      timestamp\n        /* \"contracts/LiquidityAccelerationToken.sol\":8371:8376  stats */\n      dup4\n        /* \"contracts/LiquidityAccelerationToken.sol\":8371:8386  stats.lastClaim */\n      0x03\n      add\n        /* \"contracts/LiquidityAccelerationToken.sol\":8371:8404  stats.lastClaim = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/LiquidityAccelerationToken.sol\":8331:8415  if (stats.lastClaim == 0) {... */\n    tag_371:\n        /* \"contracts/LiquidityAccelerationToken.sol\":8444:8454  msg.sender */\n      caller\n        /* \"contracts/LiquidityAccelerationToken.sol\":8430:8477  TradeRecorded(msg.sender, tradeVolume, isMaker) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x4b85156045f2844cf6b638ff8a8ddb82c940ccdbe3c46e6e67d2583722c7dc71\n        /* \"contracts/LiquidityAccelerationToken.sol\":8456:8467  tradeVolume */\n      dup7\n        /* \"contracts/LiquidityAccelerationToken.sol\":8469:8476  isMaker */\n      dup7\n        /* \"contracts/LiquidityAccelerationToken.sol\":8430:8477  TradeRecorded(msg.sender, tradeVolume, isMaker) */\n      mload(0x40)\n      tag_372\n      swap3\n      swap2\n      swap1\n      tag_373\n      jump\t// in\n    tag_372:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/LiquidityAccelerationToken.sol\":7220:8484  {... */\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_374\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_210\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_374:\n        /* \"contracts/LiquidityAccelerationToken.sol\":7128:8484  function recordTrade(uint256 tradeVolume, bool isMaker) external whenNotPaused nonReentrant {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/LiquidityAccelerationToken.sol\":1648:1680  uint256 public poolTradingVolume */\n    tag_165:\n      sload(0x08)\n      dup2\n      jump\t// out\n        /* \"contracts/LiquidityAccelerationToken.sol\":2243:2291  uint256 public maxClaimable = 1_000_000 * 10**18 */\n    tag_168:\n      sload(0x10)\n      dup2\n      jump\t// out\n        /* \"contracts/LiquidityAccelerationToken.sol\":1571:1604  uint256 public tradeEpochDuration */\n    tag_171:\n      sload(0x07)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_175:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_376\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_213\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_376:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_378\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_379\n      swap2\n      swap1\n      tag_96\n      jump\t// in\n    tag_379:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_378:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_380\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_262\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_380:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/LiquidityAccelerationToken.sol\":2589:2639  mapping(address => uint256) public lastSignedClaim */\n    tag_178:\n      mstore(0x20, 0x13)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/LiquidityAccelerationToken.sol\":1430:1460  uint256 public tradeRewardRate */\n    tag_181:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n    tag_189:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      sload(0x01)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2487  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_382\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_383\n      swap1\n      tag_384\n      jump\t// in\n    tag_383:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_382:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2605  _status */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2616  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n    tag_210:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2816  _status */\n      dup1\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_213:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_387\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_388\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_387:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_389\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_139\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_389:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_390\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_391\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_388\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_391:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_392\n      swap2\n      swap1\n      tag_96\n      jump\t// in\n    tag_392:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_390:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_262:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x00\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"contracts/LiquidityAccelerationToken.sol\":15124:15539  function verifySignature(address signer, uint256 expectedNonce, bytes memory signature) internal pure returns (bool) {... */\n    tag_323:\n        /* \"contracts/LiquidityAccelerationToken.sol\":15235:15239  bool */\n      0x00\n        /* \"contracts/LiquidityAccelerationToken.sol\":15256:15275  bytes32 messageHash */\n      0x00\n        /* \"contracts/LiquidityAccelerationToken.sol\":15305:15311  signer */\n      dup5\n        /* \"contracts/LiquidityAccelerationToken.sol\":15313:15326  expectedNonce */\n      dup5\n        /* \"contracts/LiquidityAccelerationToken.sol\":15288:15327  abi.encodePacked(signer, expectedNonce) */\n      add(0x20, mload(0x40))\n      tag_395\n      swap3\n      swap2\n      swap1\n      tag_396\n      jump\t// in\n    tag_395:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/LiquidityAccelerationToken.sol\":15278:15328  keccak256(abi.encodePacked(signer, expectedNonce)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contracts/LiquidityAccelerationToken.sol\":15256:15328  bytes32 messageHash = keccak256(abi.encodePacked(signer, expectedNonce)) */\n      swap1\n      pop\n        /* \"contracts/LiquidityAccelerationToken.sol\":15343:15371  bytes32 ethSignedMessageHash */\n      0x00\n        /* \"contracts/LiquidityAccelerationToken.sol\":15437:15448  messageHash */\n      dup2\n        /* \"contracts/LiquidityAccelerationToken.sol\":15384:15449  abi.encodePacked(\"\\x19Ethereum Signed Message:\\n32\", messageHash) */\n      add(0x20, mload(0x40))\n      tag_397\n      swap2\n      swap1\n      tag_398\n      jump\t// in\n    tag_397:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/LiquidityAccelerationToken.sol\":15374:15450  keccak256(abi.encodePacked(\"\\x19Ethereum Signed Message:\\n32\", messageHash)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contracts/LiquidityAccelerationToken.sol\":15343:15450  bytes32 ethSignedMessageHash = keccak256(abi.encodePacked(\"\\x19Ethereum Signed Message:\\n32\", messageHash)) */\n      swap1\n      pop\n        /* \"contracts/LiquidityAccelerationToken.sol\":15522:15528  signer */\n      dup6\n        /* \"contracts/LiquidityAccelerationToken.sol\":15472:15528  ECDSA.recover(ethSignedMessageHash, signature) == signer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/LiquidityAccelerationToken.sol\":15472:15518  ECDSA.recover(ethSignedMessageHash, signature) */\n      tag_399\n        /* \"contracts/LiquidityAccelerationToken.sol\":15486:15506  ethSignedMessageHash */\n      dup3\n        /* \"contracts/LiquidityAccelerationToken.sol\":15508:15517  signature */\n      dup7\n        /* \"contracts/LiquidityAccelerationToken.sol\":15472:15485  ECDSA.recover */\n      tag_400\n        /* \"contracts/LiquidityAccelerationToken.sol\":15472:15518  ECDSA.recover(ethSignedMessageHash, signature) */\n      jump\t// in\n    tag_399:\n        /* \"contracts/LiquidityAccelerationToken.sol\":15472:15528  ECDSA.recover(ethSignedMessageHash, signature) == signer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/LiquidityAccelerationToken.sol\":15465:15528  return ECDSA.recover(ethSignedMessageHash, signature) == signer */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/LiquidityAccelerationToken.sol\":15124:15539  function verifySignature(address signer, uint256 expectedNonce, bytes memory signature) internal pure returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_388:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":3714:3969  function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {... */\n    tag_400:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":3792:3799  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":3812:3829  address recovered */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":3831:3849  RecoverError error */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":3851:3867  bytes32 errorArg */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":3871:3898  tryRecover(hash, signature) */\n      tag_403\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":3882:3886  hash */\n      dup7\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":3888:3897  signature */\n      dup7\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":3871:3881  tryRecover */\n      tag_404\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":3871:3898  tryRecover(hash, signature) */\n      jump\t// in\n    tag_403:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":3811:3898  (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, signature) */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":3908:3936  _throwError(error, errorArg) */\n      tag_405\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":3920:3925  error */\n      dup3\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":3927:3935  errorArg */\n      dup3\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":3908:3919  _throwError */\n      tag_406\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":3908:3936  _throwError(error, errorArg) */\n      jump\t// in\n    tag_405:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":3953:3962  recovered */\n      dup3\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":3946:3962  return recovered */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":3714:3969  function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2129:2907  function tryRecover(... */\n    tag_404:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2232:2249  address recovered */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2251:2267  RecoverError err */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2269:2283  bytes32 errArg */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2319:2321  65 */\n      0x41\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2299:2308  signature */\n      dup5\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2299:2315  signature.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2299:2321  signature.length == 65 */\n      sub\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2295:2901  if (signature.length == 65) {... */\n      tag_408\n      jumpi\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2337:2346  bytes32 r */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2360:2369  bytes32 s */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2383:2390  uint8 v */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2604:2608  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2593:2602  signature */\n      dup8\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2589:2609  add(signature, 0x20) */\n      add\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2583:2610  mload(add(signature, 0x20)) */\n      mload\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2578:2610  r := mload(add(signature, 0x20)) */\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2653:2657  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2642:2651  signature */\n      dup8\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2638:2658  add(signature, 0x40) */\n      add\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2632:2659  mload(add(signature, 0x40)) */\n      mload\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2627:2659  s := mload(add(signature, 0x40)) */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2710:2714  0x60 */\n      0x60\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2699:2708  signature */\n      dup8\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2695:2715  add(signature, 0x60) */\n      add\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2689:2716  mload(add(signature, 0x60)) */\n      mload\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2686:2687  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2681:2717  byte(0, mload(add(signature, 0x60))) */\n      byte\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2676:2717  v := byte(0, mload(add(signature, 0x60))) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2751:2776  tryRecover(hash, v, r, s) */\n      tag_409\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2762:2766  hash */\n      dup9\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2768:2769  v */\n      dup3\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2771:2772  r */\n      dup6\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2774:2775  s */\n      dup6\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2751:2761  tryRecover */\n      tag_410\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2751:2776  tryRecover(hash, v, r, s) */\n      jump\t// in\n    tag_409:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2744:2776  return tryRecover(hash, v, r, s) */\n      swap6\n      pop\n      swap6\n      pop\n      swap6\n      pop\n      pop\n      pop\n      pop\n      jump(tag_407)\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2295:2901  if (signature.length == 65) {... */\n    tag_408:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2823:2824  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2827:2862  RecoverError.InvalidSignatureLength */\n      0x02\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2872:2881  signature */\n      dup6\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2872:2888  signature.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2864:2889  bytes32(signature.length) */\n      0x00\n      shl\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2807:2890  return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length)) */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2129:2907  function tryRecover(... */\n    tag_407:\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7280:7812  function _throwError(RecoverError error, bytes32 errorArg) private pure {... */\n    tag_406:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7375:7395  RecoverError.NoError */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7366:7395  error == RecoverError.NoError */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_413\n      jumpi\n      tag_414\n      tag_415\n      jump\t// in\n    tag_414:\n    tag_413:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7366:7371  error */\n      dup3\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7366:7395  error == RecoverError.NoError */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_416\n      jumpi\n      tag_417\n      tag_415\n      jump\t// in\n    tag_417:\n    tag_416:\n      sub\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7362:7806  if (error == RecoverError.NoError) {... */\n      iszero\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7411:7418  return; */\n      tag_412\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7362:7806  if (error == RecoverError.NoError) {... */\n      jumpi\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7471:7500  RecoverError.InvalidSignature */\n      0x01\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7462:7500  error == RecoverError.InvalidSignature */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_420\n      jumpi\n      tag_421\n      tag_415\n      jump\t// in\n    tag_421:\n    tag_420:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7462:7467  error */\n      dup3\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7462:7500  error == RecoverError.InvalidSignature */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_422\n      jumpi\n      tag_423\n      tag_415\n      jump\t// in\n    tag_423:\n    tag_422:\n      sub\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7458:7806  if (error == RecoverError.InvalidSignature) {... */\n      tag_424\n      jumpi\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7523:7546  ECDSAInvalidSignature() */\n      mload(0x40)\n      0xf645eedf00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7458:7806  if (error == RecoverError.InvalidSignature) {... */\n    tag_424:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7576:7611  RecoverError.InvalidSignatureLength */\n      0x02\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7567:7611  error == RecoverError.InvalidSignatureLength */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_426\n      jumpi\n      tag_427\n      tag_415\n      jump\t// in\n    tag_427:\n    tag_426:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7567:7572  error */\n      dup3\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7567:7611  error == RecoverError.InvalidSignatureLength */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_428\n      jumpi\n      tag_429\n      tag_415\n      jump\t// in\n    tag_429:\n    tag_428:\n      sub\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7563:7806  if (error == RecoverError.InvalidSignatureLength) {... */\n      tag_430\n      jumpi\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7670:7678  errorArg */\n      dup1\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7662:7679  uint256(errorArg) */\n      0x00\n      shr\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7634:7680  ECDSAInvalidSignatureLength(uint256(errorArg)) */\n      mload(0x40)\n      0xfce698f700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_431\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_431:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7563:7806  if (error == RecoverError.InvalidSignatureLength) {... */\n    tag_430:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7710:7740  RecoverError.InvalidSignatureS */\n      0x03\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7701:7740  error == RecoverError.InvalidSignatureS */\n      dup1\n      dup2\n      gt\n      iszero\n      tag_433\n      jumpi\n      tag_434\n      tag_415\n      jump\t// in\n    tag_434:\n    tag_433:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7701:7706  error */\n      dup3\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7701:7740  error == RecoverError.InvalidSignatureS */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_435\n      jumpi\n      tag_436\n      tag_415\n      jump\t// in\n    tag_436:\n    tag_435:\n      sub\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7697:7806  if (error == RecoverError.InvalidSignatureS) {... */\n      tag_437\n      jumpi\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7786:7794  errorArg */\n      dup1\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7763:7795  ECDSAInvalidSignatureS(errorArg) */\n      mload(0x40)\n      0xd78bce0c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_438\n      swap2\n      swap1\n      tag_439\n      jump\t// in\n    tag_438:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7697:7806  if (error == RecoverError.InvalidSignatureS) {... */\n    tag_437:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7280:7812  function _throwError(RecoverError error, bytes32 errorArg) private pure {... */\n    tag_412:\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":5203:6754  function tryRecover(... */\n    tag_410:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":5329:5346  address recovered */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":5348:5364  RecoverError err */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":5366:5380  bytes32 errArg */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6283:6349  0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 */\n      0x7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6278:6279  s */\n      dup5\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6270:6280  uint256(s) */\n      0x00\n      shr\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6270:6349  uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6266:6430  if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {... */\n      iszero\n      tag_441\n      jumpi\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6381:6382  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6385:6415  RecoverError.InvalidSignatureS */\n      0x03\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6417:6418  s */\n      dup6\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6365:6419  return (address(0), RecoverError.InvalidSignatureS, s) */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      pop\n      jump(tag_440)\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6266:6430  if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {... */\n    tag_441:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6524:6538  address signer */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6541:6565  ecrecover(hash, v, r, s) */\n      0x01\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6551:6555  hash */\n      dup9\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6557:6558  v */\n      dup9\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6560:6561  r */\n      dup9\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6563:6564  s */\n      dup9\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6541:6565  ecrecover(hash, v, r, s) */\n      mload(0x40)\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x40\n      mstore\n      mload(0x40)\n      tag_442\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_443\n      jump\t// in\n    tag_442:\n      0x20\n      mload(0x40)\n      0x20\n      dup2\n      sub\n      swap1\n      dup1\n      dup5\n      sub\n      swap1\n      dup6\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_445\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_445:\n      pop\n      pop\n      pop\n      mload(sub(mload(0x40), 0x20))\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6524:6565  address signer = ecrecover(hash, v, r, s) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6597:6598  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6579:6599  signer == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6579:6585  signer */\n      dup2\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6579:6599  signer == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6575:6688  if (signer == address(0)) {... */\n      tag_446\n      jumpi\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6631:6632  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6635:6664  RecoverError.InvalidSignature */\n      0x01\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6674:6675  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6666:6676  bytes32(0) */\n      0x00\n      shl\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6615:6677  return (address(0), RecoverError.InvalidSignature, bytes32(0)) */\n      swap4\n      pop\n      swap4\n      pop\n      swap4\n      pop\n      pop\n      jump(tag_440)\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6575:6688  if (signer == address(0)) {... */\n    tag_446:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6706:6712  signer */\n      dup1\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6714:6734  RecoverError.NoError */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6744:6745  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6736:6746  bytes32(0) */\n      0x00\n      shl\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6698:6747  return (signer, RecoverError.NoError, bytes32(0)) */\n      swap4\n      pop\n      swap4\n      pop\n      swap4\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":5203:6754  function tryRecover(... */\n    tag_440:\n      swap5\n      pop\n      swap5\n      pop\n      swap5\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_447:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_448:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      0x00\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_449:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      0x00\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_450:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_451:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_532\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_450\n      jump\t// in\n    tag_532:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_452:\n        /* \"#utility.yul\":641:665   */\n      tag_534\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_451\n      jump\t// in\n    tag_534:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_535\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      0x00\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_535:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_453:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_537\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_452\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:1170   */\n    tag_50:\n        /* \"#utility.yul\":900:906   */\n      0x00\n        /* \"#utility.yul\":949:951   */\n      0x20\n        /* \"#utility.yul\":937:946   */\n      dup3\n        /* \"#utility.yul\":928:935   */\n      dup5\n        /* \"#utility.yul\":924:947   */\n      sub\n        /* \"#utility.yul\":920:952   */\n      slt\n        /* \"#utility.yul\":917:1036   */\n      iszero\n      tag_539\n      jumpi\n        /* \"#utility.yul\":955:1034   */\n      tag_540\n      tag_448\n      jump\t// in\n    tag_540:\n        /* \"#utility.yul\":917:1036   */\n    tag_539:\n        /* \"#utility.yul\":1075:1076   */\n      0x00\n        /* \"#utility.yul\":1100:1153   */\n      tag_541\n        /* \"#utility.yul\":1145:1152   */\n      dup5\n        /* \"#utility.yul\":1136:1142   */\n      dup3\n        /* \"#utility.yul\":1125:1134   */\n      dup6\n        /* \"#utility.yul\":1121:1143   */\n      add\n        /* \"#utility.yul\":1100:1153   */\n      tag_453\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":1090:1153   */\n      swap2\n      pop\n        /* \"#utility.yul\":1046:1163   */\n      pop\n        /* \"#utility.yul\":841:1170   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1176:1253   */\n    tag_454:\n        /* \"#utility.yul\":1213:1220   */\n      0x00\n        /* \"#utility.yul\":1242:1247   */\n      dup2\n        /* \"#utility.yul\":1231:1247   */\n      swap1\n      pop\n        /* \"#utility.yul\":1176:1253   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1259:1377   */\n    tag_455:\n        /* \"#utility.yul\":1346:1370   */\n      tag_544\n        /* \"#utility.yul\":1364:1369   */\n      dup2\n        /* \"#utility.yul\":1346:1370   */\n      tag_454\n      jump\t// in\n    tag_544:\n        /* \"#utility.yul\":1341:1344   */\n      dup3\n        /* \"#utility.yul\":1334:1371   */\n      mstore\n        /* \"#utility.yul\":1259:1377   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1383:1605   */\n    tag_53:\n        /* \"#utility.yul\":1476:1480   */\n      0x00\n        /* \"#utility.yul\":1514:1516   */\n      0x20\n        /* \"#utility.yul\":1503:1512   */\n      dup3\n        /* \"#utility.yul\":1499:1517   */\n      add\n        /* \"#utility.yul\":1491:1517   */\n      swap1\n      pop\n        /* \"#utility.yul\":1527:1598   */\n      tag_546\n        /* \"#utility.yul\":1595:1596   */\n      0x00\n        /* \"#utility.yul\":1584:1593   */\n      dup4\n        /* \"#utility.yul\":1580:1597   */\n      add\n        /* \"#utility.yul\":1571:1577   */\n      dup5\n        /* \"#utility.yul\":1527:1598   */\n      tag_455\n      jump\t// in\n    tag_546:\n        /* \"#utility.yul\":1383:1605   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1611:1733   */\n    tag_456:\n        /* \"#utility.yul\":1684:1708   */\n      tag_548\n        /* \"#utility.yul\":1702:1707   */\n      dup2\n        /* \"#utility.yul\":1684:1708   */\n      tag_454\n      jump\t// in\n    tag_548:\n        /* \"#utility.yul\":1677:1682   */\n      dup2\n        /* \"#utility.yul\":1674:1709   */\n      eq\n        /* \"#utility.yul\":1664:1727   */\n      tag_549\n      jumpi\n        /* \"#utility.yul\":1723:1724   */\n      0x00\n        /* \"#utility.yul\":1720:1721   */\n      0x00\n        /* \"#utility.yul\":1713:1725   */\n      revert\n        /* \"#utility.yul\":1664:1727   */\n    tag_549:\n        /* \"#utility.yul\":1611:1733   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1739:1878   */\n    tag_457:\n        /* \"#utility.yul\":1785:1790   */\n      0x00\n        /* \"#utility.yul\":1823:1829   */\n      dup2\n        /* \"#utility.yul\":1810:1830   */\n      calldataload\n        /* \"#utility.yul\":1801:1830   */\n      swap1\n      pop\n        /* \"#utility.yul\":1839:1872   */\n      tag_551\n        /* \"#utility.yul\":1866:1871   */\n      dup2\n        /* \"#utility.yul\":1839:1872   */\n      tag_456\n      jump\t// in\n    tag_551:\n        /* \"#utility.yul\":1739:1878   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1884:2213   */\n    tag_56:\n        /* \"#utility.yul\":1943:1949   */\n      0x00\n        /* \"#utility.yul\":1992:1994   */\n      0x20\n        /* \"#utility.yul\":1980:1989   */\n      dup3\n        /* \"#utility.yul\":1971:1978   */\n      dup5\n        /* \"#utility.yul\":1967:1990   */\n      sub\n        /* \"#utility.yul\":1963:1995   */\n      slt\n        /* \"#utility.yul\":1960:2079   */\n      iszero\n      tag_553\n      jumpi\n        /* \"#utility.yul\":1998:2077   */\n      tag_554\n      tag_448\n      jump\t// in\n    tag_554:\n        /* \"#utility.yul\":1960:2079   */\n    tag_553:\n        /* \"#utility.yul\":2118:2119   */\n      0x00\n        /* \"#utility.yul\":2143:2196   */\n      tag_555\n        /* \"#utility.yul\":2188:2195   */\n      dup5\n        /* \"#utility.yul\":2179:2185   */\n      dup3\n        /* \"#utility.yul\":2168:2177   */\n      dup6\n        /* \"#utility.yul\":2164:2186   */\n      add\n        /* \"#utility.yul\":2143:2196   */\n      tag_457\n      jump\t// in\n    tag_555:\n        /* \"#utility.yul\":2133:2196   */\n      swap2\n      pop\n        /* \"#utility.yul\":2089:2206   */\n      pop\n        /* \"#utility.yul\":1884:2213   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2219:2772   */\n    tag_62:\n        /* \"#utility.yul\":2396:2400   */\n      0x00\n        /* \"#utility.yul\":2434:2437   */\n      0x80\n        /* \"#utility.yul\":2423:2432   */\n      dup3\n        /* \"#utility.yul\":2419:2438   */\n      add\n        /* \"#utility.yul\":2411:2438   */\n      swap1\n      pop\n        /* \"#utility.yul\":2448:2519   */\n      tag_557\n        /* \"#utility.yul\":2516:2517   */\n      0x00\n        /* \"#utility.yul\":2505:2514   */\n      dup4\n        /* \"#utility.yul\":2501:2518   */\n      add\n        /* \"#utility.yul\":2492:2498   */\n      dup8\n        /* \"#utility.yul\":2448:2519   */\n      tag_455\n      jump\t// in\n    tag_557:\n        /* \"#utility.yul\":2529:2601   */\n      tag_558\n        /* \"#utility.yul\":2597:2599   */\n      0x20\n        /* \"#utility.yul\":2586:2595   */\n      dup4\n        /* \"#utility.yul\":2582:2600   */\n      add\n        /* \"#utility.yul\":2573:2579   */\n      dup7\n        /* \"#utility.yul\":2529:2601   */\n      tag_455\n      jump\t// in\n    tag_558:\n        /* \"#utility.yul\":2611:2683   */\n      tag_559\n        /* \"#utility.yul\":2679:2681   */\n      0x40\n        /* \"#utility.yul\":2668:2677   */\n      dup4\n        /* \"#utility.yul\":2664:2682   */\n      add\n        /* \"#utility.yul\":2655:2661   */\n      dup6\n        /* \"#utility.yul\":2611:2683   */\n      tag_455\n      jump\t// in\n    tag_559:\n        /* \"#utility.yul\":2693:2765   */\n      tag_560\n        /* \"#utility.yul\":2761:2763   */\n      0x60\n        /* \"#utility.yul\":2750:2759   */\n      dup4\n        /* \"#utility.yul\":2746:2764   */\n      add\n        /* \"#utility.yul\":2737:2743   */\n      dup5\n        /* \"#utility.yul\":2693:2765   */\n      tag_455\n      jump\t// in\n    tag_560:\n        /* \"#utility.yul\":2219:2772   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2778:2838   */\n    tag_458:\n        /* \"#utility.yul\":2806:2809   */\n      0x00\n        /* \"#utility.yul\":2827:2832   */\n      dup2\n        /* \"#utility.yul\":2820:2832   */\n      swap1\n      pop\n        /* \"#utility.yul\":2778:2838   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2844:2986   */\n    tag_459:\n        /* \"#utility.yul\":2894:2903   */\n      0x00\n        /* \"#utility.yul\":2927:2980   */\n      tag_563\n        /* \"#utility.yul\":2945:2979   */\n      tag_564\n        /* \"#utility.yul\":2954:2978   */\n      tag_565\n        /* \"#utility.yul\":2972:2977   */\n      dup5\n        /* \"#utility.yul\":2954:2978   */\n      tag_450\n      jump\t// in\n    tag_565:\n        /* \"#utility.yul\":2945:2979   */\n      tag_458\n      jump\t// in\n    tag_564:\n        /* \"#utility.yul\":2927:2980   */\n      tag_450\n      jump\t// in\n    tag_563:\n        /* \"#utility.yul\":2914:2980   */\n      swap1\n      pop\n        /* \"#utility.yul\":2844:2986   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2992:3118   */\n    tag_460:\n        /* \"#utility.yul\":3042:3051   */\n      0x00\n        /* \"#utility.yul\":3075:3112   */\n      tag_567\n        /* \"#utility.yul\":3106:3111   */\n      dup3\n        /* \"#utility.yul\":3075:3112   */\n      tag_459\n      jump\t// in\n    tag_567:\n        /* \"#utility.yul\":3062:3112   */\n      swap1\n      pop\n        /* \"#utility.yul\":2992:3118   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3124:3268   */\n    tag_461:\n        /* \"#utility.yul\":3192:3201   */\n      0x00\n        /* \"#utility.yul\":3225:3262   */\n      tag_569\n        /* \"#utility.yul\":3256:3261   */\n      dup3\n        /* \"#utility.yul\":3225:3262   */\n      tag_460\n      jump\t// in\n    tag_569:\n        /* \"#utility.yul\":3212:3262   */\n      swap1\n      pop\n        /* \"#utility.yul\":3124:3268   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3274:3441   */\n    tag_462:\n        /* \"#utility.yul\":3379:3434   */\n      tag_571\n        /* \"#utility.yul\":3428:3433   */\n      dup2\n        /* \"#utility.yul\":3379:3434   */\n      tag_461\n      jump\t// in\n    tag_571:\n        /* \"#utility.yul\":3374:3377   */\n      dup3\n        /* \"#utility.yul\":3367:3435   */\n      mstore\n        /* \"#utility.yul\":3274:3441   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3447:3705   */\n    tag_66:\n        /* \"#utility.yul\":3558:3562   */\n      0x00\n        /* \"#utility.yul\":3596:3598   */\n      0x20\n        /* \"#utility.yul\":3585:3594   */\n      dup3\n        /* \"#utility.yul\":3581:3599   */\n      add\n        /* \"#utility.yul\":3573:3599   */\n      swap1\n      pop\n        /* \"#utility.yul\":3609:3698   */\n      tag_573\n        /* \"#utility.yul\":3695:3696   */\n      0x00\n        /* \"#utility.yul\":3684:3693   */\n      dup4\n        /* \"#utility.yul\":3680:3697   */\n      add\n        /* \"#utility.yul\":3671:3677   */\n      dup5\n        /* \"#utility.yul\":3609:3698   */\n      tag_462\n      jump\t// in\n    tag_573:\n        /* \"#utility.yul\":3447:3705   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3711:3801   */\n    tag_463:\n        /* \"#utility.yul\":3745:3752   */\n      0x00\n        /* \"#utility.yul\":3788:3793   */\n      dup2\n        /* \"#utility.yul\":3781:3794   */\n      iszero\n        /* \"#utility.yul\":3774:3795   */\n      iszero\n        /* \"#utility.yul\":3763:3795   */\n      swap1\n      pop\n        /* \"#utility.yul\":3711:3801   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3807:3916   */\n    tag_464:\n        /* \"#utility.yul\":3888:3909   */\n      tag_576\n        /* \"#utility.yul\":3903:3908   */\n      dup2\n        /* \"#utility.yul\":3888:3909   */\n      tag_463\n      jump\t// in\n    tag_576:\n        /* \"#utility.yul\":3883:3886   */\n      dup3\n        /* \"#utility.yul\":3876:3910   */\n      mstore\n        /* \"#utility.yul\":3807:3916   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3922:4132   */\n    tag_70:\n        /* \"#utility.yul\":4009:4013   */\n      0x00\n        /* \"#utility.yul\":4047:4049   */\n      0x20\n        /* \"#utility.yul\":4036:4045   */\n      dup3\n        /* \"#utility.yul\":4032:4050   */\n      add\n        /* \"#utility.yul\":4024:4050   */\n      swap1\n      pop\n        /* \"#utility.yul\":4060:4125   */\n      tag_578\n        /* \"#utility.yul\":4122:4123   */\n      0x00\n        /* \"#utility.yul\":4111:4120   */\n      dup4\n        /* \"#utility.yul\":4107:4124   */\n      add\n        /* \"#utility.yul\":4098:4104   */\n      dup5\n        /* \"#utility.yul\":4060:4125   */\n      tag_464\n      jump\t// in\n    tag_578:\n        /* \"#utility.yul\":3922:4132   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4138:4580   */\n    tag_78:\n        /* \"#utility.yul\":4287:4291   */\n      0x00\n        /* \"#utility.yul\":4325:4327   */\n      0x60\n        /* \"#utility.yul\":4314:4323   */\n      dup3\n        /* \"#utility.yul\":4310:4328   */\n      add\n        /* \"#utility.yul\":4302:4328   */\n      swap1\n      pop\n        /* \"#utility.yul\":4338:4409   */\n      tag_580\n        /* \"#utility.yul\":4406:4407   */\n      0x00\n        /* \"#utility.yul\":4395:4404   */\n      dup4\n        /* \"#utility.yul\":4391:4408   */\n      add\n        /* \"#utility.yul\":4382:4388   */\n      dup7\n        /* \"#utility.yul\":4338:4409   */\n      tag_455\n      jump\t// in\n    tag_580:\n        /* \"#utility.yul\":4419:4491   */\n      tag_581\n        /* \"#utility.yul\":4487:4489   */\n      0x20\n        /* \"#utility.yul\":4476:4485   */\n      dup4\n        /* \"#utility.yul\":4472:4490   */\n      add\n        /* \"#utility.yul\":4463:4469   */\n      dup6\n        /* \"#utility.yul\":4419:4491   */\n      tag_455\n      jump\t// in\n    tag_581:\n        /* \"#utility.yul\":4501:4573   */\n      tag_582\n        /* \"#utility.yul\":4569:4571   */\n      0x40\n        /* \"#utility.yul\":4558:4567   */\n      dup4\n        /* \"#utility.yul\":4554:4572   */\n      add\n        /* \"#utility.yul\":4545:4551   */\n      dup5\n        /* \"#utility.yul\":4501:4573   */\n      tag_455\n      jump\t// in\n    tag_582:\n        /* \"#utility.yul\":4138:4580   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4586:4702   */\n    tag_465:\n        /* \"#utility.yul\":4656:4677   */\n      tag_584\n        /* \"#utility.yul\":4671:4676   */\n      dup2\n        /* \"#utility.yul\":4656:4677   */\n      tag_463\n      jump\t// in\n    tag_584:\n        /* \"#utility.yul\":4649:4654   */\n      dup2\n        /* \"#utility.yul\":4646:4678   */\n      eq\n        /* \"#utility.yul\":4636:4696   */\n      tag_585\n      jumpi\n        /* \"#utility.yul\":4692:4693   */\n      0x00\n        /* \"#utility.yul\":4689:4690   */\n      0x00\n        /* \"#utility.yul\":4682:4694   */\n      revert\n        /* \"#utility.yul\":4636:4696   */\n    tag_585:\n        /* \"#utility.yul\":4586:4702   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4708:4841   */\n    tag_466:\n        /* \"#utility.yul\":4751:4756   */\n      0x00\n        /* \"#utility.yul\":4789:4795   */\n      dup2\n        /* \"#utility.yul\":4776:4796   */\n      calldataload\n        /* \"#utility.yul\":4767:4796   */\n      swap1\n      pop\n        /* \"#utility.yul\":4805:4835   */\n      tag_587\n        /* \"#utility.yul\":4829:4834   */\n      dup2\n        /* \"#utility.yul\":4805:4835   */\n      tag_465\n      jump\t// in\n    tag_587:\n        /* \"#utility.yul\":4708:4841   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4847:5170   */\n    tag_81:\n        /* \"#utility.yul\":4903:4909   */\n      0x00\n        /* \"#utility.yul\":4952:4954   */\n      0x20\n        /* \"#utility.yul\":4940:4949   */\n      dup3\n        /* \"#utility.yul\":4931:4938   */\n      dup5\n        /* \"#utility.yul\":4927:4950   */\n      sub\n        /* \"#utility.yul\":4923:4955   */\n      slt\n        /* \"#utility.yul\":4920:5039   */\n      iszero\n      tag_589\n      jumpi\n        /* \"#utility.yul\":4958:5037   */\n      tag_590\n      tag_448\n      jump\t// in\n    tag_590:\n        /* \"#utility.yul\":4920:5039   */\n    tag_589:\n        /* \"#utility.yul\":5078:5079   */\n      0x00\n        /* \"#utility.yul\":5103:5153   */\n      tag_591\n        /* \"#utility.yul\":5145:5152   */\n      dup5\n        /* \"#utility.yul\":5136:5142   */\n      dup3\n        /* \"#utility.yul\":5125:5134   */\n      dup6\n        /* \"#utility.yul\":5121:5143   */\n      add\n        /* \"#utility.yul\":5103:5153   */\n      tag_466\n      jump\t// in\n    tag_591:\n        /* \"#utility.yul\":5093:5153   */\n      swap2\n      pop\n        /* \"#utility.yul\":5049:5163   */\n      pop\n        /* \"#utility.yul\":4847:5170   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5176:5650   */\n    tag_91:\n        /* \"#utility.yul\":5244:5250   */\n      0x00\n        /* \"#utility.yul\":5252:5258   */\n      0x00\n        /* \"#utility.yul\":5301:5303   */\n      0x40\n        /* \"#utility.yul\":5289:5298   */\n      dup4\n        /* \"#utility.yul\":5280:5287   */\n      dup6\n        /* \"#utility.yul\":5276:5299   */\n      sub\n        /* \"#utility.yul\":5272:5304   */\n      slt\n        /* \"#utility.yul\":5269:5388   */\n      iszero\n      tag_593\n      jumpi\n        /* \"#utility.yul\":5307:5386   */\n      tag_594\n      tag_448\n      jump\t// in\n    tag_594:\n        /* \"#utility.yul\":5269:5388   */\n    tag_593:\n        /* \"#utility.yul\":5427:5428   */\n      0x00\n        /* \"#utility.yul\":5452:5505   */\n      tag_595\n        /* \"#utility.yul\":5497:5504   */\n      dup6\n        /* \"#utility.yul\":5488:5494   */\n      dup3\n        /* \"#utility.yul\":5477:5486   */\n      dup7\n        /* \"#utility.yul\":5473:5495   */\n      add\n        /* \"#utility.yul\":5452:5505   */\n      tag_453\n      jump\t// in\n    tag_595:\n        /* \"#utility.yul\":5442:5505   */\n      swap3\n      pop\n        /* \"#utility.yul\":5398:5515   */\n      pop\n        /* \"#utility.yul\":5554:5556   */\n      0x20\n        /* \"#utility.yul\":5580:5633   */\n      tag_596\n        /* \"#utility.yul\":5625:5632   */\n      dup6\n        /* \"#utility.yul\":5616:5622   */\n      dup3\n        /* \"#utility.yul\":5605:5614   */\n      dup7\n        /* \"#utility.yul\":5601:5623   */\n      add\n        /* \"#utility.yul\":5580:5633   */\n      tag_457\n      jump\t// in\n    tag_596:\n        /* \"#utility.yul\":5570:5633   */\n      swap2\n      pop\n        /* \"#utility.yul\":5525:5643   */\n      pop\n        /* \"#utility.yul\":5176:5650   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5656:5774   */\n    tag_467:\n        /* \"#utility.yul\":5743:5767   */\n      tag_598\n        /* \"#utility.yul\":5761:5766   */\n      dup2\n        /* \"#utility.yul\":5743:5767   */\n      tag_451\n      jump\t// in\n    tag_598:\n        /* \"#utility.yul\":5738:5741   */\n      dup3\n        /* \"#utility.yul\":5731:5768   */\n      mstore\n        /* \"#utility.yul\":5656:5774   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5780:6002   */\n    tag_96:\n        /* \"#utility.yul\":5873:5877   */\n      0x00\n        /* \"#utility.yul\":5911:5913   */\n      0x20\n        /* \"#utility.yul\":5900:5909   */\n      dup3\n        /* \"#utility.yul\":5896:5914   */\n      add\n        /* \"#utility.yul\":5888:5914   */\n      swap1\n      pop\n        /* \"#utility.yul\":5924:5995   */\n      tag_600\n        /* \"#utility.yul\":5992:5993   */\n      0x00\n        /* \"#utility.yul\":5981:5990   */\n      dup4\n        /* \"#utility.yul\":5977:5994   */\n      add\n        /* \"#utility.yul\":5968:5974   */\n      dup5\n        /* \"#utility.yul\":5924:5995   */\n      tag_467\n      jump\t// in\n    tag_600:\n        /* \"#utility.yul\":5780:6002   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6008:6122   */\n    tag_468:\n        /* \"#utility.yul\":6063:6070   */\n      0x00\n        /* \"#utility.yul\":6092:6116   */\n      tag_602\n        /* \"#utility.yul\":6110:6115   */\n      dup3\n        /* \"#utility.yul\":6092:6116   */\n      tag_451\n      jump\t// in\n    tag_602:\n        /* \"#utility.yul\":6081:6116   */\n      swap1\n      pop\n        /* \"#utility.yul\":6008:6122   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6128:6286   */\n    tag_469:\n        /* \"#utility.yul\":6219:6261   */\n      tag_604\n        /* \"#utility.yul\":6255:6260   */\n      dup2\n        /* \"#utility.yul\":6219:6261   */\n      tag_468\n      jump\t// in\n    tag_604:\n        /* \"#utility.yul\":6212:6217   */\n      dup2\n        /* \"#utility.yul\":6209:6262   */\n      eq\n        /* \"#utility.yul\":6199:6280   */\n      tag_605\n      jumpi\n        /* \"#utility.yul\":6276:6277   */\n      0x00\n        /* \"#utility.yul\":6273:6274   */\n      0x00\n        /* \"#utility.yul\":6266:6278   */\n      revert\n        /* \"#utility.yul\":6199:6280   */\n    tag_605:\n        /* \"#utility.yul\":6128:6286   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6292:6467   */\n    tag_470:\n        /* \"#utility.yul\":6356:6361   */\n      0x00\n        /* \"#utility.yul\":6394:6400   */\n      dup2\n        /* \"#utility.yul\":6381:6401   */\n      calldataload\n        /* \"#utility.yul\":6372:6401   */\n      swap1\n      pop\n        /* \"#utility.yul\":6410:6461   */\n      tag_607\n        /* \"#utility.yul\":6455:6460   */\n      dup2\n        /* \"#utility.yul\":6410:6461   */\n      tag_469\n      jump\t// in\n    tag_607:\n        /* \"#utility.yul\":6292:6467   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6473:7858   */\n    tag_136:\n        /* \"#utility.yul\":6613:6619   */\n      0x00\n        /* \"#utility.yul\":6621:6627   */\n      0x00\n        /* \"#utility.yul\":6629:6635   */\n      0x00\n        /* \"#utility.yul\":6637:6643   */\n      0x00\n        /* \"#utility.yul\":6645:6651   */\n      0x00\n        /* \"#utility.yul\":6653:6659   */\n      0x00\n        /* \"#utility.yul\":6661:6667   */\n      0x00\n        /* \"#utility.yul\":6669:6675   */\n      0x00\n        /* \"#utility.yul\":6718:6721   */\n      0x0100\n        /* \"#utility.yul\":6706:6715   */\n      dup10\n        /* \"#utility.yul\":6697:6704   */\n      dup12\n        /* \"#utility.yul\":6693:6716   */\n      sub\n        /* \"#utility.yul\":6689:6722   */\n      slt\n        /* \"#utility.yul\":6686:6806   */\n      iszero\n      tag_609\n      jumpi\n        /* \"#utility.yul\":6725:6804   */\n      tag_610\n      tag_448\n      jump\t// in\n    tag_610:\n        /* \"#utility.yul\":6686:6806   */\n    tag_609:\n        /* \"#utility.yul\":6845:6846   */\n      0x00\n        /* \"#utility.yul\":6870:6941   */\n      tag_611\n        /* \"#utility.yul\":6933:6940   */\n      dup12\n        /* \"#utility.yul\":6924:6930   */\n      dup3\n        /* \"#utility.yul\":6913:6922   */\n      dup13\n        /* \"#utility.yul\":6909:6931   */\n      add\n        /* \"#utility.yul\":6870:6941   */\n      tag_470\n      jump\t// in\n    tag_611:\n        /* \"#utility.yul\":6860:6941   */\n      swap9\n      pop\n        /* \"#utility.yul\":6816:6951   */\n      pop\n        /* \"#utility.yul\":6990:6992   */\n      0x20\n        /* \"#utility.yul\":7016:7069   */\n      tag_612\n        /* \"#utility.yul\":7061:7068   */\n      dup12\n        /* \"#utility.yul\":7052:7058   */\n      dup3\n        /* \"#utility.yul\":7041:7050   */\n      dup13\n        /* \"#utility.yul\":7037:7059   */\n      add\n        /* \"#utility.yul\":7016:7069   */\n      tag_457\n      jump\t// in\n    tag_612:\n        /* \"#utility.yul\":7006:7069   */\n      swap8\n      pop\n        /* \"#utility.yul\":6961:7079   */\n      pop\n        /* \"#utility.yul\":7118:7120   */\n      0x40\n        /* \"#utility.yul\":7144:7197   */\n      tag_613\n        /* \"#utility.yul\":7189:7196   */\n      dup12\n        /* \"#utility.yul\":7180:7186   */\n      dup3\n        /* \"#utility.yul\":7169:7178   */\n      dup13\n        /* \"#utility.yul\":7165:7187   */\n      add\n        /* \"#utility.yul\":7144:7197   */\n      tag_457\n      jump\t// in\n    tag_613:\n        /* \"#utility.yul\":7134:7197   */\n      swap7\n      pop\n        /* \"#utility.yul\":7089:7207   */\n      pop\n        /* \"#utility.yul\":7246:7248   */\n      0x60\n        /* \"#utility.yul\":7272:7325   */\n      tag_614\n        /* \"#utility.yul\":7317:7324   */\n      dup12\n        /* \"#utility.yul\":7308:7314   */\n      dup3\n        /* \"#utility.yul\":7297:7306   */\n      dup13\n        /* \"#utility.yul\":7293:7315   */\n      add\n        /* \"#utility.yul\":7272:7325   */\n      tag_457\n      jump\t// in\n    tag_614:\n        /* \"#utility.yul\":7262:7325   */\n      swap6\n      pop\n        /* \"#utility.yul\":7217:7335   */\n      pop\n        /* \"#utility.yul\":7374:7377   */\n      0x80\n        /* \"#utility.yul\":7401:7454   */\n      tag_615\n        /* \"#utility.yul\":7446:7453   */\n      dup12\n        /* \"#utility.yul\":7437:7443   */\n      dup3\n        /* \"#utility.yul\":7426:7435   */\n      dup13\n        /* \"#utility.yul\":7422:7444   */\n      add\n        /* \"#utility.yul\":7401:7454   */\n      tag_457\n      jump\t// in\n    tag_615:\n        /* \"#utility.yul\":7391:7454   */\n      swap5\n      pop\n        /* \"#utility.yul\":7345:7464   */\n      pop\n        /* \"#utility.yul\":7503:7506   */\n      0xa0\n        /* \"#utility.yul\":7530:7583   */\n      tag_616\n        /* \"#utility.yul\":7575:7582   */\n      dup12\n        /* \"#utility.yul\":7566:7572   */\n      dup3\n        /* \"#utility.yul\":7555:7564   */\n      dup13\n        /* \"#utility.yul\":7551:7573   */\n      add\n        /* \"#utility.yul\":7530:7583   */\n      tag_457\n      jump\t// in\n    tag_616:\n        /* \"#utility.yul\":7520:7583   */\n      swap4\n      pop\n        /* \"#utility.yul\":7474:7593   */\n      pop\n        /* \"#utility.yul\":7632:7635   */\n      0xc0\n        /* \"#utility.yul\":7659:7712   */\n      tag_617\n        /* \"#utility.yul\":7704:7711   */\n      dup12\n        /* \"#utility.yul\":7695:7701   */\n      dup3\n        /* \"#utility.yul\":7684:7693   */\n      dup13\n        /* \"#utility.yul\":7680:7702   */\n      add\n        /* \"#utility.yul\":7659:7712   */\n      tag_457\n      jump\t// in\n    tag_617:\n        /* \"#utility.yul\":7649:7712   */\n      swap3\n      pop\n        /* \"#utility.yul\":7603:7722   */\n      pop\n        /* \"#utility.yul\":7761:7764   */\n      0xe0\n        /* \"#utility.yul\":7788:7841   */\n      tag_618\n        /* \"#utility.yul\":7833:7840   */\n      dup12\n        /* \"#utility.yul\":7824:7830   */\n      dup3\n        /* \"#utility.yul\":7813:7822   */\n      dup13\n        /* \"#utility.yul\":7809:7831   */\n      add\n        /* \"#utility.yul\":7788:7841   */\n      tag_453\n      jump\t// in\n    tag_618:\n        /* \"#utility.yul\":7778:7841   */\n      swap2\n      pop\n        /* \"#utility.yul\":7732:7851   */\n      pop\n        /* \"#utility.yul\":6473:7858   */\n      swap3\n      swap6\n      swap9\n      pop\n      swap3\n      swap6\n      swap9\n      swap1\n      swap4\n      swap7\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7864:7981   */\n    tag_471:\n        /* \"#utility.yul\":7973:7974   */\n      0x00\n        /* \"#utility.yul\":7970:7971   */\n      0x00\n        /* \"#utility.yul\":7963:7975   */\n      revert\n        /* \"#utility.yul\":7987:8104   */\n    tag_472:\n        /* \"#utility.yul\":8096:8097   */\n      0x00\n        /* \"#utility.yul\":8093:8094   */\n      0x00\n        /* \"#utility.yul\":8086:8098   */\n      revert\n        /* \"#utility.yul\":8110:8212   */\n    tag_473:\n        /* \"#utility.yul\":8151:8157   */\n      0x00\n        /* \"#utility.yul\":8202:8204   */\n      0x1f\n        /* \"#utility.yul\":8198:8205   */\n      not\n        /* \"#utility.yul\":8193:8195   */\n      0x1f\n        /* \"#utility.yul\":8186:8191   */\n      dup4\n        /* \"#utility.yul\":8182:8196   */\n      add\n        /* \"#utility.yul\":8178:8206   */\n      and\n        /* \"#utility.yul\":8168:8206   */\n      swap1\n      pop\n        /* \"#utility.yul\":8110:8212   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8218:8398   */\n    tag_474:\n        /* \"#utility.yul\":8266:8343   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8263:8264   */\n      0x00\n        /* \"#utility.yul\":8256:8344   */\n      mstore\n        /* \"#utility.yul\":8363:8367   */\n      0x41\n        /* \"#utility.yul\":8360:8361   */\n      0x04\n        /* \"#utility.yul\":8353:8368   */\n      mstore\n        /* \"#utility.yul\":8387:8391   */\n      0x24\n        /* \"#utility.yul\":8384:8385   */\n      0x00\n        /* \"#utility.yul\":8377:8392   */\n      revert\n        /* \"#utility.yul\":8404:8685   */\n    tag_475:\n        /* \"#utility.yul\":8487:8514   */\n      tag_624\n        /* \"#utility.yul\":8509:8513   */\n      dup3\n        /* \"#utility.yul\":8487:8514   */\n      tag_473\n      jump\t// in\n    tag_624:\n        /* \"#utility.yul\":8479:8485   */\n      dup2\n        /* \"#utility.yul\":8475:8515   */\n      add\n        /* \"#utility.yul\":8617:8623   */\n      dup2\n        /* \"#utility.yul\":8605:8615   */\n      dup2\n        /* \"#utility.yul\":8602:8624   */\n      lt\n        /* \"#utility.yul\":8581:8599   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8569:8579   */\n      dup3\n        /* \"#utility.yul\":8566:8600   */\n      gt\n        /* \"#utility.yul\":8563:8625   */\n      or\n        /* \"#utility.yul\":8560:8648   */\n      iszero\n      tag_625\n      jumpi\n        /* \"#utility.yul\":8628:8646   */\n      tag_626\n      tag_474\n      jump\t// in\n    tag_626:\n        /* \"#utility.yul\":8560:8648   */\n    tag_625:\n        /* \"#utility.yul\":8668:8678   */\n      dup1\n        /* \"#utility.yul\":8664:8666   */\n      0x40\n        /* \"#utility.yul\":8657:8679   */\n      mstore\n        /* \"#utility.yul\":8447:8685   */\n      pop\n        /* \"#utility.yul\":8404:8685   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8691:8820   */\n    tag_476:\n        /* \"#utility.yul\":8725:8731   */\n      0x00\n        /* \"#utility.yul\":8752:8772   */\n      tag_628\n      tag_447\n      jump\t// in\n    tag_628:\n        /* \"#utility.yul\":8742:8772   */\n      swap1\n      pop\n        /* \"#utility.yul\":8781:8814   */\n      tag_629\n        /* \"#utility.yul\":8809:8813   */\n      dup3\n        /* \"#utility.yul\":8801:8807   */\n      dup3\n        /* \"#utility.yul\":8781:8814   */\n      tag_475\n      jump\t// in\n    tag_629:\n        /* \"#utility.yul\":8691:8820   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8826:9133   */\n    tag_477:\n        /* \"#utility.yul\":8887:8891   */\n      0x00\n        /* \"#utility.yul\":8977:8995   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8969:8975   */\n      dup3\n        /* \"#utility.yul\":8966:8996   */\n      gt\n        /* \"#utility.yul\":8963:9019   */\n      iszero\n      tag_631\n      jumpi\n        /* \"#utility.yul\":8999:9017   */\n      tag_632\n      tag_474\n      jump\t// in\n    tag_632:\n        /* \"#utility.yul\":8963:9019   */\n    tag_631:\n        /* \"#utility.yul\":9037:9066   */\n      tag_633\n        /* \"#utility.yul\":9059:9065   */\n      dup3\n        /* \"#utility.yul\":9037:9066   */\n      tag_473\n      jump\t// in\n    tag_633:\n        /* \"#utility.yul\":9029:9066   */\n      swap1\n      pop\n        /* \"#utility.yul\":9121:9125   */\n      0x20\n        /* \"#utility.yul\":9115:9119   */\n      dup2\n        /* \"#utility.yul\":9111:9126   */\n      add\n        /* \"#utility.yul\":9103:9126   */\n      swap1\n      pop\n        /* \"#utility.yul\":8826:9133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9139:9287   */\n    tag_478:\n        /* \"#utility.yul\":9237:9243   */\n      dup3\n        /* \"#utility.yul\":9232:9235   */\n      dup2\n        /* \"#utility.yul\":9227:9230   */\n      dup4\n        /* \"#utility.yul\":9214:9244   */\n      calldatacopy\n        /* \"#utility.yul\":9278:9279   */\n      0x00\n        /* \"#utility.yul\":9269:9275   */\n      dup4\n        /* \"#utility.yul\":9264:9267   */\n      dup4\n        /* \"#utility.yul\":9260:9276   */\n      add\n        /* \"#utility.yul\":9253:9280   */\n      mstore\n        /* \"#utility.yul\":9139:9287   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9293:9716   */\n    tag_479:\n        /* \"#utility.yul\":9370:9375   */\n      0x00\n        /* \"#utility.yul\":9395:9460   */\n      tag_636\n        /* \"#utility.yul\":9411:9459   */\n      tag_637\n        /* \"#utility.yul\":9452:9458   */\n      dup5\n        /* \"#utility.yul\":9411:9459   */\n      tag_477\n      jump\t// in\n    tag_637:\n        /* \"#utility.yul\":9395:9460   */\n      tag_476\n      jump\t// in\n    tag_636:\n        /* \"#utility.yul\":9386:9460   */\n      swap1\n      pop\n        /* \"#utility.yul\":9483:9489   */\n      dup3\n        /* \"#utility.yul\":9476:9481   */\n      dup2\n        /* \"#utility.yul\":9469:9490   */\n      mstore\n        /* \"#utility.yul\":9521:9525   */\n      0x20\n        /* \"#utility.yul\":9514:9519   */\n      dup2\n        /* \"#utility.yul\":9510:9526   */\n      add\n        /* \"#utility.yul\":9559:9562   */\n      dup5\n        /* \"#utility.yul\":9550:9556   */\n      dup5\n        /* \"#utility.yul\":9545:9548   */\n      dup5\n        /* \"#utility.yul\":9541:9557   */\n      add\n        /* \"#utility.yul\":9538:9563   */\n      gt\n        /* \"#utility.yul\":9535:9647   */\n      iszero\n      tag_638\n      jumpi\n        /* \"#utility.yul\":9566:9645   */\n      tag_639\n      tag_472\n      jump\t// in\n    tag_639:\n        /* \"#utility.yul\":9535:9647   */\n    tag_638:\n        /* \"#utility.yul\":9656:9710   */\n      tag_640\n        /* \"#utility.yul\":9703:9709   */\n      dup5\n        /* \"#utility.yul\":9698:9701   */\n      dup3\n        /* \"#utility.yul\":9693:9696   */\n      dup6\n        /* \"#utility.yul\":9656:9710   */\n      tag_478\n      jump\t// in\n    tag_640:\n        /* \"#utility.yul\":9376:9716   */\n      pop\n        /* \"#utility.yul\":9293:9716   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9735:10073   */\n    tag_480:\n        /* \"#utility.yul\":9790:9795   */\n      0x00\n        /* \"#utility.yul\":9839:9842   */\n      dup3\n        /* \"#utility.yul\":9832:9836   */\n      0x1f\n        /* \"#utility.yul\":9824:9830   */\n      dup4\n        /* \"#utility.yul\":9820:9837   */\n      add\n        /* \"#utility.yul\":9816:9843   */\n      slt\n        /* \"#utility.yul\":9806:9928   */\n      tag_642\n      jumpi\n        /* \"#utility.yul\":9847:9926   */\n      tag_643\n      tag_471\n      jump\t// in\n    tag_643:\n        /* \"#utility.yul\":9806:9928   */\n    tag_642:\n        /* \"#utility.yul\":9964:9970   */\n      dup2\n        /* \"#utility.yul\":9951:9971   */\n      calldataload\n        /* \"#utility.yul\":9989:10067   */\n      tag_644\n        /* \"#utility.yul\":10063:10066   */\n      dup5\n        /* \"#utility.yul\":10055:10061   */\n      dup3\n        /* \"#utility.yul\":10048:10052   */\n      0x20\n        /* \"#utility.yul\":10040:10046   */\n      dup7\n        /* \"#utility.yul\":10036:10053   */\n      add\n        /* \"#utility.yul\":9989:10067   */\n      tag_479\n      jump\t// in\n    tag_644:\n        /* \"#utility.yul\":9980:10067   */\n      swap2\n      pop\n        /* \"#utility.yul\":9796:10073   */\n      pop\n        /* \"#utility.yul\":9735:10073   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10079:10731   */\n    tag_158:\n        /* \"#utility.yul\":10156:10162   */\n      0x00\n        /* \"#utility.yul\":10164:10170   */\n      0x00\n        /* \"#utility.yul\":10213:10215   */\n      0x40\n        /* \"#utility.yul\":10201:10210   */\n      dup4\n        /* \"#utility.yul\":10192:10199   */\n      dup6\n        /* \"#utility.yul\":10188:10211   */\n      sub\n        /* \"#utility.yul\":10184:10216   */\n      slt\n        /* \"#utility.yul\":10181:10300   */\n      iszero\n      tag_646\n      jumpi\n        /* \"#utility.yul\":10219:10298   */\n      tag_647\n      tag_448\n      jump\t// in\n    tag_647:\n        /* \"#utility.yul\":10181:10300   */\n    tag_646:\n        /* \"#utility.yul\":10339:10340   */\n      0x00\n        /* \"#utility.yul\":10364:10417   */\n      tag_648\n        /* \"#utility.yul\":10409:10416   */\n      dup6\n        /* \"#utility.yul\":10400:10406   */\n      dup3\n        /* \"#utility.yul\":10389:10398   */\n      dup7\n        /* \"#utility.yul\":10385:10407   */\n      add\n        /* \"#utility.yul\":10364:10417   */\n      tag_457\n      jump\t// in\n    tag_648:\n        /* \"#utility.yul\":10354:10417   */\n      swap3\n      pop\n        /* \"#utility.yul\":10310:10427   */\n      pop\n        /* \"#utility.yul\":10494:10496   */\n      0x20\n        /* \"#utility.yul\":10483:10492   */\n      dup4\n        /* \"#utility.yul\":10479:10497   */\n      add\n        /* \"#utility.yul\":10466:10498   */\n      calldataload\n        /* \"#utility.yul\":10525:10543   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":10517:10523   */\n      dup2\n        /* \"#utility.yul\":10514:10544   */\n      gt\n        /* \"#utility.yul\":10511:10628   */\n      iszero\n      tag_649\n      jumpi\n        /* \"#utility.yul\":10547:10626   */\n      tag_650\n      tag_449\n      jump\t// in\n    tag_650:\n        /* \"#utility.yul\":10511:10628   */\n    tag_649:\n        /* \"#utility.yul\":10652:10714   */\n      tag_651\n        /* \"#utility.yul\":10706:10713   */\n      dup6\n        /* \"#utility.yul\":10697:10703   */\n      dup3\n        /* \"#utility.yul\":10686:10695   */\n      dup7\n        /* \"#utility.yul\":10682:10704   */\n      add\n        /* \"#utility.yul\":10652:10714   */\n      tag_480\n      jump\t// in\n    tag_651:\n        /* \"#utility.yul\":10642:10714   */\n      swap2\n      pop\n        /* \"#utility.yul\":10437:10724   */\n      pop\n        /* \"#utility.yul\":10079:10731   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10737:11205   */\n    tag_162:\n        /* \"#utility.yul\":10802:10808   */\n      0x00\n        /* \"#utility.yul\":10810:10816   */\n      0x00\n        /* \"#utility.yul\":10859:10861   */\n      0x40\n        /* \"#utility.yul\":10847:10856   */\n      dup4\n        /* \"#utility.yul\":10838:10845   */\n      dup6\n        /* \"#utility.yul\":10834:10857   */\n      sub\n        /* \"#utility.yul\":10830:10862   */\n      slt\n        /* \"#utility.yul\":10827:10946   */\n      iszero\n      tag_653\n      jumpi\n        /* \"#utility.yul\":10865:10944   */\n      tag_654\n      tag_448\n      jump\t// in\n    tag_654:\n        /* \"#utility.yul\":10827:10946   */\n    tag_653:\n        /* \"#utility.yul\":10985:10986   */\n      0x00\n        /* \"#utility.yul\":11010:11063   */\n      tag_655\n        /* \"#utility.yul\":11055:11062   */\n      dup6\n        /* \"#utility.yul\":11046:11052   */\n      dup3\n        /* \"#utility.yul\":11035:11044   */\n      dup7\n        /* \"#utility.yul\":11031:11053   */\n      add\n        /* \"#utility.yul\":11010:11063   */\n      tag_457\n      jump\t// in\n    tag_655:\n        /* \"#utility.yul\":11000:11063   */\n      swap3\n      pop\n        /* \"#utility.yul\":10956:11073   */\n      pop\n        /* \"#utility.yul\":11112:11114   */\n      0x20\n        /* \"#utility.yul\":11138:11188   */\n      tag_656\n        /* \"#utility.yul\":11180:11187   */\n      dup6\n        /* \"#utility.yul\":11171:11177   */\n      dup3\n        /* \"#utility.yul\":11160:11169   */\n      dup7\n        /* \"#utility.yul\":11156:11178   */\n      add\n        /* \"#utility.yul\":11138:11188   */\n      tag_466\n      jump\t// in\n    tag_656:\n        /* \"#utility.yul\":11128:11188   */\n      swap2\n      pop\n        /* \"#utility.yul\":11083:11198   */\n      pop\n        /* \"#utility.yul\":10737:11205   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11211:11380   */\n    tag_481:\n        /* \"#utility.yul\":11295:11306   */\n      0x00\n        /* \"#utility.yul\":11329:11335   */\n      dup3\n        /* \"#utility.yul\":11324:11327   */\n      dup3\n        /* \"#utility.yul\":11317:11336   */\n      mstore\n        /* \"#utility.yul\":11369:11373   */\n      0x20\n        /* \"#utility.yul\":11364:11367   */\n      dup3\n        /* \"#utility.yul\":11360:11374   */\n      add\n        /* \"#utility.yul\":11345:11374   */\n      swap1\n      pop\n        /* \"#utility.yul\":11211:11380   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11386:11554   */\n    tag_482:\n        /* \"#utility.yul\":11526:11546   */\n      0x436f6e7472616374206973207061757365640000000000000000000000000000\n        /* \"#utility.yul\":11522:11523   */\n      0x00\n        /* \"#utility.yul\":11514:11520   */\n      dup3\n        /* \"#utility.yul\":11510:11524   */\n      add\n        /* \"#utility.yul\":11503:11547   */\n      mstore\n        /* \"#utility.yul\":11386:11554   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11560:11926   */\n    tag_483:\n        /* \"#utility.yul\":11702:11705   */\n      0x00\n        /* \"#utility.yul\":11723:11790   */\n      tag_660\n        /* \"#utility.yul\":11787:11789   */\n      0x12\n        /* \"#utility.yul\":11782:11785   */\n      dup4\n        /* \"#utility.yul\":11723:11790   */\n      tag_481\n      jump\t// in\n    tag_660:\n        /* \"#utility.yul\":11716:11790   */\n      swap2\n      pop\n        /* \"#utility.yul\":11799:11892   */\n      tag_661\n        /* \"#utility.yul\":11888:11891   */\n      dup3\n        /* \"#utility.yul\":11799:11892   */\n      tag_482\n      jump\t// in\n    tag_661:\n        /* \"#utility.yul\":11917:11919   */\n      0x20\n        /* \"#utility.yul\":11912:11915   */\n      dup3\n        /* \"#utility.yul\":11908:11920   */\n      add\n        /* \"#utility.yul\":11901:11920   */\n      swap1\n      pop\n        /* \"#utility.yul\":11560:11926   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11932:12351   */\n    tag_186:\n        /* \"#utility.yul\":12098:12102   */\n      0x00\n        /* \"#utility.yul\":12136:12138   */\n      0x20\n        /* \"#utility.yul\":12125:12134   */\n      dup3\n        /* \"#utility.yul\":12121:12139   */\n      add\n        /* \"#utility.yul\":12113:12139   */\n      swap1\n      pop\n        /* \"#utility.yul\":12185:12194   */\n      dup2\n        /* \"#utility.yul\":12179:12183   */\n      dup2\n        /* \"#utility.yul\":12175:12195   */\n      sub\n        /* \"#utility.yul\":12171:12172   */\n      0x00\n        /* \"#utility.yul\":12160:12169   */\n      dup4\n        /* \"#utility.yul\":12156:12173   */\n      add\n        /* \"#utility.yul\":12149:12196   */\n      mstore\n        /* \"#utility.yul\":12213:12344   */\n      tag_663\n        /* \"#utility.yul\":12339:12343   */\n      dup2\n        /* \"#utility.yul\":12213:12344   */\n      tag_483\n      jump\t// in\n    tag_663:\n        /* \"#utility.yul\":12205:12344   */\n      swap1\n      pop\n        /* \"#utility.yul\":11932:12351   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12357:12522   */\n    tag_484:\n        /* \"#utility.yul\":12497:12514   */\n      0x4e6f7420696e697469616c697a65640000000000000000000000000000000000\n        /* \"#utility.yul\":12493:12494   */\n      0x00\n        /* \"#utility.yul\":12485:12491   */\n      dup3\n        /* \"#utility.yul\":12481:12495   */\n      add\n        /* \"#utility.yul\":12474:12515   */\n      mstore\n        /* \"#utility.yul\":12357:12522   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12528:12894   */\n    tag_485:\n        /* \"#utility.yul\":12670:12673   */\n      0x00\n        /* \"#utility.yul\":12691:12758   */\n      tag_666\n        /* \"#utility.yul\":12755:12757   */\n      0x0f\n        /* \"#utility.yul\":12750:12753   */\n      dup4\n        /* \"#utility.yul\":12691:12758   */\n      tag_481\n      jump\t// in\n    tag_666:\n        /* \"#utility.yul\":12684:12758   */\n      swap2\n      pop\n        /* \"#utility.yul\":12767:12860   */\n      tag_667\n        /* \"#utility.yul\":12856:12859   */\n      dup3\n        /* \"#utility.yul\":12767:12860   */\n      tag_484\n      jump\t// in\n    tag_667:\n        /* \"#utility.yul\":12885:12887   */\n      0x20\n        /* \"#utility.yul\":12880:12883   */\n      dup3\n        /* \"#utility.yul\":12876:12888   */\n      add\n        /* \"#utility.yul\":12869:12888   */\n      swap1\n      pop\n        /* \"#utility.yul\":12528:12894   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12900:13319   */\n    tag_193:\n        /* \"#utility.yul\":13066:13070   */\n      0x00\n        /* \"#utility.yul\":13104:13106   */\n      0x20\n        /* \"#utility.yul\":13093:13102   */\n      dup3\n        /* \"#utility.yul\":13089:13107   */\n      add\n        /* \"#utility.yul\":13081:13107   */\n      swap1\n      pop\n        /* \"#utility.yul\":13153:13162   */\n      dup2\n        /* \"#utility.yul\":13147:13151   */\n      dup2\n        /* \"#utility.yul\":13143:13163   */\n      sub\n        /* \"#utility.yul\":13139:13140   */\n      0x00\n        /* \"#utility.yul\":13128:13137   */\n      dup4\n        /* \"#utility.yul\":13124:13141   */\n      add\n        /* \"#utility.yul\":13117:13164   */\n      mstore\n        /* \"#utility.yul\":13181:13312   */\n      tag_669\n        /* \"#utility.yul\":13307:13311   */\n      dup2\n        /* \"#utility.yul\":13181:13312   */\n      tag_485\n      jump\t// in\n    tag_669:\n        /* \"#utility.yul\":13173:13312   */\n      swap1\n      pop\n        /* \"#utility.yul\":12900:13319   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13325:13767   */\n    tag_195:\n        /* \"#utility.yul\":13474:13478   */\n      0x00\n        /* \"#utility.yul\":13512:13514   */\n      0x60\n        /* \"#utility.yul\":13501:13510   */\n      dup3\n        /* \"#utility.yul\":13497:13515   */\n      add\n        /* \"#utility.yul\":13489:13515   */\n      swap1\n      pop\n        /* \"#utility.yul\":13525:13596   */\n      tag_671\n        /* \"#utility.yul\":13593:13594   */\n      0x00\n        /* \"#utility.yul\":13582:13591   */\n      dup4\n        /* \"#utility.yul\":13578:13595   */\n      add\n        /* \"#utility.yul\":13569:13575   */\n      dup7\n        /* \"#utility.yul\":13525:13596   */\n      tag_467\n      jump\t// in\n    tag_671:\n        /* \"#utility.yul\":13606:13678   */\n      tag_672\n        /* \"#utility.yul\":13674:13676   */\n      0x20\n        /* \"#utility.yul\":13663:13672   */\n      dup4\n        /* \"#utility.yul\":13659:13677   */\n      add\n        /* \"#utility.yul\":13650:13656   */\n      dup6\n        /* \"#utility.yul\":13606:13678   */\n      tag_467\n      jump\t// in\n    tag_672:\n        /* \"#utility.yul\":13688:13760   */\n      tag_673\n        /* \"#utility.yul\":13756:13758   */\n      0x40\n        /* \"#utility.yul\":13745:13754   */\n      dup4\n        /* \"#utility.yul\":13741:13759   */\n      add\n        /* \"#utility.yul\":13732:13738   */\n      dup5\n        /* \"#utility.yul\":13688:13760   */\n      tag_455\n      jump\t// in\n    tag_673:\n        /* \"#utility.yul\":13325:13767   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13773:13910   */\n    tag_486:\n        /* \"#utility.yul\":13827:13832   */\n      0x00\n        /* \"#utility.yul\":13858:13864   */\n      dup2\n        /* \"#utility.yul\":13852:13865   */\n      mload\n        /* \"#utility.yul\":13843:13865   */\n      swap1\n      pop\n        /* \"#utility.yul\":13874:13904   */\n      tag_675\n        /* \"#utility.yul\":13898:13903   */\n      dup2\n        /* \"#utility.yul\":13874:13904   */\n      tag_465\n      jump\t// in\n    tag_675:\n        /* \"#utility.yul\":13773:13910   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13916:14261   */\n    tag_199:\n        /* \"#utility.yul\":13983:13989   */\n      0x00\n        /* \"#utility.yul\":14032:14034   */\n      0x20\n        /* \"#utility.yul\":14020:14029   */\n      dup3\n        /* \"#utility.yul\":14011:14018   */\n      dup5\n        /* \"#utility.yul\":14007:14030   */\n      sub\n        /* \"#utility.yul\":14003:14035   */\n      slt\n        /* \"#utility.yul\":14000:14119   */\n      iszero\n      tag_677\n      jumpi\n        /* \"#utility.yul\":14038:14117   */\n      tag_678\n      tag_448\n      jump\t// in\n    tag_678:\n        /* \"#utility.yul\":14000:14119   */\n    tag_677:\n        /* \"#utility.yul\":14158:14159   */\n      0x00\n        /* \"#utility.yul\":14183:14244   */\n      tag_679\n        /* \"#utility.yul\":14236:14243   */\n      dup5\n        /* \"#utility.yul\":14227:14233   */\n      dup3\n        /* \"#utility.yul\":14216:14225   */\n      dup6\n        /* \"#utility.yul\":14212:14234   */\n      add\n        /* \"#utility.yul\":14183:14244   */\n      tag_486\n      jump\t// in\n    tag_679:\n        /* \"#utility.yul\":14173:14244   */\n      swap2\n      pop\n        /* \"#utility.yul\":14129:14254   */\n      pop\n        /* \"#utility.yul\":13916:14261   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14267:14432   */\n    tag_487:\n        /* \"#utility.yul\":14407:14424   */\n      0x5472616e73666572206661696c65640000000000000000000000000000000000\n        /* \"#utility.yul\":14403:14404   */\n      0x00\n        /* \"#utility.yul\":14395:14401   */\n      dup3\n        /* \"#utility.yul\":14391:14405   */\n      add\n        /* \"#utility.yul\":14384:14425   */\n      mstore\n        /* \"#utility.yul\":14267:14432   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14438:14804   */\n    tag_488:\n        /* \"#utility.yul\":14580:14583   */\n      0x00\n        /* \"#utility.yul\":14601:14668   */\n      tag_682\n        /* \"#utility.yul\":14665:14667   */\n      0x0f\n        /* \"#utility.yul\":14660:14663   */\n      dup4\n        /* \"#utility.yul\":14601:14668   */\n      tag_481\n      jump\t// in\n    tag_682:\n        /* \"#utility.yul\":14594:14668   */\n      swap2\n      pop\n        /* \"#utility.yul\":14677:14770   */\n      tag_683\n        /* \"#utility.yul\":14766:14769   */\n      dup3\n        /* \"#utility.yul\":14677:14770   */\n      tag_487\n      jump\t// in\n    tag_683:\n        /* \"#utility.yul\":14795:14797   */\n      0x20\n        /* \"#utility.yul\":14790:14793   */\n      dup3\n        /* \"#utility.yul\":14786:14798   */\n      add\n        /* \"#utility.yul\":14779:14798   */\n      swap1\n      pop\n        /* \"#utility.yul\":14438:14804   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14810:15229   */\n    tag_202:\n        /* \"#utility.yul\":14976:14980   */\n      0x00\n        /* \"#utility.yul\":15014:15016   */\n      0x20\n        /* \"#utility.yul\":15003:15012   */\n      dup3\n        /* \"#utility.yul\":14999:15017   */\n      add\n        /* \"#utility.yul\":14991:15017   */\n      swap1\n      pop\n        /* \"#utility.yul\":15063:15072   */\n      dup2\n        /* \"#utility.yul\":15057:15061   */\n      dup2\n        /* \"#utility.yul\":15053:15073   */\n      sub\n        /* \"#utility.yul\":15049:15050   */\n      0x00\n        /* \"#utility.yul\":15038:15047   */\n      dup4\n        /* \"#utility.yul\":15034:15051   */\n      add\n        /* \"#utility.yul\":15027:15074   */\n      mstore\n        /* \"#utility.yul\":15091:15222   */\n      tag_685\n        /* \"#utility.yul\":15217:15221   */\n      dup2\n        /* \"#utility.yul\":15091:15222   */\n      tag_488\n      jump\t// in\n    tag_685:\n        /* \"#utility.yul\":15083:15222   */\n      swap1\n      pop\n        /* \"#utility.yul\":14810:15229   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15235:15415   */\n    tag_489:\n        /* \"#utility.yul\":15283:15360   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15280:15281   */\n      0x00\n        /* \"#utility.yul\":15273:15361   */\n      mstore\n        /* \"#utility.yul\":15380:15384   */\n      0x11\n        /* \"#utility.yul\":15377:15378   */\n      0x04\n        /* \"#utility.yul\":15370:15385   */\n      mstore\n        /* \"#utility.yul\":15404:15408   */\n      0x24\n        /* \"#utility.yul\":15401:15402   */\n      0x00\n        /* \"#utility.yul\":15394:15409   */\n      revert\n        /* \"#utility.yul\":15421:15612   */\n    tag_206:\n        /* \"#utility.yul\":15461:15464   */\n      0x00\n        /* \"#utility.yul\":15480:15500   */\n      tag_688\n        /* \"#utility.yul\":15498:15499   */\n      dup3\n        /* \"#utility.yul\":15480:15500   */\n      tag_454\n      jump\t// in\n    tag_688:\n        /* \"#utility.yul\":15475:15500   */\n      swap2\n      pop\n        /* \"#utility.yul\":15514:15534   */\n      tag_689\n        /* \"#utility.yul\":15532:15533   */\n      dup4\n        /* \"#utility.yul\":15514:15534   */\n      tag_454\n      jump\t// in\n    tag_689:\n        /* \"#utility.yul\":15509:15534   */\n      swap3\n      pop\n        /* \"#utility.yul\":15557:15558   */\n      dup3\n        /* \"#utility.yul\":15554:15555   */\n      dup3\n        /* \"#utility.yul\":15550:15559   */\n      add\n        /* \"#utility.yul\":15543:15559   */\n      swap1\n      pop\n        /* \"#utility.yul\":15578:15581   */\n      dup1\n        /* \"#utility.yul\":15575:15576   */\n      dup3\n        /* \"#utility.yul\":15572:15582   */\n      gt\n        /* \"#utility.yul\":15569:15605   */\n      iszero\n      tag_690\n      jumpi\n        /* \"#utility.yul\":15585:15603   */\n      tag_691\n      tag_489\n      jump\t// in\n    tag_691:\n        /* \"#utility.yul\":15569:15605   */\n    tag_690:\n        /* \"#utility.yul\":15421:15612   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15618:15794   */\n    tag_490:\n        /* \"#utility.yul\":15758:15786   */\n      0x496e73756666696369656e74207374616b656420616d6f756e74000000000000\n        /* \"#utility.yul\":15754:15755   */\n      0x00\n        /* \"#utility.yul\":15746:15752   */\n      dup3\n        /* \"#utility.yul\":15742:15756   */\n      add\n        /* \"#utility.yul\":15735:15787   */\n      mstore\n        /* \"#utility.yul\":15618:15794   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15800:16166   */\n    tag_491:\n        /* \"#utility.yul\":15942:15945   */\n      0x00\n        /* \"#utility.yul\":15963:16030   */\n      tag_694\n        /* \"#utility.yul\":16027:16029   */\n      0x1a\n        /* \"#utility.yul\":16022:16025   */\n      dup4\n        /* \"#utility.yul\":15963:16030   */\n      tag_481\n      jump\t// in\n    tag_694:\n        /* \"#utility.yul\":15956:16030   */\n      swap2\n      pop\n        /* \"#utility.yul\":16039:16132   */\n      tag_695\n        /* \"#utility.yul\":16128:16131   */\n      dup3\n        /* \"#utility.yul\":16039:16132   */\n      tag_490\n      jump\t// in\n    tag_695:\n        /* \"#utility.yul\":16157:16159   */\n      0x20\n        /* \"#utility.yul\":16152:16155   */\n      dup3\n        /* \"#utility.yul\":16148:16160   */\n      add\n        /* \"#utility.yul\":16141:16160   */\n      swap1\n      pop\n        /* \"#utility.yul\":15800:16166   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16172:16591   */\n    tag_226:\n        /* \"#utility.yul\":16338:16342   */\n      0x00\n        /* \"#utility.yul\":16376:16378   */\n      0x20\n        /* \"#utility.yul\":16365:16374   */\n      dup3\n        /* \"#utility.yul\":16361:16379   */\n      add\n        /* \"#utility.yul\":16353:16379   */\n      swap1\n      pop\n        /* \"#utility.yul\":16425:16434   */\n      dup2\n        /* \"#utility.yul\":16419:16423   */\n      dup2\n        /* \"#utility.yul\":16415:16435   */\n      sub\n        /* \"#utility.yul\":16411:16412   */\n      0x00\n        /* \"#utility.yul\":16400:16409   */\n      dup4\n        /* \"#utility.yul\":16396:16413   */\n      add\n        /* \"#utility.yul\":16389:16436   */\n      mstore\n        /* \"#utility.yul\":16453:16584   */\n      tag_697\n        /* \"#utility.yul\":16579:16583   */\n      dup2\n        /* \"#utility.yul\":16453:16584   */\n      tag_491\n      jump\t// in\n    tag_697:\n        /* \"#utility.yul\":16445:16584   */\n      swap1\n      pop\n        /* \"#utility.yul\":16172:16591   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16597:17007   */\n    tag_230:\n        /* \"#utility.yul\":16637:16644   */\n      0x00\n        /* \"#utility.yul\":16660:16680   */\n      tag_699\n        /* \"#utility.yul\":16678:16679   */\n      dup3\n        /* \"#utility.yul\":16660:16680   */\n      tag_454\n      jump\t// in\n    tag_699:\n        /* \"#utility.yul\":16655:16680   */\n      swap2\n      pop\n        /* \"#utility.yul\":16694:16714   */\n      tag_700\n        /* \"#utility.yul\":16712:16713   */\n      dup4\n        /* \"#utility.yul\":16694:16714   */\n      tag_454\n      jump\t// in\n    tag_700:\n        /* \"#utility.yul\":16689:16714   */\n      swap3\n      pop\n        /* \"#utility.yul\":16749:16750   */\n      dup3\n        /* \"#utility.yul\":16746:16747   */\n      dup3\n        /* \"#utility.yul\":16742:16751   */\n      mul\n        /* \"#utility.yul\":16771:16801   */\n      tag_701\n        /* \"#utility.yul\":16789:16800   */\n      dup2\n        /* \"#utility.yul\":16771:16801   */\n      tag_454\n      jump\t// in\n    tag_701:\n        /* \"#utility.yul\":16760:16801   */\n      swap2\n      pop\n        /* \"#utility.yul\":16950:16951   */\n      dup3\n        /* \"#utility.yul\":16941:16948   */\n      dup3\n        /* \"#utility.yul\":16937:16952   */\n      div\n        /* \"#utility.yul\":16934:16935   */\n      dup5\n        /* \"#utility.yul\":16931:16953   */\n      eq\n        /* \"#utility.yul\":16911:16912   */\n      dup4\n        /* \"#utility.yul\":16904:16913   */\n      iszero\n        /* \"#utility.yul\":16884:16967   */\n      or\n        /* \"#utility.yul\":16861:17000   */\n      tag_702\n      jumpi\n        /* \"#utility.yul\":16980:16998   */\n      tag_703\n      tag_489\n      jump\t// in\n    tag_703:\n        /* \"#utility.yul\":16861:17000   */\n    tag_702:\n        /* \"#utility.yul\":16645:17007   */\n      pop\n        /* \"#utility.yul\":16597:17007   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17013:17193   */\n    tag_492:\n        /* \"#utility.yul\":17061:17138   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":17058:17059   */\n      0x00\n        /* \"#utility.yul\":17051:17139   */\n      mstore\n        /* \"#utility.yul\":17158:17162   */\n      0x12\n        /* \"#utility.yul\":17155:17156   */\n      0x04\n        /* \"#utility.yul\":17148:17163   */\n      mstore\n        /* \"#utility.yul\":17182:17186   */\n      0x24\n        /* \"#utility.yul\":17179:17180   */\n      0x00\n        /* \"#utility.yul\":17172:17187   */\n      revert\n        /* \"#utility.yul\":17199:17384   */\n    tag_232:\n        /* \"#utility.yul\":17239:17240   */\n      0x00\n        /* \"#utility.yul\":17256:17276   */\n      tag_706\n        /* \"#utility.yul\":17274:17275   */\n      dup3\n        /* \"#utility.yul\":17256:17276   */\n      tag_454\n      jump\t// in\n    tag_706:\n        /* \"#utility.yul\":17251:17276   */\n      swap2\n      pop\n        /* \"#utility.yul\":17290:17310   */\n      tag_707\n        /* \"#utility.yul\":17308:17309   */\n      dup4\n        /* \"#utility.yul\":17290:17310   */\n      tag_454\n      jump\t// in\n    tag_707:\n        /* \"#utility.yul\":17285:17310   */\n      swap3\n      pop\n        /* \"#utility.yul\":17329:17330   */\n      dup3\n        /* \"#utility.yul\":17319:17354   */\n      tag_708\n      jumpi\n        /* \"#utility.yul\":17334:17352   */\n      tag_709\n      tag_492\n      jump\t// in\n    tag_709:\n        /* \"#utility.yul\":17319:17354   */\n    tag_708:\n        /* \"#utility.yul\":17376:17377   */\n      dup3\n        /* \"#utility.yul\":17373:17374   */\n      dup3\n        /* \"#utility.yul\":17369:17378   */\n      div\n        /* \"#utility.yul\":17364:17378   */\n      swap1\n      pop\n        /* \"#utility.yul\":17199:17384   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17390:17584   */\n    tag_234:\n        /* \"#utility.yul\":17430:17434   */\n      0x00\n        /* \"#utility.yul\":17450:17470   */\n      tag_711\n        /* \"#utility.yul\":17468:17469   */\n      dup3\n        /* \"#utility.yul\":17450:17470   */\n      tag_454\n      jump\t// in\n    tag_711:\n        /* \"#utility.yul\":17445:17470   */\n      swap2\n      pop\n        /* \"#utility.yul\":17484:17504   */\n      tag_712\n        /* \"#utility.yul\":17502:17503   */\n      dup4\n        /* \"#utility.yul\":17484:17504   */\n      tag_454\n      jump\t// in\n    tag_712:\n        /* \"#utility.yul\":17479:17504   */\n      swap3\n      pop\n        /* \"#utility.yul\":17528:17529   */\n      dup3\n        /* \"#utility.yul\":17525:17526   */\n      dup3\n        /* \"#utility.yul\":17521:17530   */\n      sub\n        /* \"#utility.yul\":17513:17530   */\n      swap1\n      pop\n        /* \"#utility.yul\":17552:17553   */\n      dup2\n        /* \"#utility.yul\":17546:17550   */\n      dup2\n        /* \"#utility.yul\":17543:17554   */\n      gt\n        /* \"#utility.yul\":17540:17577   */\n      iszero\n      tag_713\n      jumpi\n        /* \"#utility.yul\":17557:17575   */\n      tag_714\n      tag_489\n      jump\t// in\n    tag_714:\n        /* \"#utility.yul\":17540:17577   */\n    tag_713:\n        /* \"#utility.yul\":17390:17584   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17590:17922   */\n    tag_237:\n        /* \"#utility.yul\":17711:17715   */\n      0x00\n        /* \"#utility.yul\":17749:17751   */\n      0x40\n        /* \"#utility.yul\":17738:17747   */\n      dup3\n        /* \"#utility.yul\":17734:17752   */\n      add\n        /* \"#utility.yul\":17726:17752   */\n      swap1\n      pop\n        /* \"#utility.yul\":17762:17833   */\n      tag_716\n        /* \"#utility.yul\":17830:17831   */\n      0x00\n        /* \"#utility.yul\":17819:17828   */\n      dup4\n        /* \"#utility.yul\":17815:17832   */\n      add\n        /* \"#utility.yul\":17806:17812   */\n      dup6\n        /* \"#utility.yul\":17762:17833   */\n      tag_467\n      jump\t// in\n    tag_716:\n        /* \"#utility.yul\":17843:17915   */\n      tag_717\n        /* \"#utility.yul\":17911:17913   */\n      0x20\n        /* \"#utility.yul\":17900:17909   */\n      dup4\n        /* \"#utility.yul\":17896:17914   */\n      add\n        /* \"#utility.yul\":17887:17893   */\n      dup5\n        /* \"#utility.yul\":17843:17915   */\n      tag_455\n      jump\t// in\n    tag_717:\n        /* \"#utility.yul\":17590:17922   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17928:18260   */\n    tag_248:\n        /* \"#utility.yul\":18049:18053   */\n      0x00\n        /* \"#utility.yul\":18087:18089   */\n      0x40\n        /* \"#utility.yul\":18076:18085   */\n      dup3\n        /* \"#utility.yul\":18072:18090   */\n      add\n        /* \"#utility.yul\":18064:18090   */\n      swap1\n      pop\n        /* \"#utility.yul\":18100:18171   */\n      tag_719\n        /* \"#utility.yul\":18168:18169   */\n      0x00\n        /* \"#utility.yul\":18157:18166   */\n      dup4\n        /* \"#utility.yul\":18153:18170   */\n      add\n        /* \"#utility.yul\":18144:18150   */\n      dup6\n        /* \"#utility.yul\":18100:18171   */\n      tag_455\n      jump\t// in\n    tag_719:\n        /* \"#utility.yul\":18181:18253   */\n      tag_720\n        /* \"#utility.yul\":18249:18251   */\n      0x20\n        /* \"#utility.yul\":18238:18247   */\n      dup4\n        /* \"#utility.yul\":18234:18252   */\n      add\n        /* \"#utility.yul\":18225:18231   */\n      dup5\n        /* \"#utility.yul\":18181:18253   */\n      tag_455\n      jump\t// in\n    tag_720:\n        /* \"#utility.yul\":17928:18260   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18266:18435   */\n    tag_493:\n        /* \"#utility.yul\":18406:18427   */\n      0x416c726561647920696e697469616c697a656400000000000000000000000000\n        /* \"#utility.yul\":18402:18403   */\n      0x00\n        /* \"#utility.yul\":18394:18400   */\n      dup3\n        /* \"#utility.yul\":18390:18404   */\n      add\n        /* \"#utility.yul\":18383:18428   */\n      mstore\n        /* \"#utility.yul\":18266:18435   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18441:18807   */\n    tag_494:\n        /* \"#utility.yul\":18583:18586   */\n      0x00\n        /* \"#utility.yul\":18604:18671   */\n      tag_723\n        /* \"#utility.yul\":18668:18670   */\n      0x13\n        /* \"#utility.yul\":18663:18666   */\n      dup4\n        /* \"#utility.yul\":18604:18671   */\n      tag_481\n      jump\t// in\n    tag_723:\n        /* \"#utility.yul\":18597:18671   */\n      swap2\n      pop\n        /* \"#utility.yul\":18680:18773   */\n      tag_724\n        /* \"#utility.yul\":18769:18772   */\n      dup3\n        /* \"#utility.yul\":18680:18773   */\n      tag_493\n      jump\t// in\n    tag_724:\n        /* \"#utility.yul\":18798:18800   */\n      0x20\n        /* \"#utility.yul\":18793:18796   */\n      dup3\n        /* \"#utility.yul\":18789:18801   */\n      add\n        /* \"#utility.yul\":18782:18801   */\n      swap1\n      pop\n        /* \"#utility.yul\":18441:18807   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18813:19232   */\n    tag_268:\n        /* \"#utility.yul\":18979:18983   */\n      0x00\n        /* \"#utility.yul\":19017:19019   */\n      0x20\n        /* \"#utility.yul\":19006:19015   */\n      dup3\n        /* \"#utility.yul\":19002:19020   */\n      add\n        /* \"#utility.yul\":18994:19020   */\n      swap1\n      pop\n        /* \"#utility.yul\":19066:19075   */\n      dup2\n        /* \"#utility.yul\":19060:19064   */\n      dup2\n        /* \"#utility.yul\":19056:19076   */\n      sub\n        /* \"#utility.yul\":19052:19053   */\n      0x00\n        /* \"#utility.yul\":19041:19050   */\n      dup4\n        /* \"#utility.yul\":19037:19054   */\n      add\n        /* \"#utility.yul\":19030:19077   */\n      mstore\n        /* \"#utility.yul\":19094:19225   */\n      tag_726\n        /* \"#utility.yul\":19220:19224   */\n      dup2\n        /* \"#utility.yul\":19094:19225   */\n      tag_494\n      jump\t// in\n    tag_726:\n        /* \"#utility.yul\":19086:19225   */\n      swap1\n      pop\n        /* \"#utility.yul\":18813:19232   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19238:19401   */\n    tag_495:\n        /* \"#utility.yul\":19378:19393   */\n      0x496e76616c6964206e6f6e636500000000000000000000000000000000000000\n        /* \"#utility.yul\":19374:19375   */\n      0x00\n        /* \"#utility.yul\":19366:19372   */\n      dup3\n        /* \"#utility.yul\":19362:19376   */\n      add\n        /* \"#utility.yul\":19355:19394   */\n      mstore\n        /* \"#utility.yul\":19238:19401   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19407:19773   */\n    tag_496:\n        /* \"#utility.yul\":19549:19552   */\n      0x00\n        /* \"#utility.yul\":19570:19637   */\n      tag_729\n        /* \"#utility.yul\":19634:19636   */\n      0x0d\n        /* \"#utility.yul\":19629:19632   */\n      dup4\n        /* \"#utility.yul\":19570:19637   */\n      tag_481\n      jump\t// in\n    tag_729:\n        /* \"#utility.yul\":19563:19637   */\n      swap2\n      pop\n        /* \"#utility.yul\":19646:19739   */\n      tag_730\n        /* \"#utility.yul\":19735:19738   */\n      dup3\n        /* \"#utility.yul\":19646:19739   */\n      tag_495\n      jump\t// in\n    tag_730:\n        /* \"#utility.yul\":19764:19766   */\n      0x20\n        /* \"#utility.yul\":19759:19762   */\n      dup3\n        /* \"#utility.yul\":19755:19767   */\n      add\n        /* \"#utility.yul\":19748:19767   */\n      swap1\n      pop\n        /* \"#utility.yul\":19407:19773   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19779:20198   */\n    tag_280:\n        /* \"#utility.yul\":19945:19949   */\n      0x00\n        /* \"#utility.yul\":19983:19985   */\n      0x20\n        /* \"#utility.yul\":19972:19981   */\n      dup3\n        /* \"#utility.yul\":19968:19986   */\n      add\n        /* \"#utility.yul\":19960:19986   */\n      swap1\n      pop\n        /* \"#utility.yul\":20032:20041   */\n      dup2\n        /* \"#utility.yul\":20026:20030   */\n      dup2\n        /* \"#utility.yul\":20022:20042   */\n      sub\n        /* \"#utility.yul\":20018:20019   */\n      0x00\n        /* \"#utility.yul\":20007:20016   */\n      dup4\n        /* \"#utility.yul\":20003:20020   */\n      add\n        /* \"#utility.yul\":19996:20043   */\n      mstore\n        /* \"#utility.yul\":20060:20191   */\n      tag_732\n        /* \"#utility.yul\":20186:20190   */\n      dup2\n        /* \"#utility.yul\":20060:20191   */\n      tag_496\n      jump\t// in\n    tag_732:\n        /* \"#utility.yul\":20052:20191   */\n      swap1\n      pop\n        /* \"#utility.yul\":19779:20198   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20204:20437   */\n    tag_282:\n        /* \"#utility.yul\":20243:20246   */\n      0x00\n        /* \"#utility.yul\":20266:20290   */\n      tag_734\n        /* \"#utility.yul\":20284:20289   */\n      dup3\n        /* \"#utility.yul\":20266:20290   */\n      tag_454\n      jump\t// in\n    tag_734:\n        /* \"#utility.yul\":20257:20290   */\n      swap2\n      pop\n        /* \"#utility.yul\":20312:20378   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":20305:20310   */\n      dup3\n        /* \"#utility.yul\":20302:20379   */\n      sub\n        /* \"#utility.yul\":20299:20402   */\n      tag_735\n      jumpi\n        /* \"#utility.yul\":20382:20400   */\n      tag_736\n      tag_489\n      jump\t// in\n    tag_736:\n        /* \"#utility.yul\":20299:20402   */\n    tag_735:\n        /* \"#utility.yul\":20429:20430   */\n      0x01\n        /* \"#utility.yul\":20422:20427   */\n      dup3\n        /* \"#utility.yul\":20418:20431   */\n      add\n        /* \"#utility.yul\":20411:20431   */\n      swap1\n      pop\n        /* \"#utility.yul\":20204:20437   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20443:20607   */\n    tag_497:\n        /* \"#utility.yul\":20583:20599   */\n      0x4e6f207374616b6520666f756e64000000000000000000000000000000000000\n        /* \"#utility.yul\":20579:20580   */\n      0x00\n        /* \"#utility.yul\":20571:20577   */\n      dup3\n        /* \"#utility.yul\":20567:20581   */\n      add\n        /* \"#utility.yul\":20560:20600   */\n      mstore\n        /* \"#utility.yul\":20443:20607   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20613:20979   */\n    tag_498:\n        /* \"#utility.yul\":20755:20758   */\n      0x00\n        /* \"#utility.yul\":20776:20843   */\n      tag_739\n        /* \"#utility.yul\":20840:20842   */\n      0x0e\n        /* \"#utility.yul\":20835:20838   */\n      dup4\n        /* \"#utility.yul\":20776:20843   */\n      tag_481\n      jump\t// in\n    tag_739:\n        /* \"#utility.yul\":20769:20843   */\n      swap2\n      pop\n        /* \"#utility.yul\":20852:20945   */\n      tag_740\n        /* \"#utility.yul\":20941:20944   */\n      dup3\n        /* \"#utility.yul\":20852:20945   */\n      tag_497\n      jump\t// in\n    tag_740:\n        /* \"#utility.yul\":20970:20972   */\n      0x20\n        /* \"#utility.yul\":20965:20968   */\n      dup3\n        /* \"#utility.yul\":20961:20973   */\n      add\n        /* \"#utility.yul\":20954:20973   */\n      swap1\n      pop\n        /* \"#utility.yul\":20613:20979   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20985:21404   */\n    tag_285:\n        /* \"#utility.yul\":21151:21155   */\n      0x00\n        /* \"#utility.yul\":21189:21191   */\n      0x20\n        /* \"#utility.yul\":21178:21187   */\n      dup3\n        /* \"#utility.yul\":21174:21192   */\n      add\n        /* \"#utility.yul\":21166:21192   */\n      swap1\n      pop\n        /* \"#utility.yul\":21238:21247   */\n      dup2\n        /* \"#utility.yul\":21232:21236   */\n      dup2\n        /* \"#utility.yul\":21228:21248   */\n      sub\n        /* \"#utility.yul\":21224:21225   */\n      0x00\n        /* \"#utility.yul\":21213:21222   */\n      dup4\n        /* \"#utility.yul\":21209:21226   */\n      add\n        /* \"#utility.yul\":21202:21249   */\n      mstore\n        /* \"#utility.yul\":21266:21397   */\n      tag_742\n        /* \"#utility.yul\":21392:21396   */\n      dup2\n        /* \"#utility.yul\":21266:21397   */\n      tag_498\n      jump\t// in\n    tag_742:\n        /* \"#utility.yul\":21258:21397   */\n      swap1\n      pop\n        /* \"#utility.yul\":20985:21404   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21410:21575   */\n    tag_499:\n        /* \"#utility.yul\":21550:21567   */\n      0x4e6f2074696d6520656c61707365640000000000000000000000000000000000\n        /* \"#utility.yul\":21546:21547   */\n      0x00\n        /* \"#utility.yul\":21538:21544   */\n      dup3\n        /* \"#utility.yul\":21534:21548   */\n      add\n        /* \"#utility.yul\":21527:21568   */\n      mstore\n        /* \"#utility.yul\":21410:21575   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21581:21947   */\n    tag_500:\n        /* \"#utility.yul\":21723:21726   */\n      0x00\n        /* \"#utility.yul\":21744:21811   */\n      tag_745\n        /* \"#utility.yul\":21808:21810   */\n      0x0f\n        /* \"#utility.yul\":21803:21806   */\n      dup4\n        /* \"#utility.yul\":21744:21811   */\n      tag_481\n      jump\t// in\n    tag_745:\n        /* \"#utility.yul\":21737:21811   */\n      swap2\n      pop\n        /* \"#utility.yul\":21820:21913   */\n      tag_746\n        /* \"#utility.yul\":21909:21912   */\n      dup3\n        /* \"#utility.yul\":21820:21913   */\n      tag_499\n      jump\t// in\n    tag_746:\n        /* \"#utility.yul\":21938:21940   */\n      0x20\n        /* \"#utility.yul\":21933:21936   */\n      dup3\n        /* \"#utility.yul\":21929:21941   */\n      add\n        /* \"#utility.yul\":21922:21941   */\n      swap1\n      pop\n        /* \"#utility.yul\":21581:21947   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21953:22372   */\n    tag_289:\n        /* \"#utility.yul\":22119:22123   */\n      0x00\n        /* \"#utility.yul\":22157:22159   */\n      0x20\n        /* \"#utility.yul\":22146:22155   */\n      dup3\n        /* \"#utility.yul\":22142:22160   */\n      add\n        /* \"#utility.yul\":22134:22160   */\n      swap1\n      pop\n        /* \"#utility.yul\":22206:22215   */\n      dup2\n        /* \"#utility.yul\":22200:22204   */\n      dup2\n        /* \"#utility.yul\":22196:22216   */\n      sub\n        /* \"#utility.yul\":22192:22193   */\n      0x00\n        /* \"#utility.yul\":22181:22190   */\n      dup4\n        /* \"#utility.yul\":22177:22194   */\n      add\n        /* \"#utility.yul\":22170:22217   */\n      mstore\n        /* \"#utility.yul\":22234:22365   */\n      tag_748\n        /* \"#utility.yul\":22360:22364   */\n      dup2\n        /* \"#utility.yul\":22234:22365   */\n      tag_500\n      jump\t// in\n    tag_748:\n        /* \"#utility.yul\":22226:22365   */\n      swap1\n      pop\n        /* \"#utility.yul\":21953:22372   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22378:22545   */\n    tag_501:\n        /* \"#utility.yul\":22518:22537   */\n      0x496e76616c6964207369676e6174757265000000000000000000000000000000\n        /* \"#utility.yul\":22514:22515   */\n      0x00\n        /* \"#utility.yul\":22506:22512   */\n      dup3\n        /* \"#utility.yul\":22502:22516   */\n      add\n        /* \"#utility.yul\":22495:22538   */\n      mstore\n        /* \"#utility.yul\":22378:22545   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22551:22917   */\n    tag_502:\n        /* \"#utility.yul\":22693:22696   */\n      0x00\n        /* \"#utility.yul\":22714:22781   */\n      tag_751\n        /* \"#utility.yul\":22778:22780   */\n      0x11\n        /* \"#utility.yul\":22773:22776   */\n      dup4\n        /* \"#utility.yul\":22714:22781   */\n      tag_481\n      jump\t// in\n    tag_751:\n        /* \"#utility.yul\":22707:22781   */\n      swap2\n      pop\n        /* \"#utility.yul\":22790:22883   */\n      tag_752\n        /* \"#utility.yul\":22879:22882   */\n      dup3\n        /* \"#utility.yul\":22790:22883   */\n      tag_501\n      jump\t// in\n    tag_752:\n        /* \"#utility.yul\":22908:22910   */\n      0x20\n        /* \"#utility.yul\":22903:22906   */\n      dup3\n        /* \"#utility.yul\":22899:22911   */\n      add\n        /* \"#utility.yul\":22892:22911   */\n      swap1\n      pop\n        /* \"#utility.yul\":22551:22917   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22923:23342   */\n    tag_326:\n        /* \"#utility.yul\":23089:23093   */\n      0x00\n        /* \"#utility.yul\":23127:23129   */\n      0x20\n        /* \"#utility.yul\":23116:23125   */\n      dup3\n        /* \"#utility.yul\":23112:23130   */\n      add\n        /* \"#utility.yul\":23104:23130   */\n      swap1\n      pop\n        /* \"#utility.yul\":23176:23185   */\n      dup2\n        /* \"#utility.yul\":23170:23174   */\n      dup2\n        /* \"#utility.yul\":23166:23186   */\n      sub\n        /* \"#utility.yul\":23162:23163   */\n      0x00\n        /* \"#utility.yul\":23151:23160   */\n      dup4\n        /* \"#utility.yul\":23147:23164   */\n      add\n        /* \"#utility.yul\":23140:23187   */\n      mstore\n        /* \"#utility.yul\":23204:23335   */\n      tag_754\n        /* \"#utility.yul\":23330:23334   */\n      dup2\n        /* \"#utility.yul\":23204:23335   */\n      tag_502\n      jump\t// in\n    tag_754:\n        /* \"#utility.yul\":23196:23335   */\n      swap1\n      pop\n        /* \"#utility.yul\":22923:23342   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23348:23522   */\n    tag_503:\n        /* \"#utility.yul\":23488:23514   */\n      0x45706f6368206475726174696f6e206e6f7420656e6465640000000000000000\n        /* \"#utility.yul\":23484:23485   */\n      0x00\n        /* \"#utility.yul\":23476:23482   */\n      dup3\n        /* \"#utility.yul\":23472:23486   */\n      add\n        /* \"#utility.yul\":23465:23515   */\n      mstore\n        /* \"#utility.yul\":23348:23522   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23528:23894   */\n    tag_504:\n        /* \"#utility.yul\":23670:23673   */\n      0x00\n        /* \"#utility.yul\":23691:23758   */\n      tag_757\n        /* \"#utility.yul\":23755:23757   */\n      0x18\n        /* \"#utility.yul\":23750:23753   */\n      dup4\n        /* \"#utility.yul\":23691:23758   */\n      tag_481\n      jump\t// in\n    tag_757:\n        /* \"#utility.yul\":23684:23758   */\n      swap2\n      pop\n        /* \"#utility.yul\":23767:23860   */\n      tag_758\n        /* \"#utility.yul\":23856:23859   */\n      dup3\n        /* \"#utility.yul\":23767:23860   */\n      tag_503\n      jump\t// in\n    tag_758:\n        /* \"#utility.yul\":23885:23887   */\n      0x20\n        /* \"#utility.yul\":23880:23883   */\n      dup3\n        /* \"#utility.yul\":23876:23888   */\n      add\n        /* \"#utility.yul\":23869:23888   */\n      swap1\n      pop\n        /* \"#utility.yul\":23528:23894   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23900:24319   */\n    tag_331:\n        /* \"#utility.yul\":24066:24070   */\n      0x00\n        /* \"#utility.yul\":24104:24106   */\n      0x20\n        /* \"#utility.yul\":24093:24102   */\n      dup3\n        /* \"#utility.yul\":24089:24107   */\n      add\n        /* \"#utility.yul\":24081:24107   */\n      swap1\n      pop\n        /* \"#utility.yul\":24153:24162   */\n      dup2\n        /* \"#utility.yul\":24147:24151   */\n      dup2\n        /* \"#utility.yul\":24143:24163   */\n      sub\n        /* \"#utility.yul\":24139:24140   */\n      0x00\n        /* \"#utility.yul\":24128:24137   */\n      dup4\n        /* \"#utility.yul\":24124:24141   */\n      add\n        /* \"#utility.yul\":24117:24164   */\n      mstore\n        /* \"#utility.yul\":24181:24312   */\n      tag_760\n        /* \"#utility.yul\":24307:24311   */\n      dup2\n        /* \"#utility.yul\":24181:24312   */\n      tag_504\n      jump\t// in\n    tag_760:\n        /* \"#utility.yul\":24173:24312   */\n      swap1\n      pop\n        /* \"#utility.yul\":23900:24319   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24325:24493   */\n    tag_505:\n        /* \"#utility.yul\":24465:24485   */\n      0x4e6f2070656e64696e6720726577617264730000000000000000000000000000\n        /* \"#utility.yul\":24461:24462   */\n      0x00\n        /* \"#utility.yul\":24453:24459   */\n      dup3\n        /* \"#utility.yul\":24449:24463   */\n      add\n        /* \"#utility.yul\":24442:24486   */\n      mstore\n        /* \"#utility.yul\":24325:24493   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24499:24865   */\n    tag_506:\n        /* \"#utility.yul\":24641:24644   */\n      0x00\n        /* \"#utility.yul\":24662:24729   */\n      tag_763\n        /* \"#utility.yul\":24726:24728   */\n      0x12\n        /* \"#utility.yul\":24721:24724   */\n      dup4\n        /* \"#utility.yul\":24662:24729   */\n      tag_481\n      jump\t// in\n    tag_763:\n        /* \"#utility.yul\":24655:24729   */\n      swap2\n      pop\n        /* \"#utility.yul\":24738:24831   */\n      tag_764\n        /* \"#utility.yul\":24827:24830   */\n      dup3\n        /* \"#utility.yul\":24738:24831   */\n      tag_505\n      jump\t// in\n    tag_764:\n        /* \"#utility.yul\":24856:24858   */\n      0x20\n        /* \"#utility.yul\":24851:24854   */\n      dup3\n        /* \"#utility.yul\":24847:24859   */\n      add\n        /* \"#utility.yul\":24840:24859   */\n      swap1\n      pop\n        /* \"#utility.yul\":24499:24865   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24871:25290   */\n    tag_334:\n        /* \"#utility.yul\":25037:25041   */\n      0x00\n        /* \"#utility.yul\":25075:25077   */\n      0x20\n        /* \"#utility.yul\":25064:25073   */\n      dup3\n        /* \"#utility.yul\":25060:25078   */\n      add\n        /* \"#utility.yul\":25052:25078   */\n      swap1\n      pop\n        /* \"#utility.yul\":25124:25133   */\n      dup2\n        /* \"#utility.yul\":25118:25122   */\n      dup2\n        /* \"#utility.yul\":25114:25134   */\n      sub\n        /* \"#utility.yul\":25110:25111   */\n      0x00\n        /* \"#utility.yul\":25099:25108   */\n      dup4\n        /* \"#utility.yul\":25095:25112   */\n      add\n        /* \"#utility.yul\":25088:25135   */\n      mstore\n        /* \"#utility.yul\":25152:25283   */\n      tag_766\n        /* \"#utility.yul\":25278:25282   */\n      dup2\n        /* \"#utility.yul\":25152:25283   */\n      tag_506\n      jump\t// in\n    tag_766:\n        /* \"#utility.yul\":25144:25283   */\n      swap1\n      pop\n        /* \"#utility.yul\":24871:25290   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25296:25474   */\n    tag_507:\n        /* \"#utility.yul\":25436:25466   */\n      0x5265776172642065786365656473206d617820636c61696d61626c6500000000\n        /* \"#utility.yul\":25432:25433   */\n      0x00\n        /* \"#utility.yul\":25424:25430   */\n      dup3\n        /* \"#utility.yul\":25420:25434   */\n      add\n        /* \"#utility.yul\":25413:25467   */\n      mstore\n        /* \"#utility.yul\":25296:25474   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25480:25846   */\n    tag_508:\n        /* \"#utility.yul\":25622:25625   */\n      0x00\n        /* \"#utility.yul\":25643:25710   */\n      tag_769\n        /* \"#utility.yul\":25707:25709   */\n      0x1c\n        /* \"#utility.yul\":25702:25705   */\n      dup4\n        /* \"#utility.yul\":25643:25710   */\n      tag_481\n      jump\t// in\n    tag_769:\n        /* \"#utility.yul\":25636:25710   */\n      swap2\n      pop\n        /* \"#utility.yul\":25719:25812   */\n      tag_770\n        /* \"#utility.yul\":25808:25811   */\n      dup3\n        /* \"#utility.yul\":25719:25812   */\n      tag_507\n      jump\t// in\n    tag_770:\n        /* \"#utility.yul\":25837:25839   */\n      0x20\n        /* \"#utility.yul\":25832:25835   */\n      dup3\n        /* \"#utility.yul\":25828:25840   */\n      add\n        /* \"#utility.yul\":25821:25840   */\n      swap1\n      pop\n        /* \"#utility.yul\":25480:25846   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25852:26271   */\n    tag_337:\n        /* \"#utility.yul\":26018:26022   */\n      0x00\n        /* \"#utility.yul\":26056:26058   */\n      0x20\n        /* \"#utility.yul\":26045:26054   */\n      dup3\n        /* \"#utility.yul\":26041:26059   */\n      add\n        /* \"#utility.yul\":26033:26059   */\n      swap1\n      pop\n        /* \"#utility.yul\":26105:26114   */\n      dup2\n        /* \"#utility.yul\":26099:26103   */\n      dup2\n        /* \"#utility.yul\":26095:26115   */\n      sub\n        /* \"#utility.yul\":26091:26092   */\n      0x00\n        /* \"#utility.yul\":26080:26089   */\n      dup4\n        /* \"#utility.yul\":26076:26093   */\n      add\n        /* \"#utility.yul\":26069:26116   */\n      mstore\n        /* \"#utility.yul\":26133:26264   */\n      tag_772\n        /* \"#utility.yul\":26259:26263   */\n      dup2\n        /* \"#utility.yul\":26133:26264   */\n      tag_508\n      jump\t// in\n    tag_772:\n        /* \"#utility.yul\":26125:26264   */\n      swap1\n      pop\n        /* \"#utility.yul\":25852:26271   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26277:26597   */\n    tag_373:\n        /* \"#utility.yul\":26392:26396   */\n      0x00\n        /* \"#utility.yul\":26430:26432   */\n      0x40\n        /* \"#utility.yul\":26419:26428   */\n      dup3\n        /* \"#utility.yul\":26415:26433   */\n      add\n        /* \"#utility.yul\":26407:26433   */\n      swap1\n      pop\n        /* \"#utility.yul\":26443:26514   */\n      tag_774\n        /* \"#utility.yul\":26511:26512   */\n      0x00\n        /* \"#utility.yul\":26500:26509   */\n      dup4\n        /* \"#utility.yul\":26496:26513   */\n      add\n        /* \"#utility.yul\":26487:26493   */\n      dup6\n        /* \"#utility.yul\":26443:26514   */\n      tag_455\n      jump\t// in\n    tag_774:\n        /* \"#utility.yul\":26524:26590   */\n      tag_775\n        /* \"#utility.yul\":26586:26588   */\n      0x20\n        /* \"#utility.yul\":26575:26584   */\n      dup4\n        /* \"#utility.yul\":26571:26589   */\n      add\n        /* \"#utility.yul\":26562:26568   */\n      dup5\n        /* \"#utility.yul\":26524:26590   */\n      tag_464\n      jump\t// in\n    tag_775:\n        /* \"#utility.yul\":26277:26597   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26603:26784   */\n    tag_509:\n        /* \"#utility.yul\":26743:26776   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":26739:26740   */\n      0x00\n        /* \"#utility.yul\":26731:26737   */\n      dup3\n        /* \"#utility.yul\":26727:26741   */\n      add\n        /* \"#utility.yul\":26720:26777   */\n      mstore\n        /* \"#utility.yul\":26603:26784   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26790:27156   */\n    tag_510:\n        /* \"#utility.yul\":26932:26935   */\n      0x00\n        /* \"#utility.yul\":26953:27020   */\n      tag_778\n        /* \"#utility.yul\":27017:27019   */\n      0x1f\n        /* \"#utility.yul\":27012:27015   */\n      dup4\n        /* \"#utility.yul\":26953:27020   */\n      tag_481\n      jump\t// in\n    tag_778:\n        /* \"#utility.yul\":26946:27020   */\n      swap2\n      pop\n        /* \"#utility.yul\":27029:27122   */\n      tag_779\n        /* \"#utility.yul\":27118:27121   */\n      dup3\n        /* \"#utility.yul\":27029:27122   */\n      tag_509\n      jump\t// in\n    tag_779:\n        /* \"#utility.yul\":27147:27149   */\n      0x20\n        /* \"#utility.yul\":27142:27145   */\n      dup3\n        /* \"#utility.yul\":27138:27150   */\n      add\n        /* \"#utility.yul\":27131:27150   */\n      swap1\n      pop\n        /* \"#utility.yul\":26790:27156   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27162:27581   */\n    tag_384:\n        /* \"#utility.yul\":27328:27332   */\n      0x00\n        /* \"#utility.yul\":27366:27368   */\n      0x20\n        /* \"#utility.yul\":27355:27364   */\n      dup3\n        /* \"#utility.yul\":27351:27369   */\n      add\n        /* \"#utility.yul\":27343:27369   */\n      swap1\n      pop\n        /* \"#utility.yul\":27415:27424   */\n      dup2\n        /* \"#utility.yul\":27409:27413   */\n      dup2\n        /* \"#utility.yul\":27405:27425   */\n      sub\n        /* \"#utility.yul\":27401:27402   */\n      0x00\n        /* \"#utility.yul\":27390:27399   */\n      dup4\n        /* \"#utility.yul\":27386:27403   */\n      add\n        /* \"#utility.yul\":27379:27426   */\n      mstore\n        /* \"#utility.yul\":27443:27574   */\n      tag_781\n        /* \"#utility.yul\":27569:27573   */\n      dup2\n        /* \"#utility.yul\":27443:27574   */\n      tag_510\n      jump\t// in\n    tag_781:\n        /* \"#utility.yul\":27435:27574   */\n      swap1\n      pop\n        /* \"#utility.yul\":27162:27581   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27587:27681   */\n    tag_511:\n        /* \"#utility.yul\":27620:27628   */\n      0x00\n        /* \"#utility.yul\":27668:27673   */\n      dup2\n        /* \"#utility.yul\":27664:27666   */\n      0x60\n        /* \"#utility.yul\":27660:27674   */\n      shl\n        /* \"#utility.yul\":27639:27674   */\n      swap1\n      pop\n        /* \"#utility.yul\":27587:27681   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27687:27781   */\n    tag_512:\n        /* \"#utility.yul\":27726:27733   */\n      0x00\n        /* \"#utility.yul\":27755:27775   */\n      tag_784\n        /* \"#utility.yul\":27769:27774   */\n      dup3\n        /* \"#utility.yul\":27755:27775   */\n      tag_511\n      jump\t// in\n    tag_784:\n        /* \"#utility.yul\":27744:27775   */\n      swap1\n      pop\n        /* \"#utility.yul\":27687:27781   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27787:27887   */\n    tag_513:\n        /* \"#utility.yul\":27826:27833   */\n      0x00\n        /* \"#utility.yul\":27855:27881   */\n      tag_786\n        /* \"#utility.yul\":27875:27880   */\n      dup3\n        /* \"#utility.yul\":27855:27881   */\n      tag_512\n      jump\t// in\n    tag_786:\n        /* \"#utility.yul\":27844:27881   */\n      swap1\n      pop\n        /* \"#utility.yul\":27787:27887   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27893:28050   */\n    tag_514:\n        /* \"#utility.yul\":27998:28043   */\n      tag_788\n        /* \"#utility.yul\":28018:28042   */\n      tag_789\n        /* \"#utility.yul\":28036:28041   */\n      dup3\n        /* \"#utility.yul\":28018:28042   */\n      tag_451\n      jump\t// in\n    tag_789:\n        /* \"#utility.yul\":27998:28043   */\n      tag_513\n      jump\t// in\n    tag_788:\n        /* \"#utility.yul\":27993:27996   */\n      dup3\n        /* \"#utility.yul\":27986:28044   */\n      mstore\n        /* \"#utility.yul\":27893:28050   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28056:28135   */\n    tag_515:\n        /* \"#utility.yul\":28095:28102   */\n      0x00\n        /* \"#utility.yul\":28124:28129   */\n      dup2\n        /* \"#utility.yul\":28113:28129   */\n      swap1\n      pop\n        /* \"#utility.yul\":28056:28135   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28141:28298   */\n    tag_516:\n        /* \"#utility.yul\":28246:28291   */\n      tag_792\n        /* \"#utility.yul\":28266:28290   */\n      tag_793\n        /* \"#utility.yul\":28284:28289   */\n      dup3\n        /* \"#utility.yul\":28266:28290   */\n      tag_454\n      jump\t// in\n    tag_793:\n        /* \"#utility.yul\":28246:28291   */\n      tag_515\n      jump\t// in\n    tag_792:\n        /* \"#utility.yul\":28241:28244   */\n      dup3\n        /* \"#utility.yul\":28234:28292   */\n      mstore\n        /* \"#utility.yul\":28141:28298   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28304:28701   */\n    tag_396:\n        /* \"#utility.yul\":28444:28447   */\n      0x00\n        /* \"#utility.yul\":28459:28534   */\n      tag_795\n        /* \"#utility.yul\":28530:28533   */\n      dup3\n        /* \"#utility.yul\":28521:28527   */\n      dup6\n        /* \"#utility.yul\":28459:28534   */\n      tag_514\n      jump\t// in\n    tag_795:\n        /* \"#utility.yul\":28559:28561   */\n      0x14\n        /* \"#utility.yul\":28554:28557   */\n      dup3\n        /* \"#utility.yul\":28550:28562   */\n      add\n        /* \"#utility.yul\":28543:28562   */\n      swap2\n      pop\n        /* \"#utility.yul\":28572:28647   */\n      tag_796\n        /* \"#utility.yul\":28643:28646   */\n      dup3\n        /* \"#utility.yul\":28634:28640   */\n      dup5\n        /* \"#utility.yul\":28572:28647   */\n      tag_516\n      jump\t// in\n    tag_796:\n        /* \"#utility.yul\":28672:28674   */\n      0x20\n        /* \"#utility.yul\":28667:28670   */\n      dup3\n        /* \"#utility.yul\":28663:28675   */\n      add\n        /* \"#utility.yul\":28656:28675   */\n      swap2\n      pop\n        /* \"#utility.yul\":28692:28695   */\n      dup2\n        /* \"#utility.yul\":28685:28695   */\n      swap1\n      pop\n        /* \"#utility.yul\":28304:28701   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28707:28855   */\n    tag_517:\n        /* \"#utility.yul\":28809:28820   */\n      0x00\n        /* \"#utility.yul\":28846:28849   */\n      dup2\n        /* \"#utility.yul\":28831:28849   */\n      swap1\n      pop\n        /* \"#utility.yul\":28707:28855   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28861:29075   */\n    tag_518:\n        /* \"#utility.yul\":29001:29067   */\n      0x19457468657265756d205369676e6564204d6573736167653a0a333200000000\n        /* \"#utility.yul\":28997:28998   */\n      0x00\n        /* \"#utility.yul\":28989:28995   */\n      dup3\n        /* \"#utility.yul\":28985:28999   */\n      add\n        /* \"#utility.yul\":28978:29068   */\n      mstore\n        /* \"#utility.yul\":28861:29075   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29081:29483   */\n    tag_519:\n        /* \"#utility.yul\":29241:29244   */\n      0x00\n        /* \"#utility.yul\":29262:29347   */\n      tag_800\n        /* \"#utility.yul\":29344:29346   */\n      0x1c\n        /* \"#utility.yul\":29339:29342   */\n      dup4\n        /* \"#utility.yul\":29262:29347   */\n      tag_517\n      jump\t// in\n    tag_800:\n        /* \"#utility.yul\":29255:29347   */\n      swap2\n      pop\n        /* \"#utility.yul\":29356:29449   */\n      tag_801\n        /* \"#utility.yul\":29445:29448   */\n      dup3\n        /* \"#utility.yul\":29356:29449   */\n      tag_518\n      jump\t// in\n    tag_801:\n        /* \"#utility.yul\":29474:29476   */\n      0x1c\n        /* \"#utility.yul\":29469:29472   */\n      dup3\n        /* \"#utility.yul\":29465:29477   */\n      add\n        /* \"#utility.yul\":29458:29477   */\n      swap1\n      pop\n        /* \"#utility.yul\":29081:29483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29489:29566   */\n    tag_520:\n        /* \"#utility.yul\":29526:29533   */\n      0x00\n        /* \"#utility.yul\":29555:29560   */\n      dup2\n        /* \"#utility.yul\":29544:29560   */\n      swap1\n      pop\n        /* \"#utility.yul\":29489:29566   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29572:29651   */\n    tag_521:\n        /* \"#utility.yul\":29611:29618   */\n      0x00\n        /* \"#utility.yul\":29640:29645   */\n      dup2\n        /* \"#utility.yul\":29629:29645   */\n      swap1\n      pop\n        /* \"#utility.yul\":29572:29651   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29657:29814   */\n    tag_522:\n        /* \"#utility.yul\":29762:29807   */\n      tag_805\n        /* \"#utility.yul\":29782:29806   */\n      tag_806\n        /* \"#utility.yul\":29800:29805   */\n      dup3\n        /* \"#utility.yul\":29782:29806   */\n      tag_520\n      jump\t// in\n    tag_806:\n        /* \"#utility.yul\":29762:29807   */\n      tag_521\n      jump\t// in\n    tag_805:\n        /* \"#utility.yul\":29757:29760   */\n      dup3\n        /* \"#utility.yul\":29750:29808   */\n      mstore\n        /* \"#utility.yul\":29657:29814   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29820:30342   */\n    tag_398:\n        /* \"#utility.yul\":30033:30036   */\n      0x00\n        /* \"#utility.yul\":30055:30203   */\n      tag_808\n        /* \"#utility.yul\":30199:30202   */\n      dup3\n        /* \"#utility.yul\":30055:30203   */\n      tag_519\n      jump\t// in\n    tag_808:\n        /* \"#utility.yul\":30048:30203   */\n      swap2\n      pop\n        /* \"#utility.yul\":30213:30288   */\n      tag_809\n        /* \"#utility.yul\":30284:30287   */\n      dup3\n        /* \"#utility.yul\":30275:30281   */\n      dup5\n        /* \"#utility.yul\":30213:30288   */\n      tag_522\n      jump\t// in\n    tag_809:\n        /* \"#utility.yul\":30313:30315   */\n      0x20\n        /* \"#utility.yul\":30308:30311   */\n      dup3\n        /* \"#utility.yul\":30304:30316   */\n      add\n        /* \"#utility.yul\":30297:30316   */\n      swap2\n      pop\n        /* \"#utility.yul\":30333:30336   */\n      dup2\n        /* \"#utility.yul\":30326:30336   */\n      swap1\n      pop\n        /* \"#utility.yul\":29820:30342   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30348:30528   */\n    tag_415:\n        /* \"#utility.yul\":30396:30473   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":30393:30394   */\n      0x00\n        /* \"#utility.yul\":30386:30474   */\n      mstore\n        /* \"#utility.yul\":30493:30497   */\n      0x21\n        /* \"#utility.yul\":30490:30491   */\n      0x04\n        /* \"#utility.yul\":30483:30498   */\n      mstore\n        /* \"#utility.yul\":30517:30521   */\n      0x24\n        /* \"#utility.yul\":30514:30515   */\n      0x00\n        /* \"#utility.yul\":30507:30522   */\n      revert\n        /* \"#utility.yul\":30534:30652   */\n    tag_523:\n        /* \"#utility.yul\":30621:30645   */\n      tag_812\n        /* \"#utility.yul\":30639:30644   */\n      dup2\n        /* \"#utility.yul\":30621:30645   */\n      tag_520\n      jump\t// in\n    tag_812:\n        /* \"#utility.yul\":30616:30619   */\n      dup3\n        /* \"#utility.yul\":30609:30646   */\n      mstore\n        /* \"#utility.yul\":30534:30652   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30658:30880   */\n    tag_439:\n        /* \"#utility.yul\":30751:30755   */\n      0x00\n        /* \"#utility.yul\":30789:30791   */\n      0x20\n        /* \"#utility.yul\":30778:30787   */\n      dup3\n        /* \"#utility.yul\":30774:30792   */\n      add\n        /* \"#utility.yul\":30766:30792   */\n      swap1\n      pop\n        /* \"#utility.yul\":30802:30873   */\n      tag_814\n        /* \"#utility.yul\":30870:30871   */\n      0x00\n        /* \"#utility.yul\":30859:30868   */\n      dup4\n        /* \"#utility.yul\":30855:30872   */\n      add\n        /* \"#utility.yul\":30846:30852   */\n      dup5\n        /* \"#utility.yul\":30802:30873   */\n      tag_523\n      jump\t// in\n    tag_814:\n        /* \"#utility.yul\":30658:30880   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30886:30972   */\n    tag_524:\n        /* \"#utility.yul\":30921:30928   */\n      0x00\n        /* \"#utility.yul\":30961:30965   */\n      0xff\n        /* \"#utility.yul\":30954:30959   */\n      dup3\n        /* \"#utility.yul\":30950:30966   */\n      and\n        /* \"#utility.yul\":30939:30966   */\n      swap1\n      pop\n        /* \"#utility.yul\":30886:30972   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30978:31090   */\n    tag_525:\n        /* \"#utility.yul\":31061:31083   */\n      tag_817\n        /* \"#utility.yul\":31077:31082   */\n      dup2\n        /* \"#utility.yul\":31061:31083   */\n      tag_524\n      jump\t// in\n    tag_817:\n        /* \"#utility.yul\":31056:31059   */\n      dup3\n        /* \"#utility.yul\":31049:31084   */\n      mstore\n        /* \"#utility.yul\":30978:31090   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31096:31641   */\n    tag_443:\n        /* \"#utility.yul\":31269:31273   */\n      0x00\n        /* \"#utility.yul\":31307:31310   */\n      0x80\n        /* \"#utility.yul\":31296:31305   */\n      dup3\n        /* \"#utility.yul\":31292:31311   */\n      add\n        /* \"#utility.yul\":31284:31311   */\n      swap1\n      pop\n        /* \"#utility.yul\":31321:31392   */\n      tag_819\n        /* \"#utility.yul\":31389:31390   */\n      0x00\n        /* \"#utility.yul\":31378:31387   */\n      dup4\n        /* \"#utility.yul\":31374:31391   */\n      add\n        /* \"#utility.yul\":31365:31371   */\n      dup8\n        /* \"#utility.yul\":31321:31392   */\n      tag_523\n      jump\t// in\n    tag_819:\n        /* \"#utility.yul\":31402:31470   */\n      tag_820\n        /* \"#utility.yul\":31466:31468   */\n      0x20\n        /* \"#utility.yul\":31455:31464   */\n      dup4\n        /* \"#utility.yul\":31451:31469   */\n      add\n        /* \"#utility.yul\":31442:31448   */\n      dup7\n        /* \"#utility.yul\":31402:31470   */\n      tag_525\n      jump\t// in\n    tag_820:\n        /* \"#utility.yul\":31480:31552   */\n      tag_821\n        /* \"#utility.yul\":31548:31550   */\n      0x40\n        /* \"#utility.yul\":31537:31546   */\n      dup4\n        /* \"#utility.yul\":31533:31551   */\n      add\n        /* \"#utility.yul\":31524:31530   */\n      dup6\n        /* \"#utility.yul\":31480:31552   */\n      tag_523\n      jump\t// in\n    tag_821:\n        /* \"#utility.yul\":31562:31634   */\n      tag_822\n        /* \"#utility.yul\":31630:31632   */\n      0x60\n        /* \"#utility.yul\":31619:31628   */\n      dup4\n        /* \"#utility.yul\":31615:31633   */\n      add\n        /* \"#utility.yul\":31606:31612   */\n      dup5\n        /* \"#utility.yul\":31562:31634   */\n      tag_523\n      jump\t// in\n    tag_822:\n        /* \"#utility.yul\":31096:31641   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212206a87094f0f185b690d1d9958d3f3862b780c5f9a998921fdb10d239be1937c3264736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1599": {
									"entryPoint": null,
									"id": 1599,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_303": {
									"entryPoint": null,
									"id": 303,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 188,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 429,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 444,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 412,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 381,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:590:10",
										"nodeType": "YulBlock",
										"src": "0:590:10",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:81:10",
													"nodeType": "YulBlock",
													"src": "52:81:10",
													"statements": [
														{
															"nativeSrc": "62:65:10",
															"nodeType": "YulAssignment",
															"src": "62:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "77:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "84:42:10",
																		"nodeType": "YulLiteral",
																		"src": "84:42:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "73:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:10"
																},
																"nativeSrc": "73:54:10",
																"nodeType": "YulFunctionCall",
																"src": "73:54:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "7:126:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:10",
														"nodeType": "YulTypedName",
														"src": "34:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:10",
														"nodeType": "YulTypedName",
														"src": "44:7:10",
														"type": ""
													}
												],
												"src": "7:126:10"
											},
											{
												"body": {
													"nativeSrc": "184:51:10",
													"nodeType": "YulBlock",
													"src": "184:51:10",
													"statements": [
														{
															"nativeSrc": "194:35:10",
															"nodeType": "YulAssignment",
															"src": "194:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "223:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "223:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "205:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "205:17:10"
																},
																"nativeSrc": "205:24:10",
																"nodeType": "YulFunctionCall",
																"src": "205:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "194:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "194:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "139:96:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "166:5:10",
														"nodeType": "YulTypedName",
														"src": "166:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "176:7:10",
														"nodeType": "YulTypedName",
														"src": "176:7:10",
														"type": ""
													}
												],
												"src": "139:96:10"
											},
											{
												"body": {
													"nativeSrc": "306:53:10",
													"nodeType": "YulBlock",
													"src": "306:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "323:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "323:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "346:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "346:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "328:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "328:17:10"
																		},
																		"nativeSrc": "328:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "328:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "316:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "316:6:10"
																},
																"nativeSrc": "316:37:10",
																"nodeType": "YulFunctionCall",
																"src": "316:37:10"
															},
															"nativeSrc": "316:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "316:37:10"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "241:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "294:5:10",
														"nodeType": "YulTypedName",
														"src": "294:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "301:3:10",
														"nodeType": "YulTypedName",
														"src": "301:3:10",
														"type": ""
													}
												],
												"src": "241:118:10"
											},
											{
												"body": {
													"nativeSrc": "463:124:10",
													"nodeType": "YulBlock",
													"src": "463:124:10",
													"statements": [
														{
															"nativeSrc": "473:26:10",
															"nodeType": "YulAssignment",
															"src": "473:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "485:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "485:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "496:2:10",
																		"nodeType": "YulLiteral",
																		"src": "496:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "481:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "481:3:10"
																},
																"nativeSrc": "481:18:10",
																"nodeType": "YulFunctionCall",
																"src": "481:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "473:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "473:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "553:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "553:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "566:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "566:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "577:1:10",
																				"nodeType": "YulLiteral",
																				"src": "577:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "562:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "562:3:10"
																		},
																		"nativeSrc": "562:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "562:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "509:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "509:43:10"
																},
																"nativeSrc": "509:71:10",
																"nodeType": "YulFunctionCall",
																"src": "509:71:10"
															},
															"nativeSrc": "509:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "509:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "365:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "435:9:10",
														"nodeType": "YulTypedName",
														"src": "435:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "447:6:10",
														"nodeType": "YulTypedName",
														"src": "447:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "458:4:10",
														"nodeType": "YulTypedName",
														"src": "458:4:10",
														"type": ""
													}
												],
												"src": "365:222:10"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "6080604052600a600b5562278d00600e556014600f5569d3c21bcecceda100000060105534801561002e575f5ffd5b50335f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100a0575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161009791906101bc565b60405180910390fd5b6100af816100bc60201b60201c565b50600180819055506101d5565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6101a68261017d565b9050919050565b6101b68161019c565b82525050565b5f6020820190506101cf5f8301846101ad565b92915050565b6132d2806101e25f395ff3fe608060405234801561000f575f5ffd5b5060043610610230575f3560e01c806364cb61421161012e578063dd69becd116100b6578063f03f80c31161007a578063f03f80c314610686578063f1ea7692146106a4578063f2fde38b146106c2578063f3482650146106de578063f6cc51571461070e57610230565b8063dd69becd146105f6578063e275c99714610612578063e90b0d7614610630578063e927e7c01461064c578063eab35b771461066857610230565b8063848ff684116100fd578063848ff684146105625780638da5cb5b1461057e57806394d9b2351461059c578063c2362dd5146105ba578063ccc8362c146105d857610230565b806364cb6142146104ec578063715018a61461050a5780637ecebe00146105145780638119185b1461054457610230565b806325d5971f116101bc578063519445e211610180578063519445e2146104205780635829b3c71461043e57806358ba9d271461046e5780635c975abb1461049e5780635e2a9fa2146104bc57610230565b806325d5971f1461037957806331fdc2ba14610395578063430bf08a146103b157806345626bd6146103cf5780634ff0876a1461040257610230565b8063158ef93e11610203578063158ef93e146102d157806316330d40146102ef57806316934fc41461030d57806316c38b3c1461033f5780631bff38cd1461035b57610230565b8063011a4568146102345780630524fb7e1461026457806305c50a35146102805780630fd7bf50146102b3575b5f5ffd5b61024e600480360381019061024991906123b3565b61072c565b60405161025b91906123f6565b60405180910390f35b61027e60048036038101906102799190612439565b610741565b005b61029a600480360381019061029591906123b3565b610a52565b6040516102aa9493929190612464565b60405180910390f35b6102bb610a7e565b6040516102c89190612502565b60405180910390f35b6102d9610aa3565b6040516102e69190612535565b60405180910390f35b6102f7610ab6565b60405161030491906123f6565b60405180910390f35b610327600480360381019061032291906123b3565b610abc565b6040516103369392919061254e565b60405180910390f35b610359600480360381019061035491906125ad565b610ae2565b005b610363610b3d565b60405161037091906123f6565b60405180910390f35b610393600480360381019061038e9190612439565b610b43565b005b6103af60048036038101906103aa91906125d8565b610e52565b005b6103b9610f3e565b6040516103c69190612625565b60405180910390f35b6103e960048036038101906103e491906125d8565b610f63565b6040516103f99493929190612464565b60405180910390f35b61040a610fa9565b60405161041791906123f6565b60405180910390f35b610428610faf565b60405161043591906123f6565b60405180910390f35b610458600480360381019061045391906123b3565b610fb5565b60405161046591906123f6565b60405180910390f35b610488600480360381019061048391906123b3565b610fca565b60405161049591906123f6565b60405180910390f35b6104a6610fdf565b6040516104b39190612535565b60405180910390f35b6104d660048036038101906104d191906123b3565b610ff1565b6040516104e391906123f6565b60405180910390f35b6104f4611006565b60405161050191906123f6565b60405180910390f35b61051261100c565b005b61052e600480360381019061052991906123b3565b61101f565b60405161053b91906123f6565b60405180910390f35b61054c611034565b60405161055991906123f6565b60405180910390f35b61057c60048036038101906105779190612679565b61103a565b005b61058661117d565b6040516105939190612625565b60405180910390f35b6105a46111a4565b6040516105b191906123f6565b60405180910390f35b6105c26111aa565b6040516105cf91906123f6565b60405180910390f35b6105e06111b0565b6040516105ed91906123f6565b60405180910390f35b610610600480360381019061060b9190612439565b6111b6565b005b61061a61168a565b60405161062791906123f6565b60405180910390f35b61064a60048036038101906106459190612866565b611690565b005b610666600480360381019061066191906128c0565b611a6b565b005b610670611d8e565b60405161067d91906123f6565b60405180910390f35b61068e611d94565b60405161069b91906123f6565b60405180910390f35b6106ac611d9a565b6040516106b991906123f6565b60405180910390f35b6106dc60048036038101906106d791906123b3565b611da0565b005b6106f860048036038101906106f391906123b3565b611e24565b60405161070591906123f6565b60405180910390f35b610716611e39565b60405161072391906123f6565b60405180910390f35b6015602052805f5260405f205f915090505481565b60115f9054906101000a900460ff1615610790576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161078790612958565b60405180910390fd5b610798611e3f565b601160019054906101000a900460ff166107e7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107de906129c0565b60405180910390fd5b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd33601b5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16846040518463ffffffff1660e01b8152600401610866939291906129de565b6020604051808303815f875af1158015610882573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108a69190612a27565b6108e5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108dc90612a9c565b60405180910390fd5b5f60185f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2090505f81600201540361098157428160020181905550606460195f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055506109d6565b600a60195f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546109ce9190612ae7565b925050819055505b81815f015f8282546109e89190612ae7565b925050819055504281600101819055503373ffffffffffffffffffffffffffffffffffffffff167f6afd9b8c734cbfeda8ba55afbdd1ac413bf617456b50196186371d2cc95b857283604051610a3e91906123f6565b60405180910390a250610a4f611e8e565b50565b6017602052805f5260405f205f91509050805f0154908060010154908060020154908060030154905084565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b601160019054906101000a900460ff1681565b600b5481565b6018602052805f5260405f205f91509050805f0154908060010154908060020154905083565b610aea611e97565b8060115f6101000a81548160ff0219169083151502179055507f0e2fb031ee032dc02d8011dc50b816eb450cf856abd8261680dac74f72165bd281604051610b329190612535565b60405180910390a150565b600a5481565b60115f9054906101000a900460ff1615610b92576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b8990612958565b60405180910390fd5b610b9a611e3f565b601160019054906101000a900460ff16610be9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610be0906129c0565b60405180910390fd5b5f60185f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f209050805f0154821115610c6f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c6690612b64565b60405180910390fd5b5f5f905062093a808260020154610c869190612ae7565b421015610caa576064600b5484610c9d9190612b82565b610ca79190612bf0565b90505b5f8184610cb79190612c20565b905083835f015f828254610ccb9190612c20565b92505081905550601b5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f3fef3a333836040518363ffffffff1660e01b8152600401610d2e929190612c53565b5f604051808303815f87803b158015610d45575f5ffd5b505af1158015610d57573d5f5f3e3d5ffd5b505050505f821115610df457601b5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f3fef3a3610da861117d565b846040518363ffffffff1660e01b8152600401610dc6929190612c53565b5f604051808303815f87803b158015610ddd575f5ffd5b505af1158015610def573d5f5f3e3d5ffd5b505050505b3373ffffffffffffffffffffffffffffffffffffffff167f933735aa8de6d7547d0126171b2f31b9c34dd00f3ecd4be85a0ba047db4fafef8284604051610e3c929190612c7a565b60405180910390a2505050610e4f611e8e565b50565b610e5a611e97565b5f8111610e68576064610e6b565b60785b60ff1660165f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508173ffffffffffffffffffffffffffffffffffffffff167fabcc9b515858a553f53609bb223669708665910a51030d923c842de23f09991360165f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054604051610f3291906123f6565b60405180910390a25050565b601b5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b601a602052815f5260405f208181548110610f7c575f80fd5b905f5260205f2090600402015f9150915050805f0154908060010154908060020154908060030154905084565b600d5481565b60065481565b6016602052805f5260405f205f915090505481565b6019602052805f5260405f205f915090505481565b60115f9054906101000a900460ff1681565b6014602052805f5260405f205f915090505481565b60095481565b611014611e97565b61101d5f611f1e565b565b6012602052805f5260405f205f915090505481565b600e5481565b611042611e97565b601160019054906101000a900460ff1615611092576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161108990612ceb565b60405180910390fd5b8760025f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555086600381905550856004819055505f6005819055505f600681905550846007819055505f6008819055508360098190555082600a8190555081600d8190555043600c8190555080601b5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001601160016101000a81548160ff0219169083151502179055505050505050505050565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600f5481565b600c5481565b60045481565b60115f9054906101000a900460ff1615611205576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111fc90612958565b60405180910390fd5b61120d611e3f565b601160019054906101000a900460ff1661125c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611253906129c0565b60405180910390fd5b8060125f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054146112db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112d290612d53565b60405180910390fd5b60125f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f81548092919061132890612d71565b91905055505f60185f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2090505f8160020154036113b3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113aa90612e02565b60405180910390fd5b5f8160010154426113c49190612c20565b90505f8111611408576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113ff90612e6a565b60405180910390fd5b5f60045490506009546008541115611439576064600a5460045461142c9190612b82565b6114369190612bf0565b90505b5f5f60165f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054146114c15760165f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20546114c4565b60645b9050606481836114d49190612b82565b6114de9190612bf0565b91505f8383865f01546114f19190612b82565b6114fb9190612b82565b9050606460195f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054826115489190612b82565b6115529190612bf0565b9050600e5485600101546115669190612ae7565b42111561159a575f6064600f548361157e9190612b82565b6115889190612bf0565b905080826115969190612c20565b9150505b42856001018190555060025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1933836040518363ffffffff1660e01b81526004016115ff929190612c53565b5f604051808303815f87803b158015611616575f5ffd5b505af1158015611628573d5f5f3e3d5ffd5b505050503373ffffffffffffffffffffffffffffffffffffffff167f4dd465eb9d4bf90caf3400cc334c731b4cef0aa7f013e5d72f20b0cec2e30ea98260405161167291906123f6565b60405180910390a25050505050611687611e8e565b50565b60055481565b60115f9054906101000a900460ff16156116df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116d690612958565b60405180910390fd5b6116e7611e3f565b601160019054906101000a900460ff16611736576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161172d906129c0565b60405180910390fd5b8160125f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054146117b5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117ac90612d53565b60405180910390fd5b6117c0338383611fdf565b6117ff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117f690612ed2565b60405180910390fd5b60125f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f81548092919061184c90612d71565b91905055505f60175f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20905060075481600301546118a39190612ae7565b4210156118e5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118dc90612f3a565b60405180910390fd5b5f816002015490505f811161192f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161192690612fa2565b60405180910390fd5b601054811115611974576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161196b9061300a565b60405180910390fd5b5f826002018190555042826003018190555060025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1933836040518363ffffffff1660e01b81526004016119e2929190612c53565b5f604051808303815f87803b1580156119f9575f5ffd5b505af1158015611a0b573d5f5f3e3d5ffd5b505050503373ffffffffffffffffffffffffffffffffffffffff167fb127973bf29d1dae6424fef4f7461e0b9c444636ab23a8392d9969500034a13d82604051611a5591906123f6565b60405180910390a25050611a67611e8e565b5050565b60115f9054906101000a900460ff1615611aba576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ab190612958565b60405180910390fd5b611ac2611e3f565b601160019054906101000a900460ff16611b11576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b08906129c0565b60405180910390fd5b600d54600c54611b219190612ae7565b4310611b36575f60068190555043600c819055505b600160055f828254611b489190612ae7565b925050819055508160065f828254611b609190612ae7565b925050819055508160085f828254611b789190612ae7565b925050819055505f60175f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2090506001815f015f828254611bd29190612ae7565b9250508190555082816001015f828254611bec9190612ae7565b925050819055505f60095460065410611c06576064611c09565b60965b60ff1690505f60648260035487611c209190612b82565b611c2a9190612b82565b611c349190612bf0565b905080836002015f828254611c499190612ae7565b925050819055508315611cba57606485611c639190612bf0565b60145f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254611cae9190612ae7565b92505081905550611d1a565b606485611cc79190612bf0565b60155f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254611d129190612ae7565b925050819055505b5f836003015403611d2f574283600301819055505b3373ffffffffffffffffffffffffffffffffffffffff167f4b85156045f2844cf6b638ff8a8ddb82c940ccdbe3c46e6e67d2583722c7dc718686604051611d77929190613028565b60405180910390a2505050611d8a611e8e565b5050565b60085481565b60105481565b60075481565b611da8611e97565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611e18575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401611e0f9190612625565b60405180910390fd5b611e2181611f1e565b50565b6013602052805f5260405f205f915090505481565b60035481565b600260015403611e84576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e7b90613099565b60405180910390fd5b6002600181905550565b60018081905550565b611e9f612079565b73ffffffffffffffffffffffffffffffffffffffff16611ebd61117d565b73ffffffffffffffffffffffffffffffffffffffff1614611f1c57611ee0612079565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401611f139190612625565b60405180910390fd5b565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f5f8484604051602001611ff492919061311c565b6040516020818303038152906040528051906020012090505f8160405160200161201e91906131c4565b6040516020818303038152906040528051906020012090508573ffffffffffffffffffffffffffffffffffffffff166120578286612080565b73ffffffffffffffffffffffffffffffffffffffff1614925050509392505050565b5f33905090565b5f5f5f5f61208e86866120aa565b92509250925061209e82826120ff565b82935050505092915050565b5f5f5f60418451036120ea575f5f5f602087015192506040870151915060608701515f1a90506120dc88828585612261565b9550955095505050506120f8565b5f600285515f1b9250925092505b9250925092565b5f6003811115612112576121116131e9565b5b826003811115612125576121246131e9565b5b031561225d576001600381111561213f5761213e6131e9565b5b826003811115612152576121516131e9565b5b03612189576040517ff645eedf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600381111561219d5761219c6131e9565b5b8260038111156121b0576121af6131e9565b5b036121f457805f1c6040517ffce698f70000000000000000000000000000000000000000000000000000000081526004016121eb91906123f6565b60405180910390fd5b600380811115612207576122066131e9565b5b82600381111561221a576122196131e9565b5b0361225c57806040517fd78bce0c0000000000000000000000000000000000000000000000000000000081526004016122539190613225565b60405180910390fd5b5b5050565b5f5f5f7f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0845f1c111561229d575f60038592509250925061233e565b5f6001888888886040515f81526020016040526040516122c09493929190613259565b6020604051602081039080840390855afa1580156122e0573d5f5f3e3d5ffd5b5050506020604051035190505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603612331575f60015f5f1b9350935093505061233e565b805f5f5f1b935093509350505b9450945094915050565b5f604051905090565b5f5ffd5b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61238282612359565b9050919050565b61239281612378565b811461239c575f5ffd5b50565b5f813590506123ad81612389565b92915050565b5f602082840312156123c8576123c7612351565b5b5f6123d58482850161239f565b91505092915050565b5f819050919050565b6123f0816123de565b82525050565b5f6020820190506124095f8301846123e7565b92915050565b612418816123de565b8114612422575f5ffd5b50565b5f813590506124338161240f565b92915050565b5f6020828403121561244e5761244d612351565b5b5f61245b84828501612425565b91505092915050565b5f6080820190506124775f8301876123e7565b61248460208301866123e7565b61249160408301856123e7565b61249e60608301846123e7565b95945050505050565b5f819050919050565b5f6124ca6124c56124c084612359565b6124a7565b612359565b9050919050565b5f6124db826124b0565b9050919050565b5f6124ec826124d1565b9050919050565b6124fc816124e2565b82525050565b5f6020820190506125155f8301846124f3565b92915050565b5f8115159050919050565b61252f8161251b565b82525050565b5f6020820190506125485f830184612526565b92915050565b5f6060820190506125615f8301866123e7565b61256e60208301856123e7565b61257b60408301846123e7565b949350505050565b61258c8161251b565b8114612596575f5ffd5b50565b5f813590506125a781612583565b92915050565b5f602082840312156125c2576125c1612351565b5b5f6125cf84828501612599565b91505092915050565b5f5f604083850312156125ee576125ed612351565b5b5f6125fb8582860161239f565b925050602061260c85828601612425565b9150509250929050565b61261f81612378565b82525050565b5f6020820190506126385f830184612616565b92915050565b5f61264882612378565b9050919050565b6126588161263e565b8114612662575f5ffd5b50565b5f813590506126738161264f565b92915050565b5f5f5f5f5f5f5f5f610100898b03121561269657612695612351565b5b5f6126a38b828c01612665565b98505060206126b48b828c01612425565b97505060406126c58b828c01612425565b96505060606126d68b828c01612425565b95505060806126e78b828c01612425565b94505060a06126f88b828c01612425565b93505060c06127098b828c01612425565b92505060e061271a8b828c0161239f565b9150509295985092959890939650565b5f5ffd5b5f5ffd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b61277882612732565b810181811067ffffffffffffffff8211171561279757612796612742565b5b80604052505050565b5f6127a9612348565b90506127b5828261276f565b919050565b5f67ffffffffffffffff8211156127d4576127d3612742565b5b6127dd82612732565b9050602081019050919050565b828183375f83830152505050565b5f61280a612805846127ba565b6127a0565b9050828152602081018484840111156128265761282561272e565b5b6128318482856127ea565b509392505050565b5f82601f83011261284d5761284c61272a565b5b813561285d8482602086016127f8565b91505092915050565b5f5f6040838503121561287c5761287b612351565b5b5f61288985828601612425565b925050602083013567ffffffffffffffff8111156128aa576128a9612355565b5b6128b685828601612839565b9150509250929050565b5f5f604083850312156128d6576128d5612351565b5b5f6128e385828601612425565b92505060206128f485828601612599565b9150509250929050565b5f82825260208201905092915050565b7f436f6e74726163742069732070617573656400000000000000000000000000005f82015250565b5f6129426012836128fe565b915061294d8261290e565b602082019050919050565b5f6020820190508181035f83015261296f81612936565b9050919050565b7f4e6f7420696e697469616c697a656400000000000000000000000000000000005f82015250565b5f6129aa600f836128fe565b91506129b582612976565b602082019050919050565b5f6020820190508181035f8301526129d78161299e565b9050919050565b5f6060820190506129f15f830186612616565b6129fe6020830185612616565b612a0b60408301846123e7565b949350505050565b5f81519050612a2181612583565b92915050565b5f60208284031215612a3c57612a3b612351565b5b5f612a4984828501612a13565b91505092915050565b7f5472616e73666572206661696c656400000000000000000000000000000000005f82015250565b5f612a86600f836128fe565b9150612a9182612a52565b602082019050919050565b5f6020820190508181035f830152612ab381612a7a565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f612af1826123de565b9150612afc836123de565b9250828201905080821115612b1457612b13612aba565b5b92915050565b7f496e73756666696369656e74207374616b656420616d6f756e740000000000005f82015250565b5f612b4e601a836128fe565b9150612b5982612b1a565b602082019050919050565b5f6020820190508181035f830152612b7b81612b42565b9050919050565b5f612b8c826123de565b9150612b97836123de565b9250828202612ba5816123de565b91508282048414831517612bbc57612bbb612aba565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f612bfa826123de565b9150612c05836123de565b925082612c1557612c14612bc3565b5b828204905092915050565b5f612c2a826123de565b9150612c35836123de565b9250828203905081811115612c4d57612c4c612aba565b5b92915050565b5f604082019050612c665f830185612616565b612c7360208301846123e7565b9392505050565b5f604082019050612c8d5f8301856123e7565b612c9a60208301846123e7565b9392505050565b7f416c726561647920696e697469616c697a6564000000000000000000000000005f82015250565b5f612cd56013836128fe565b9150612ce082612ca1565b602082019050919050565b5f6020820190508181035f830152612d0281612cc9565b9050919050565b7f496e76616c6964206e6f6e6365000000000000000000000000000000000000005f82015250565b5f612d3d600d836128fe565b9150612d4882612d09565b602082019050919050565b5f6020820190508181035f830152612d6a81612d31565b9050919050565b5f612d7b826123de565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612dad57612dac612aba565b5b600182019050919050565b7f4e6f207374616b6520666f756e640000000000000000000000000000000000005f82015250565b5f612dec600e836128fe565b9150612df782612db8565b602082019050919050565b5f6020820190508181035f830152612e1981612de0565b9050919050565b7f4e6f2074696d6520656c617073656400000000000000000000000000000000005f82015250565b5f612e54600f836128fe565b9150612e5f82612e20565b602082019050919050565b5f6020820190508181035f830152612e8181612e48565b9050919050565b7f496e76616c6964207369676e61747572650000000000000000000000000000005f82015250565b5f612ebc6011836128fe565b9150612ec782612e88565b602082019050919050565b5f6020820190508181035f830152612ee981612eb0565b9050919050565b7f45706f6368206475726174696f6e206e6f7420656e64656400000000000000005f82015250565b5f612f246018836128fe565b9150612f2f82612ef0565b602082019050919050565b5f6020820190508181035f830152612f5181612f18565b9050919050565b7f4e6f2070656e64696e67207265776172647300000000000000000000000000005f82015250565b5f612f8c6012836128fe565b9150612f9782612f58565b602082019050919050565b5f6020820190508181035f830152612fb981612f80565b9050919050565b7f5265776172642065786365656473206d617820636c61696d61626c65000000005f82015250565b5f612ff4601c836128fe565b9150612fff82612fc0565b602082019050919050565b5f6020820190508181035f83015261302181612fe8565b9050919050565b5f60408201905061303b5f8301856123e7565b6130486020830184612526565b9392505050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f613083601f836128fe565b915061308e8261304f565b602082019050919050565b5f6020820190508181035f8301526130b081613077565b9050919050565b5f8160601b9050919050565b5f6130cd826130b7565b9050919050565b5f6130de826130c3565b9050919050565b6130f66130f182612378565b6130d4565b82525050565b5f819050919050565b613116613111826123de565b6130fc565b82525050565b5f61312782856130e5565b6014820191506131378284613105565b6020820191508190509392505050565b5f81905092915050565b7f19457468657265756d205369676e6564204d6573736167653a0a3332000000005f82015250565b5f613185601c83613147565b915061319082613151565b601c82019050919050565b5f819050919050565b5f819050919050565b6131be6131b98261319b565b6131a4565b82525050565b5f6131ce82613179565b91506131da82846131ad565b60208201915081905092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b61321f8161319b565b82525050565b5f6020820190506132385f830184613216565b92915050565b5f60ff82169050919050565b6132538161323e565b82525050565b5f60808201905061326c5f830187613216565b613279602083018661324a565b6132866040830185613216565b6132936060830184613216565b9594505050505056fea26469706673582212206a87094f0f185b690d1d9958d3f3862b780c5f9a998921fdb10d239be1937c3264736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0xA PUSH1 0xB SSTORE PUSH3 0x278D00 PUSH1 0xE SSTORE PUSH1 0x14 PUSH1 0xF SSTORE PUSH10 0xD3C21BCECCEDA1000000 PUSH1 0x10 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x2E JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP CALLER PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA0 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x97 SWAP2 SWAP1 PUSH2 0x1BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAF DUP2 PUSH2 0xBC PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP PUSH2 0x1D5 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1A6 DUP3 PUSH2 0x17D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B6 DUP2 PUSH2 0x19C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1CF PUSH0 DUP4 ADD DUP5 PUSH2 0x1AD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x32D2 DUP1 PUSH2 0x1E2 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x230 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x64CB6142 GT PUSH2 0x12E JUMPI DUP1 PUSH4 0xDD69BECD GT PUSH2 0xB6 JUMPI DUP1 PUSH4 0xF03F80C3 GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xF03F80C3 EQ PUSH2 0x686 JUMPI DUP1 PUSH4 0xF1EA7692 EQ PUSH2 0x6A4 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x6C2 JUMPI DUP1 PUSH4 0xF3482650 EQ PUSH2 0x6DE JUMPI DUP1 PUSH4 0xF6CC5157 EQ PUSH2 0x70E JUMPI PUSH2 0x230 JUMP JUMPDEST DUP1 PUSH4 0xDD69BECD EQ PUSH2 0x5F6 JUMPI DUP1 PUSH4 0xE275C997 EQ PUSH2 0x612 JUMPI DUP1 PUSH4 0xE90B0D76 EQ PUSH2 0x630 JUMPI DUP1 PUSH4 0xE927E7C0 EQ PUSH2 0x64C JUMPI DUP1 PUSH4 0xEAB35B77 EQ PUSH2 0x668 JUMPI PUSH2 0x230 JUMP JUMPDEST DUP1 PUSH4 0x848FF684 GT PUSH2 0xFD JUMPI DUP1 PUSH4 0x848FF684 EQ PUSH2 0x562 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x57E JUMPI DUP1 PUSH4 0x94D9B235 EQ PUSH2 0x59C JUMPI DUP1 PUSH4 0xC2362DD5 EQ PUSH2 0x5BA JUMPI DUP1 PUSH4 0xCCC8362C EQ PUSH2 0x5D8 JUMPI PUSH2 0x230 JUMP JUMPDEST DUP1 PUSH4 0x64CB6142 EQ PUSH2 0x4EC JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x50A JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x514 JUMPI DUP1 PUSH4 0x8119185B EQ PUSH2 0x544 JUMPI PUSH2 0x230 JUMP JUMPDEST DUP1 PUSH4 0x25D5971F GT PUSH2 0x1BC JUMPI DUP1 PUSH4 0x519445E2 GT PUSH2 0x180 JUMPI DUP1 PUSH4 0x519445E2 EQ PUSH2 0x420 JUMPI DUP1 PUSH4 0x5829B3C7 EQ PUSH2 0x43E JUMPI DUP1 PUSH4 0x58BA9D27 EQ PUSH2 0x46E JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x49E JUMPI DUP1 PUSH4 0x5E2A9FA2 EQ PUSH2 0x4BC JUMPI PUSH2 0x230 JUMP JUMPDEST DUP1 PUSH4 0x25D5971F EQ PUSH2 0x379 JUMPI DUP1 PUSH4 0x31FDC2BA EQ PUSH2 0x395 JUMPI DUP1 PUSH4 0x430BF08A EQ PUSH2 0x3B1 JUMPI DUP1 PUSH4 0x45626BD6 EQ PUSH2 0x3CF JUMPI DUP1 PUSH4 0x4FF0876A EQ PUSH2 0x402 JUMPI PUSH2 0x230 JUMP JUMPDEST DUP1 PUSH4 0x158EF93E GT PUSH2 0x203 JUMPI DUP1 PUSH4 0x158EF93E EQ PUSH2 0x2D1 JUMPI DUP1 PUSH4 0x16330D40 EQ PUSH2 0x2EF JUMPI DUP1 PUSH4 0x16934FC4 EQ PUSH2 0x30D JUMPI DUP1 PUSH4 0x16C38B3C EQ PUSH2 0x33F JUMPI DUP1 PUSH4 0x1BFF38CD EQ PUSH2 0x35B JUMPI PUSH2 0x230 JUMP JUMPDEST DUP1 PUSH4 0x11A4568 EQ PUSH2 0x234 JUMPI DUP1 PUSH4 0x524FB7E EQ PUSH2 0x264 JUMPI DUP1 PUSH4 0x5C50A35 EQ PUSH2 0x280 JUMPI DUP1 PUSH4 0xFD7BF50 EQ PUSH2 0x2B3 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x24E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x249 SWAP2 SWAP1 PUSH2 0x23B3 JUMP JUMPDEST PUSH2 0x72C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25B SWAP2 SWAP1 PUSH2 0x23F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x27E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x279 SWAP2 SWAP1 PUSH2 0x2439 JUMP JUMPDEST PUSH2 0x741 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x29A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x295 SWAP2 SWAP1 PUSH2 0x23B3 JUMP JUMPDEST PUSH2 0xA52 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AA SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2464 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BB PUSH2 0xA7E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C8 SWAP2 SWAP1 PUSH2 0x2502 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D9 PUSH2 0xAA3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E6 SWAP2 SWAP1 PUSH2 0x2535 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F7 PUSH2 0xAB6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x304 SWAP2 SWAP1 PUSH2 0x23F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x327 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x322 SWAP2 SWAP1 PUSH2 0x23B3 JUMP JUMPDEST PUSH2 0xABC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x336 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x254E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x359 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x354 SWAP2 SWAP1 PUSH2 0x25AD JUMP JUMPDEST PUSH2 0xAE2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x363 PUSH2 0xB3D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x370 SWAP2 SWAP1 PUSH2 0x23F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x393 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x38E SWAP2 SWAP1 PUSH2 0x2439 JUMP JUMPDEST PUSH2 0xB43 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3AF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3AA SWAP2 SWAP1 PUSH2 0x25D8 JUMP JUMPDEST PUSH2 0xE52 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3B9 PUSH2 0xF3E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C6 SWAP2 SWAP1 PUSH2 0x2625 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3E4 SWAP2 SWAP1 PUSH2 0x25D8 JUMP JUMPDEST PUSH2 0xF63 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F9 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2464 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x40A PUSH2 0xFA9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x417 SWAP2 SWAP1 PUSH2 0x23F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x428 PUSH2 0xFAF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x435 SWAP2 SWAP1 PUSH2 0x23F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x458 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x453 SWAP2 SWAP1 PUSH2 0x23B3 JUMP JUMPDEST PUSH2 0xFB5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x465 SWAP2 SWAP1 PUSH2 0x23F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x488 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x483 SWAP2 SWAP1 PUSH2 0x23B3 JUMP JUMPDEST PUSH2 0xFCA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x495 SWAP2 SWAP1 PUSH2 0x23F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4A6 PUSH2 0xFDF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4B3 SWAP2 SWAP1 PUSH2 0x2535 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4D6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4D1 SWAP2 SWAP1 PUSH2 0x23B3 JUMP JUMPDEST PUSH2 0xFF1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4E3 SWAP2 SWAP1 PUSH2 0x23F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4F4 PUSH2 0x1006 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x501 SWAP2 SWAP1 PUSH2 0x23F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x512 PUSH2 0x100C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x52E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x529 SWAP2 SWAP1 PUSH2 0x23B3 JUMP JUMPDEST PUSH2 0x101F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x53B SWAP2 SWAP1 PUSH2 0x23F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x54C PUSH2 0x1034 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x559 SWAP2 SWAP1 PUSH2 0x23F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x57C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x577 SWAP2 SWAP1 PUSH2 0x2679 JUMP JUMPDEST PUSH2 0x103A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x586 PUSH2 0x117D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x593 SWAP2 SWAP1 PUSH2 0x2625 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5A4 PUSH2 0x11A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B1 SWAP2 SWAP1 PUSH2 0x23F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5C2 PUSH2 0x11AA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5CF SWAP2 SWAP1 PUSH2 0x23F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5E0 PUSH2 0x11B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5ED SWAP2 SWAP1 PUSH2 0x23F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x610 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x60B SWAP2 SWAP1 PUSH2 0x2439 JUMP JUMPDEST PUSH2 0x11B6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x61A PUSH2 0x168A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x627 SWAP2 SWAP1 PUSH2 0x23F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x64A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x645 SWAP2 SWAP1 PUSH2 0x2866 JUMP JUMPDEST PUSH2 0x1690 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x666 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x661 SWAP2 SWAP1 PUSH2 0x28C0 JUMP JUMPDEST PUSH2 0x1A6B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x670 PUSH2 0x1D8E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x67D SWAP2 SWAP1 PUSH2 0x23F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x68E PUSH2 0x1D94 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x69B SWAP2 SWAP1 PUSH2 0x23F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6AC PUSH2 0x1D9A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6B9 SWAP2 SWAP1 PUSH2 0x23F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6DC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6D7 SWAP2 SWAP1 PUSH2 0x23B3 JUMP JUMPDEST PUSH2 0x1DA0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6F8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6F3 SWAP2 SWAP1 PUSH2 0x23B3 JUMP JUMPDEST PUSH2 0x1E24 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x705 SWAP2 SWAP1 PUSH2 0x23F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x716 PUSH2 0x1E39 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x723 SWAP2 SWAP1 PUSH2 0x23F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x15 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x11 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x790 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x787 SWAP1 PUSH2 0x2958 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x798 PUSH2 0x1E3F JUMP JUMPDEST PUSH1 0x11 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x7E7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7DE SWAP1 PUSH2 0x29C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER PUSH1 0x1B PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x866 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x29DE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x882 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8A6 SWAP2 SWAP1 PUSH2 0x2A27 JUMP JUMPDEST PUSH2 0x8E5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8DC SWAP1 PUSH2 0x2A9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x18 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 DUP2 PUSH1 0x2 ADD SLOAD SUB PUSH2 0x981 JUMPI TIMESTAMP DUP2 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x64 PUSH1 0x19 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x9D6 JUMP JUMPDEST PUSH1 0xA PUSH1 0x19 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x9CE SWAP2 SWAP1 PUSH2 0x2AE7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 DUP2 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x9E8 SWAP2 SWAP1 PUSH2 0x2AE7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP TIMESTAMP DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x6AFD9B8C734CBFEDA8BA55AFBDD1AC413BF617456B50196186371D2CC95B8572 DUP4 PUSH1 0x40 MLOAD PUSH2 0xA3E SWAP2 SWAP1 PUSH2 0x23F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH2 0xA4F PUSH2 0x1E8E JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x17 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 POP DUP5 JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x11 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH1 0x18 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH2 0xAEA PUSH2 0x1E97 JUMP JUMPDEST DUP1 PUSH1 0x11 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xE2FB031EE032DC02D8011DC50B816EB450CF856ABD8261680DAC74F72165BD2 DUP2 PUSH1 0x40 MLOAD PUSH2 0xB32 SWAP2 SWAP1 PUSH2 0x2535 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x11 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xB92 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB89 SWAP1 PUSH2 0x2958 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB9A PUSH2 0x1E3F JUMP JUMPDEST PUSH1 0x11 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xBE9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBE0 SWAP1 PUSH2 0x29C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x18 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP DUP1 PUSH0 ADD SLOAD DUP3 GT ISZERO PUSH2 0xC6F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC66 SWAP1 PUSH2 0x2B64 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH0 SWAP1 POP PUSH3 0x93A80 DUP3 PUSH1 0x2 ADD SLOAD PUSH2 0xC86 SWAP2 SWAP1 PUSH2 0x2AE7 JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0xCAA JUMPI PUSH1 0x64 PUSH1 0xB SLOAD DUP5 PUSH2 0xC9D SWAP2 SWAP1 PUSH2 0x2B82 JUMP JUMPDEST PUSH2 0xCA7 SWAP2 SWAP1 PUSH2 0x2BF0 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH0 DUP2 DUP5 PUSH2 0xCB7 SWAP2 SWAP1 PUSH2 0x2C20 JUMP JUMPDEST SWAP1 POP DUP4 DUP4 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0xCCB SWAP2 SWAP1 PUSH2 0x2C20 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1B PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF3FEF3A3 CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD2E SWAP3 SWAP2 SWAP1 PUSH2 0x2C53 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD45 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD57 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH0 DUP3 GT ISZERO PUSH2 0xDF4 JUMPI PUSH1 0x1B PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF3FEF3A3 PUSH2 0xDA8 PUSH2 0x117D JUMP JUMPDEST DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDC6 SWAP3 SWAP2 SWAP1 PUSH2 0x2C53 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDDD JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xDEF JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x933735AA8DE6D7547D0126171B2F31B9C34DD00F3ECD4BE85A0BA047DB4FAFEF DUP3 DUP5 PUSH1 0x40 MLOAD PUSH2 0xE3C SWAP3 SWAP2 SWAP1 PUSH2 0x2C7A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP PUSH2 0xE4F PUSH2 0x1E8E JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xE5A PUSH2 0x1E97 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0xE68 JUMPI PUSH1 0x64 PUSH2 0xE6B JUMP JUMPDEST PUSH1 0x78 JUMPDEST PUSH1 0xFF AND PUSH1 0x16 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xABCC9B515858A553F53609BB223669708665910A51030D923C842DE23F099913 PUSH1 0x16 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH1 0x40 MLOAD PUSH2 0xF32 SWAP2 SWAP1 PUSH2 0x23F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x1B PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1A PUSH1 0x20 MSTORE DUP2 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xF7C JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH0 SWAP2 POP SWAP2 POP POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 POP DUP5 JUMP JUMPDEST PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x16 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x19 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x11 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x14 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1014 PUSH2 0x1E97 JUMP JUMPDEST PUSH2 0x101D PUSH0 PUSH2 0x1F1E JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x12 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0xE SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1042 PUSH2 0x1E97 JUMP JUMPDEST PUSH1 0x11 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1092 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1089 SWAP1 PUSH2 0x2CEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP8 PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP7 PUSH1 0x3 DUP2 SWAP1 SSTORE POP DUP6 PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x5 DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x6 DUP2 SWAP1 SSTORE POP DUP5 PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x8 DUP2 SWAP1 SSTORE POP DUP4 PUSH1 0x9 DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0xA DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0xD DUP2 SWAP1 SSTORE POP NUMBER PUSH1 0xC DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x1B PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x11 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xF SLOAD DUP2 JUMP JUMPDEST PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x11 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1205 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11FC SWAP1 PUSH2 0x2958 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x120D PUSH2 0x1E3F JUMP JUMPDEST PUSH1 0x11 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x125C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1253 SWAP1 PUSH2 0x29C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x12 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD EQ PUSH2 0x12DB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12D2 SWAP1 PUSH2 0x2D53 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x12 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x1328 SWAP1 PUSH2 0x2D71 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH0 PUSH1 0x18 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 DUP2 PUSH1 0x2 ADD SLOAD SUB PUSH2 0x13B3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13AA SWAP1 PUSH2 0x2E02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x1 ADD SLOAD TIMESTAMP PUSH2 0x13C4 SWAP2 SWAP1 PUSH2 0x2C20 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT PUSH2 0x1408 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13FF SWAP1 PUSH2 0x2E6A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x4 SLOAD SWAP1 POP PUSH1 0x9 SLOAD PUSH1 0x8 SLOAD GT ISZERO PUSH2 0x1439 JUMPI PUSH1 0x64 PUSH1 0xA SLOAD PUSH1 0x4 SLOAD PUSH2 0x142C SWAP2 SWAP1 PUSH2 0x2B82 JUMP JUMPDEST PUSH2 0x1436 SWAP2 SWAP1 PUSH2 0x2BF0 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH0 PUSH0 PUSH1 0x16 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD EQ PUSH2 0x14C1 JUMPI PUSH1 0x16 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x14C4 JUMP JUMPDEST PUSH1 0x64 JUMPDEST SWAP1 POP PUSH1 0x64 DUP2 DUP4 PUSH2 0x14D4 SWAP2 SWAP1 PUSH2 0x2B82 JUMP JUMPDEST PUSH2 0x14DE SWAP2 SWAP1 PUSH2 0x2BF0 JUMP JUMPDEST SWAP2 POP PUSH0 DUP4 DUP4 DUP7 PUSH0 ADD SLOAD PUSH2 0x14F1 SWAP2 SWAP1 PUSH2 0x2B82 JUMP JUMPDEST PUSH2 0x14FB SWAP2 SWAP1 PUSH2 0x2B82 JUMP JUMPDEST SWAP1 POP PUSH1 0x64 PUSH1 0x19 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD DUP3 PUSH2 0x1548 SWAP2 SWAP1 PUSH2 0x2B82 JUMP JUMPDEST PUSH2 0x1552 SWAP2 SWAP1 PUSH2 0x2BF0 JUMP JUMPDEST SWAP1 POP PUSH1 0xE SLOAD DUP6 PUSH1 0x1 ADD SLOAD PUSH2 0x1566 SWAP2 SWAP1 PUSH2 0x2AE7 JUMP JUMPDEST TIMESTAMP GT ISZERO PUSH2 0x159A JUMPI PUSH0 PUSH1 0x64 PUSH1 0xF SLOAD DUP4 PUSH2 0x157E SWAP2 SWAP1 PUSH2 0x2B82 JUMP JUMPDEST PUSH2 0x1588 SWAP2 SWAP1 PUSH2 0x2BF0 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 PUSH2 0x1596 SWAP2 SWAP1 PUSH2 0x2C20 JUMP JUMPDEST SWAP2 POP POP JUMPDEST TIMESTAMP DUP6 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x40C10F19 CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15FF SWAP3 SWAP2 SWAP1 PUSH2 0x2C53 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1616 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1628 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4DD465EB9D4BF90CAF3400CC334C731B4CEF0AA7F013E5D72F20B0CEC2E30EA9 DUP3 PUSH1 0x40 MLOAD PUSH2 0x1672 SWAP2 SWAP1 PUSH2 0x23F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP PUSH2 0x1687 PUSH2 0x1E8E JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x11 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x16DF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16D6 SWAP1 PUSH2 0x2958 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x16E7 PUSH2 0x1E3F JUMP JUMPDEST PUSH1 0x11 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1736 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x172D SWAP1 PUSH2 0x29C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x12 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD EQ PUSH2 0x17B5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17AC SWAP1 PUSH2 0x2D53 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x17C0 CALLER DUP4 DUP4 PUSH2 0x1FDF JUMP JUMPDEST PUSH2 0x17FF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17F6 SWAP1 PUSH2 0x2ED2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x12 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x184C SWAP1 PUSH2 0x2D71 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH0 PUSH1 0x17 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH1 0x7 SLOAD DUP2 PUSH1 0x3 ADD SLOAD PUSH2 0x18A3 SWAP2 SWAP1 PUSH2 0x2AE7 JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x18E5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18DC SWAP1 PUSH2 0x2F3A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x2 ADD SLOAD SWAP1 POP PUSH0 DUP2 GT PUSH2 0x192F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1926 SWAP1 PUSH2 0x2FA2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x10 SLOAD DUP2 GT ISZERO PUSH2 0x1974 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x196B SWAP1 PUSH2 0x300A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP TIMESTAMP DUP3 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x40C10F19 CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19E2 SWAP3 SWAP2 SWAP1 PUSH2 0x2C53 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x19F9 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1A0B JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xB127973BF29D1DAE6424FEF4F7461E0B9C444636AB23A8392D9969500034A13D DUP3 PUSH1 0x40 MLOAD PUSH2 0x1A55 SWAP2 SWAP1 PUSH2 0x23F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH2 0x1A67 PUSH2 0x1E8E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x11 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1ABA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AB1 SWAP1 PUSH2 0x2958 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1AC2 PUSH2 0x1E3F JUMP JUMPDEST PUSH1 0x11 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1B11 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B08 SWAP1 PUSH2 0x29C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xD SLOAD PUSH1 0xC SLOAD PUSH2 0x1B21 SWAP2 SWAP1 PUSH2 0x2AE7 JUMP JUMPDEST NUMBER LT PUSH2 0x1B36 JUMPI PUSH0 PUSH1 0x6 DUP2 SWAP1 SSTORE POP NUMBER PUSH1 0xC DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x5 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1B48 SWAP2 SWAP1 PUSH2 0x2AE7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x6 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1B60 SWAP2 SWAP1 PUSH2 0x2AE7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x8 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1B78 SWAP2 SWAP1 PUSH2 0x2AE7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x17 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH1 0x1 DUP2 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1BD2 SWAP2 SWAP1 PUSH2 0x2AE7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 DUP2 PUSH1 0x1 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1BEC SWAP2 SWAP1 PUSH2 0x2AE7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x9 SLOAD PUSH1 0x6 SLOAD LT PUSH2 0x1C06 JUMPI PUSH1 0x64 PUSH2 0x1C09 JUMP JUMPDEST PUSH1 0x96 JUMPDEST PUSH1 0xFF AND SWAP1 POP PUSH0 PUSH1 0x64 DUP3 PUSH1 0x3 SLOAD DUP8 PUSH2 0x1C20 SWAP2 SWAP1 PUSH2 0x2B82 JUMP JUMPDEST PUSH2 0x1C2A SWAP2 SWAP1 PUSH2 0x2B82 JUMP JUMPDEST PUSH2 0x1C34 SWAP2 SWAP1 PUSH2 0x2BF0 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1C49 SWAP2 SWAP1 PUSH2 0x2AE7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x1CBA JUMPI PUSH1 0x64 DUP6 PUSH2 0x1C63 SWAP2 SWAP1 PUSH2 0x2BF0 JUMP JUMPDEST PUSH1 0x14 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1CAE SWAP2 SWAP1 PUSH2 0x2AE7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1D1A JUMP JUMPDEST PUSH1 0x64 DUP6 PUSH2 0x1CC7 SWAP2 SWAP1 PUSH2 0x2BF0 JUMP JUMPDEST PUSH1 0x15 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1D12 SWAP2 SWAP1 PUSH2 0x2AE7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH0 DUP4 PUSH1 0x3 ADD SLOAD SUB PUSH2 0x1D2F JUMPI TIMESTAMP DUP4 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4B85156045F2844CF6B638FF8A8DDB82C940CCDBE3C46E6E67D2583722C7DC71 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x1D77 SWAP3 SWAP2 SWAP1 PUSH2 0x3028 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP PUSH2 0x1D8A PUSH2 0x1E8E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x10 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1DA8 PUSH2 0x1E97 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1E18 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E0F SWAP2 SWAP1 PUSH2 0x2625 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1E21 DUP2 PUSH2 0x1F1E JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x13 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x1E84 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E7B SWAP1 PUSH2 0x3099 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x1E9F PUSH2 0x2079 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1EBD PUSH2 0x117D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1F1C JUMPI PUSH2 0x1EE0 PUSH2 0x2079 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F13 SWAP2 SWAP1 PUSH2 0x2625 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH0 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1FF4 SWAP3 SWAP2 SWAP1 PUSH2 0x311C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH0 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x201E SWAP2 SWAP1 PUSH2 0x31C4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2057 DUP3 DUP7 PUSH2 0x2080 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH2 0x208E DUP7 DUP7 PUSH2 0x20AA JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x209E DUP3 DUP3 PUSH2 0x20FF JUMP JUMPDEST DUP3 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x41 DUP5 MLOAD SUB PUSH2 0x20EA JUMPI PUSH0 PUSH0 PUSH0 PUSH1 0x20 DUP8 ADD MLOAD SWAP3 POP PUSH1 0x40 DUP8 ADD MLOAD SWAP2 POP PUSH1 0x60 DUP8 ADD MLOAD PUSH0 BYTE SWAP1 POP PUSH2 0x20DC DUP9 DUP3 DUP6 DUP6 PUSH2 0x2261 JUMP JUMPDEST SWAP6 POP SWAP6 POP SWAP6 POP POP POP POP PUSH2 0x20F8 JUMP JUMPDEST PUSH0 PUSH1 0x2 DUP6 MLOAD PUSH0 SHL SWAP3 POP SWAP3 POP SWAP3 POP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2112 JUMPI PUSH2 0x2111 PUSH2 0x31E9 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2125 JUMPI PUSH2 0x2124 PUSH2 0x31E9 JUMP JUMPDEST JUMPDEST SUB ISZERO PUSH2 0x225D JUMPI PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x213F JUMPI PUSH2 0x213E PUSH2 0x31E9 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2152 JUMPI PUSH2 0x2151 PUSH2 0x31E9 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x2189 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF645EEDF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x219D JUMPI PUSH2 0x219C PUSH2 0x31E9 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x21B0 JUMPI PUSH2 0x21AF PUSH2 0x31E9 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x21F4 JUMPI DUP1 PUSH0 SHR PUSH1 0x40 MLOAD PUSH32 0xFCE698F700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x21EB SWAP2 SWAP1 PUSH2 0x23F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x2207 JUMPI PUSH2 0x2206 PUSH2 0x31E9 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x221A JUMPI PUSH2 0x2219 PUSH2 0x31E9 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x225C JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD78BCE0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2253 SWAP2 SWAP1 PUSH2 0x3225 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 PUSH0 SHR GT ISZERO PUSH2 0x229D JUMPI PUSH0 PUSH1 0x3 DUP6 SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x233E JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x22C0 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3259 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x22E0 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2331 JUMPI PUSH0 PUSH1 0x1 PUSH0 PUSH0 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP PUSH2 0x233E JUMP JUMPDEST DUP1 PUSH0 PUSH0 PUSH0 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2382 DUP3 PUSH2 0x2359 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2392 DUP2 PUSH2 0x2378 JUMP JUMPDEST DUP2 EQ PUSH2 0x239C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x23AD DUP2 PUSH2 0x2389 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x23C8 JUMPI PUSH2 0x23C7 PUSH2 0x2351 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x23D5 DUP5 DUP3 DUP6 ADD PUSH2 0x239F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x23F0 DUP2 PUSH2 0x23DE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2409 PUSH0 DUP4 ADD DUP5 PUSH2 0x23E7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2418 DUP2 PUSH2 0x23DE JUMP JUMPDEST DUP2 EQ PUSH2 0x2422 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2433 DUP2 PUSH2 0x240F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x244E JUMPI PUSH2 0x244D PUSH2 0x2351 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x245B DUP5 DUP3 DUP6 ADD PUSH2 0x2425 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2477 PUSH0 DUP4 ADD DUP8 PUSH2 0x23E7 JUMP JUMPDEST PUSH2 0x2484 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x23E7 JUMP JUMPDEST PUSH2 0x2491 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x23E7 JUMP JUMPDEST PUSH2 0x249E PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x23E7 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x24CA PUSH2 0x24C5 PUSH2 0x24C0 DUP5 PUSH2 0x2359 JUMP JUMPDEST PUSH2 0x24A7 JUMP JUMPDEST PUSH2 0x2359 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x24DB DUP3 PUSH2 0x24B0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x24EC DUP3 PUSH2 0x24D1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x24FC DUP2 PUSH2 0x24E2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2515 PUSH0 DUP4 ADD DUP5 PUSH2 0x24F3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x252F DUP2 PUSH2 0x251B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2548 PUSH0 DUP4 ADD DUP5 PUSH2 0x2526 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2561 PUSH0 DUP4 ADD DUP7 PUSH2 0x23E7 JUMP JUMPDEST PUSH2 0x256E PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x23E7 JUMP JUMPDEST PUSH2 0x257B PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x23E7 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x258C DUP2 PUSH2 0x251B JUMP JUMPDEST DUP2 EQ PUSH2 0x2596 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x25A7 DUP2 PUSH2 0x2583 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x25C2 JUMPI PUSH2 0x25C1 PUSH2 0x2351 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x25CF DUP5 DUP3 DUP6 ADD PUSH2 0x2599 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x25EE JUMPI PUSH2 0x25ED PUSH2 0x2351 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x25FB DUP6 DUP3 DUP7 ADD PUSH2 0x239F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x260C DUP6 DUP3 DUP7 ADD PUSH2 0x2425 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x261F DUP2 PUSH2 0x2378 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2638 PUSH0 DUP4 ADD DUP5 PUSH2 0x2616 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2648 DUP3 PUSH2 0x2378 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2658 DUP2 PUSH2 0x263E JUMP JUMPDEST DUP2 EQ PUSH2 0x2662 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2673 DUP2 PUSH2 0x264F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH2 0x100 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x2696 JUMPI PUSH2 0x2695 PUSH2 0x2351 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x26A3 DUP12 DUP3 DUP13 ADD PUSH2 0x2665 JUMP JUMPDEST SWAP9 POP POP PUSH1 0x20 PUSH2 0x26B4 DUP12 DUP3 DUP13 ADD PUSH2 0x2425 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x40 PUSH2 0x26C5 DUP12 DUP3 DUP13 ADD PUSH2 0x2425 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x60 PUSH2 0x26D6 DUP12 DUP3 DUP13 ADD PUSH2 0x2425 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x80 PUSH2 0x26E7 DUP12 DUP3 DUP13 ADD PUSH2 0x2425 JUMP JUMPDEST SWAP5 POP POP PUSH1 0xA0 PUSH2 0x26F8 DUP12 DUP3 DUP13 ADD PUSH2 0x2425 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xC0 PUSH2 0x2709 DUP12 DUP3 DUP13 ADD PUSH2 0x2425 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xE0 PUSH2 0x271A DUP12 DUP3 DUP13 ADD PUSH2 0x239F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 SWAP1 SWAP4 SWAP7 POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x2778 DUP3 PUSH2 0x2732 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2797 JUMPI PUSH2 0x2796 PUSH2 0x2742 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x27A9 PUSH2 0x2348 JUMP JUMPDEST SWAP1 POP PUSH2 0x27B5 DUP3 DUP3 PUSH2 0x276F JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x27D4 JUMPI PUSH2 0x27D3 PUSH2 0x2742 JUMP JUMPDEST JUMPDEST PUSH2 0x27DD DUP3 PUSH2 0x2732 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x280A PUSH2 0x2805 DUP5 PUSH2 0x27BA JUMP JUMPDEST PUSH2 0x27A0 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2826 JUMPI PUSH2 0x2825 PUSH2 0x272E JUMP JUMPDEST JUMPDEST PUSH2 0x2831 DUP5 DUP3 DUP6 PUSH2 0x27EA JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x284D JUMPI PUSH2 0x284C PUSH2 0x272A JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x285D DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x27F8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x287C JUMPI PUSH2 0x287B PUSH2 0x2351 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2889 DUP6 DUP3 DUP7 ADD PUSH2 0x2425 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x28AA JUMPI PUSH2 0x28A9 PUSH2 0x2355 JUMP JUMPDEST JUMPDEST PUSH2 0x28B6 DUP6 DUP3 DUP7 ADD PUSH2 0x2839 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x28D6 JUMPI PUSH2 0x28D5 PUSH2 0x2351 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x28E3 DUP6 DUP3 DUP7 ADD PUSH2 0x2425 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x28F4 DUP6 DUP3 DUP7 ADD PUSH2 0x2599 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x436F6E7472616374206973207061757365640000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2942 PUSH1 0x12 DUP4 PUSH2 0x28FE JUMP JUMPDEST SWAP2 POP PUSH2 0x294D DUP3 PUSH2 0x290E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x296F DUP2 PUSH2 0x2936 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F7420696E697469616C697A65640000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x29AA PUSH1 0xF DUP4 PUSH2 0x28FE JUMP JUMPDEST SWAP2 POP PUSH2 0x29B5 DUP3 PUSH2 0x2976 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x29D7 DUP2 PUSH2 0x299E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x29F1 PUSH0 DUP4 ADD DUP7 PUSH2 0x2616 JUMP JUMPDEST PUSH2 0x29FE PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2616 JUMP JUMPDEST PUSH2 0x2A0B PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x23E7 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2A21 DUP2 PUSH2 0x2583 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2A3C JUMPI PUSH2 0x2A3B PUSH2 0x2351 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2A49 DUP5 DUP3 DUP6 ADD PUSH2 0x2A13 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5472616E73666572206661696C65640000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2A86 PUSH1 0xF DUP4 PUSH2 0x28FE JUMP JUMPDEST SWAP2 POP PUSH2 0x2A91 DUP3 PUSH2 0x2A52 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2AB3 DUP2 PUSH2 0x2A7A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2AF1 DUP3 PUSH2 0x23DE JUMP JUMPDEST SWAP2 POP PUSH2 0x2AFC DUP4 PUSH2 0x23DE JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2B14 JUMPI PUSH2 0x2B13 PUSH2 0x2ABA JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E74207374616B656420616D6F756E74000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2B4E PUSH1 0x1A DUP4 PUSH2 0x28FE JUMP JUMPDEST SWAP2 POP PUSH2 0x2B59 DUP3 PUSH2 0x2B1A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2B7B DUP2 PUSH2 0x2B42 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2B8C DUP3 PUSH2 0x23DE JUMP JUMPDEST SWAP2 POP PUSH2 0x2B97 DUP4 PUSH2 0x23DE JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x2BA5 DUP2 PUSH2 0x23DE JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x2BBC JUMPI PUSH2 0x2BBB PUSH2 0x2ABA JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2BFA DUP3 PUSH2 0x23DE JUMP JUMPDEST SWAP2 POP PUSH2 0x2C05 DUP4 PUSH2 0x23DE JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2C15 JUMPI PUSH2 0x2C14 PUSH2 0x2BC3 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2C2A DUP3 PUSH2 0x23DE JUMP JUMPDEST SWAP2 POP PUSH2 0x2C35 DUP4 PUSH2 0x23DE JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2C4D JUMPI PUSH2 0x2C4C PUSH2 0x2ABA JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2C66 PUSH0 DUP4 ADD DUP6 PUSH2 0x2616 JUMP JUMPDEST PUSH2 0x2C73 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x23E7 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2C8D PUSH0 DUP4 ADD DUP6 PUSH2 0x23E7 JUMP JUMPDEST PUSH2 0x2C9A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x23E7 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x416C726561647920696E697469616C697A656400000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2CD5 PUSH1 0x13 DUP4 PUSH2 0x28FE JUMP JUMPDEST SWAP2 POP PUSH2 0x2CE0 DUP3 PUSH2 0x2CA1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2D02 DUP2 PUSH2 0x2CC9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C6964206E6F6E636500000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2D3D PUSH1 0xD DUP4 PUSH2 0x28FE JUMP JUMPDEST SWAP2 POP PUSH2 0x2D48 DUP3 PUSH2 0x2D09 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2D6A DUP2 PUSH2 0x2D31 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2D7B DUP3 PUSH2 0x23DE JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x2DAD JUMPI PUSH2 0x2DAC PUSH2 0x2ABA JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F207374616B6520666F756E64000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2DEC PUSH1 0xE DUP4 PUSH2 0x28FE JUMP JUMPDEST SWAP2 POP PUSH2 0x2DF7 DUP3 PUSH2 0x2DB8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2E19 DUP2 PUSH2 0x2DE0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F2074696D6520656C61707365640000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2E54 PUSH1 0xF DUP4 PUSH2 0x28FE JUMP JUMPDEST SWAP2 POP PUSH2 0x2E5F DUP3 PUSH2 0x2E20 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2E81 DUP2 PUSH2 0x2E48 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C6964207369676E6174757265000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2EBC PUSH1 0x11 DUP4 PUSH2 0x28FE JUMP JUMPDEST SWAP2 POP PUSH2 0x2EC7 DUP3 PUSH2 0x2E88 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2EE9 DUP2 PUSH2 0x2EB0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45706F6368206475726174696F6E206E6F7420656E6465640000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2F24 PUSH1 0x18 DUP4 PUSH2 0x28FE JUMP JUMPDEST SWAP2 POP PUSH2 0x2F2F DUP3 PUSH2 0x2EF0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2F51 DUP2 PUSH2 0x2F18 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F2070656E64696E6720726577617264730000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2F8C PUSH1 0x12 DUP4 PUSH2 0x28FE JUMP JUMPDEST SWAP2 POP PUSH2 0x2F97 DUP3 PUSH2 0x2F58 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2FB9 DUP2 PUSH2 0x2F80 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265776172642065786365656473206D617820636C61696D61626C6500000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2FF4 PUSH1 0x1C DUP4 PUSH2 0x28FE JUMP JUMPDEST SWAP2 POP PUSH2 0x2FFF DUP3 PUSH2 0x2FC0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x3021 DUP2 PUSH2 0x2FE8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x303B PUSH0 DUP4 ADD DUP6 PUSH2 0x23E7 JUMP JUMPDEST PUSH2 0x3048 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2526 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x3083 PUSH1 0x1F DUP4 PUSH2 0x28FE JUMP JUMPDEST SWAP2 POP PUSH2 0x308E DUP3 PUSH2 0x304F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x30B0 DUP2 PUSH2 0x3077 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x60 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x30CD DUP3 PUSH2 0x30B7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x30DE DUP3 PUSH2 0x30C3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x30F6 PUSH2 0x30F1 DUP3 PUSH2 0x2378 JUMP JUMPDEST PUSH2 0x30D4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3116 PUSH2 0x3111 DUP3 PUSH2 0x23DE JUMP JUMPDEST PUSH2 0x30FC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x3127 DUP3 DUP6 PUSH2 0x30E5 JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP PUSH2 0x3137 DUP3 DUP5 PUSH2 0x3105 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x3185 PUSH1 0x1C DUP4 PUSH2 0x3147 JUMP JUMPDEST SWAP2 POP PUSH2 0x3190 DUP3 PUSH2 0x3151 JUMP JUMPDEST PUSH1 0x1C DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x31BE PUSH2 0x31B9 DUP3 PUSH2 0x319B JUMP JUMPDEST PUSH2 0x31A4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x31CE DUP3 PUSH2 0x3179 JUMP JUMPDEST SWAP2 POP PUSH2 0x31DA DUP3 DUP5 PUSH2 0x31AD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x321F DUP2 PUSH2 0x319B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3238 PUSH0 DUP4 ADD DUP5 PUSH2 0x3216 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3253 DUP2 PUSH2 0x323E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x326C PUSH0 DUP4 ADD DUP8 PUSH2 0x3216 JUMP JUMPDEST PUSH2 0x3279 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x324A JUMP JUMPDEST PUSH2 0x3286 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x3216 JUMP JUMPDEST PUSH2 0x3293 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x3216 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH11 0x87094F0F185B690D1D9958 0xD3 RETURN DUP7 0x2B PUSH25 0xC5F9A998921FDB10D239BE1937C3264736F6C634300081C00 CALLER ",
							"sourceMap": "1161:14380:9:-:0;;;1802:2;1766:38;;2087:7;2047:47;;2139:2;2100:41;;2273:18;2243:48;;4780:36;;;;;;;;;;4802:10;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1716:1:2;1821:7;:22;;;;1161:14380:9;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7:126:10:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;1161:14380:9:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_checkOwner_84": {
									"entryPoint": 7831,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_1026": {
									"entryPoint": 8313,
									"id": 1026,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_337": {
									"entryPoint": 7822,
									"id": 337,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_329": {
									"entryPoint": 7743,
									"id": 329,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_throwError_1391": {
									"entryPoint": 8447,
									"id": 1391,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 7966,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@claimStakeRewards_2196": {
									"entryPoint": 4534,
									"id": 2196,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@claimTradeRewards_1943": {
									"entryPoint": 5776,
									"id": 1943,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@earlyWithdrawalFee_1449": {
									"entryPoint": 2742,
									"id": 1449,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@epochDuration_1453": {
									"entryPoint": 4009,
									"id": 1453,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@epochTradeVolume_1438": {
									"entryPoint": 4015,
									"id": 1438,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@inactivityPenaltyRate_1459": {
									"entryPoint": 4516,
									"id": 1459,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@inactivitySlashingTime_1456": {
									"entryPoint": 4148,
									"id": 1456,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@initialize_1682": {
									"entryPoint": 4154,
									"id": 1682,
									"parameterSlots": 8,
									"returnSlots": 0
								},
								"@initialized_1470": {
									"entryPoint": 2723,
									"id": 1470,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@lastEpochBlock_1451": {
									"entryPoint": 4522,
									"id": 1451,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@lastSignedClaim_1478": {
									"entryPoint": 7716,
									"id": 1478,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@latToken_1430": {
									"entryPoint": 2686,
									"id": 1430,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@liquidityBoostMultiplier_1490": {
									"entryPoint": 4021,
									"id": 1490,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@makerRebates_1482": {
									"entryPoint": 4081,
									"id": 1482,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@maxClaimable_1466": {
									"entryPoint": 7572,
									"id": 1466,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@nonces_1474": {
									"entryPoint": 4127,
									"id": 1474,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_67": {
									"entryPoint": 4477,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@paused_1468": {
									"entryPoint": 4063,
									"id": 1468,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@poolBoostMultiplier_1446": {
									"entryPoint": 2877,
									"id": 1446,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@poolTradingVolume_1442": {
									"entryPoint": 7566,
									"id": 1442,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@poolVolumeThreshold_1444": {
									"entryPoint": 4102,
									"id": 1444,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@recordTrade_1834": {
									"entryPoint": 6763,
									"id": 1834,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@recover_1148": {
									"entryPoint": 8320,
									"id": 1148,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 4108,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setPaused_1699": {
									"entryPoint": 2786,
									"id": 1699,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@stakeLat_2025": {
									"entryPoint": 1857,
									"id": 2025,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@stakeRewardRate_1434": {
									"entryPoint": 4528,
									"id": 1434,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stakedWeight_1520": {
									"entryPoint": 4042,
									"id": 1520,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stakes_1516": {
									"entryPoint": 2748,
									"id": 1516,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@takerFees_1486": {
									"entryPoint": 1836,
									"id": 1486,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalTrades_1436": {
									"entryPoint": 5770,
									"id": 1436,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@tradeEpochDuration_1440": {
									"entryPoint": 7578,
									"id": 1440,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@tradeRewardRate_1432": {
									"entryPoint": 7737,
									"id": 1432,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@traderStats_1504": {
									"entryPoint": 2642,
									"id": 1504,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 7584,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@tryRecover_1118": {
									"entryPoint": 8362,
									"id": 1118,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"@tryRecover_1306": {
									"entryPoint": 8801,
									"id": 1306,
									"parameterSlots": 4,
									"returnSlots": 3
								},
								"@updateLiquidityMultiplier_2321": {
									"entryPoint": 3666,
									"id": 2321,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@vaultAddress_1537": {
									"entryPoint": 3902,
									"id": 1537,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@verifySignature_2362": {
									"entryPoint": 8159,
									"id": 2362,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@vestingSchedules_1535": {
									"entryPoint": 3939,
									"id": 1535,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdrawStake_2292": {
									"entryPoint": 2883,
									"id": 2292,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 10232,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 9119,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 9625,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 10771,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 10297,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_contract$_ILatToken_$1410": {
									"entryPoint": 9829,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 9253,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 9139,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 9688,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool": {
									"entryPoint": 9645,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 10791,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_ILatToken_$1410t_uint256t_uint256t_uint256t_uint256t_uint256t_uint256t_address": {
									"entryPoint": 9849,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 8
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 9273,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_bool": {
									"entryPoint": 10432,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256t_bytes_memory_ptr": {
									"entryPoint": 10342,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 9750,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack": {
									"entryPoint": 12517,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 9510,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 12822,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack": {
									"entryPoint": 12717,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_ILatToken_$1410_to_t_address_fromStack": {
									"entryPoint": 9459,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_0dd13570e20c96a9bfc56c79d1eb9235438d62a04250ac67a0d9f423a83cdc16_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11074,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_173f724573e03b30b01a0c9de192b085764dd4bd6eb36c485bbfc55c18287d76_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 12056,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 12665,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_19a9c5fdfc984667e300523283171e2aca8bb9e593f19eef41052fcdbfdb1568_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11569,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10874,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_3b595757d501f3a780236362fb65cac1873bab94376c90d08bc706e4116d8674_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11848,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11952,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_6ae2314e839d4d9cfe442dd3a2386a5c83b76bbc48be45cca60d84c71c4359b2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10654,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_6de2a2be9ca38ada1b84a026463e7b712a73f0cb3c748e36f625c3a785b75809_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 12264,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_8114dcf72780e60e19572e2c60a0c1f9869923f8566298d433960bbbf02ee9bd_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 12160,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_8495ddd36ba9b32a0cb09aa87f940a1af6e06f502729a7774df9db0ac3d8e45a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11744,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11465,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e55600974a468a5baf1f1454a24481ec68f787ee02cd9f1d97c35ce2a8d2093d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10550,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 12407,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 9191,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack": {
									"entryPoint": 12549,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 12874,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_address_t_uint256__to_t_address_t_uint256__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 12572,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73_t_bytes32__to_t_string_memory_ptr_t_bytes32__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 12740,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 9765,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 10718,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 11347,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 9525,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": 12837,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed": {
									"entryPoint": 12889,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_ILatToken_$1410__to_t_address__fromStack_reversed": {
									"entryPoint": 9474,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0dd13570e20c96a9bfc56c79d1eb9235438d62a04250ac67a0d9f423a83cdc16__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11108,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_173f724573e03b30b01a0c9de192b085764dd4bd6eb36c485bbfc55c18287d76__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 12090,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_19a9c5fdfc984667e300523283171e2aca8bb9e593f19eef41052fcdbfdb1568__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11603,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10908,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3b595757d501f3a780236362fb65cac1873bab94376c90d08bc706e4116d8674__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11882,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11986,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6ae2314e839d4d9cfe442dd3a2386a5c83b76bbc48be45cca60d84c71c4359b2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10688,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6de2a2be9ca38ada1b84a026463e7b712a73f0cb3c748e36f625c3a785b75809__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 12298,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8114dcf72780e60e19572e2c60a0c1f9869923f8566298d433960bbbf02ee9bd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 12194,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8495ddd36ba9b32a0cb09aa87f940a1af6e06f502729a7774df9db0ac3d8e45a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11778,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11499,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e55600974a468a5baf1f1454a24481ec68f787ee02cd9f1d97c35ce2a8d2093d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10584,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 12441,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 9206,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_bool__to_t_uint256_t_bool__fromStack_reversed": {
									"entryPoint": 12328,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 11386,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 9550,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 9316,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 10144,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 9032,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 10170,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 10494,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 12615,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 10983,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 11248,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 11138,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 11296,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 9080,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 9499,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 12699,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_ILatToken_$1410": {
									"entryPoint": 9790,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 9049,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 9182,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 12862,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_ILatToken_$1410_to_t_address": {
									"entryPoint": 9442,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 9425,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 9392,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 10218,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"finalize_allocation": {
									"entryPoint": 10095,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 9383,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 11633,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"leftAlign_t_address": {
									"entryPoint": 12500,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"leftAlign_t_bytes32": {
									"entryPoint": 12708,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"leftAlign_t_uint160": {
									"entryPoint": 12483,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"leftAlign_t_uint256": {
									"entryPoint": 12540,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 10938,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 11203,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x21": {
									"entryPoint": 12777,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 10050,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 10026,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 10030,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 9045,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 9041,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 10034,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_96": {
									"entryPoint": 12471,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_0dd13570e20c96a9bfc56c79d1eb9235438d62a04250ac67a0d9f423a83cdc16": {
									"entryPoint": 11034,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_173f724573e03b30b01a0c9de192b085764dd4bd6eb36c485bbfc55c18287d76": {
									"entryPoint": 12016,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73": {
									"entryPoint": 12625,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_19a9c5fdfc984667e300523283171e2aca8bb9e593f19eef41052fcdbfdb1568": {
									"entryPoint": 11529,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51": {
									"entryPoint": 10834,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_3b595757d501f3a780236362fb65cac1873bab94376c90d08bc706e4116d8674": {
									"entryPoint": 11808,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7": {
									"entryPoint": 11912,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_6ae2314e839d4d9cfe442dd3a2386a5c83b76bbc48be45cca60d84c71c4359b2": {
									"entryPoint": 10614,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_6de2a2be9ca38ada1b84a026463e7b712a73f0cb3c748e36f625c3a785b75809": {
									"entryPoint": 12224,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_8114dcf72780e60e19572e2c60a0c1f9869923f8566298d433960bbbf02ee9bd": {
									"entryPoint": 12120,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_8495ddd36ba9b32a0cb09aa87f940a1af6e06f502729a7774df9db0ac3d8e45a": {
									"entryPoint": 11704,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0": {
									"entryPoint": 11425,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e55600974a468a5baf1f1454a24481ec68f787ee02cd9f1d97c35ce2a8d2093d": {
									"entryPoint": 10510,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619": {
									"entryPoint": 12367,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 9097,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 9603,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_ILatToken_$1410": {
									"entryPoint": 9807,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 9231,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:31644:10",
										"nodeType": "YulBlock",
										"src": "0:31644:10",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:10",
													"nodeType": "YulBlock",
													"src": "47:35:10",
													"statements": [
														{
															"nativeSrc": "57:19:10",
															"nodeType": "YulAssignment",
															"src": "57:19:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:10",
																		"nodeType": "YulLiteral",
																		"src": "73:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:10"
																},
																"nativeSrc": "67:9:10",
																"nodeType": "YulFunctionCall",
																"src": "67:9:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:10"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:10",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:10",
														"nodeType": "YulTypedName",
														"src": "40:6:10",
														"type": ""
													}
												],
												"src": "7:75:10"
											},
											{
												"body": {
													"nativeSrc": "177:28:10",
													"nodeType": "YulBlock",
													"src": "177:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:10",
																		"nodeType": "YulLiteral",
																		"src": "194:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:10",
																		"nodeType": "YulLiteral",
																		"src": "197:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:10"
																},
																"nativeSrc": "187:12:10",
																"nodeType": "YulFunctionCall",
																"src": "187:12:10"
															},
															"nativeSrc": "187:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:10"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:10"
											},
											{
												"body": {
													"nativeSrc": "300:28:10",
													"nodeType": "YulBlock",
													"src": "300:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:10",
																		"nodeType": "YulLiteral",
																		"src": "317:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:10",
																		"nodeType": "YulLiteral",
																		"src": "320:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:10"
																},
																"nativeSrc": "310:12:10",
																"nodeType": "YulFunctionCall",
																"src": "310:12:10"
															},
															"nativeSrc": "310:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:10"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:10"
											},
											{
												"body": {
													"nativeSrc": "379:81:10",
													"nodeType": "YulBlock",
													"src": "379:81:10",
													"statements": [
														{
															"nativeSrc": "389:65:10",
															"nodeType": "YulAssignment",
															"src": "389:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:10",
																		"nodeType": "YulLiteral",
																		"src": "411:42:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:10"
																},
																"nativeSrc": "400:54:10",
																"nodeType": "YulFunctionCall",
																"src": "400:54:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:10",
														"nodeType": "YulTypedName",
														"src": "361:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:10",
														"nodeType": "YulTypedName",
														"src": "371:7:10",
														"type": ""
													}
												],
												"src": "334:126:10"
											},
											{
												"body": {
													"nativeSrc": "511:51:10",
													"nodeType": "YulBlock",
													"src": "511:51:10",
													"statements": [
														{
															"nativeSrc": "521:35:10",
															"nodeType": "YulAssignment",
															"src": "521:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:10"
																},
																"nativeSrc": "532:24:10",
																"nodeType": "YulFunctionCall",
																"src": "532:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:10",
														"nodeType": "YulTypedName",
														"src": "493:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:10",
														"nodeType": "YulTypedName",
														"src": "503:7:10",
														"type": ""
													}
												],
												"src": "466:96:10"
											},
											{
												"body": {
													"nativeSrc": "611:79:10",
													"nodeType": "YulBlock",
													"src": "611:79:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:10",
																"nodeType": "YulBlock",
																"src": "668:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:10",
																					"nodeType": "YulLiteral",
																					"src": "677:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:10",
																					"nodeType": "YulLiteral",
																					"src": "680:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:10"
																			},
																			"nativeSrc": "670:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:10"
																		},
																		"nativeSrc": "670:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:10"
																				},
																				"nativeSrc": "641:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:10"
																		},
																		"nativeSrc": "631:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:10"
																},
																"nativeSrc": "624:43:10",
																"nodeType": "YulFunctionCall",
																"src": "624:43:10"
															},
															"nativeSrc": "621:63:10",
															"nodeType": "YulIf",
															"src": "621:63:10"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:10",
														"nodeType": "YulTypedName",
														"src": "604:5:10",
														"type": ""
													}
												],
												"src": "568:122:10"
											},
											{
												"body": {
													"nativeSrc": "748:87:10",
													"nodeType": "YulBlock",
													"src": "748:87:10",
													"statements": [
														{
															"nativeSrc": "758:29:10",
															"nodeType": "YulAssignment",
															"src": "758:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "780:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "767:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:10"
																},
																"nativeSrc": "767:20:10",
																"nodeType": "YulFunctionCall",
																"src": "767:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "758:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "823:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "796:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:10"
																},
																"nativeSrc": "796:33:10",
																"nodeType": "YulFunctionCall",
																"src": "796:33:10"
															},
															"nativeSrc": "796:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "796:33:10"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "696:139:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "726:6:10",
														"nodeType": "YulTypedName",
														"src": "726:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "734:3:10",
														"nodeType": "YulTypedName",
														"src": "734:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "742:5:10",
														"nodeType": "YulTypedName",
														"src": "742:5:10",
														"type": ""
													}
												],
												"src": "696:139:10"
											},
											{
												"body": {
													"nativeSrc": "907:263:10",
													"nodeType": "YulBlock",
													"src": "907:263:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "953:83:10",
																"nodeType": "YulBlock",
																"src": "953:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "955:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "955:77:10"
																			},
																			"nativeSrc": "955:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "955:79:10"
																		},
																		"nativeSrc": "955:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "955:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "928:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "928:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "937:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "937:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "924:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "924:3:10"
																		},
																		"nativeSrc": "924:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "924:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "949:2:10",
																		"nodeType": "YulLiteral",
																		"src": "949:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "920:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "920:3:10"
																},
																"nativeSrc": "920:32:10",
																"nodeType": "YulFunctionCall",
																"src": "920:32:10"
															},
															"nativeSrc": "917:119:10",
															"nodeType": "YulIf",
															"src": "917:119:10"
														},
														{
															"nativeSrc": "1046:117:10",
															"nodeType": "YulBlock",
															"src": "1046:117:10",
															"statements": [
																{
																	"nativeSrc": "1061:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1061:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1075:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1075:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1065:6:10",
																			"nodeType": "YulTypedName",
																			"src": "1065:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1090:63:10",
																	"nodeType": "YulAssignment",
																	"src": "1090:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1125:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "1125:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1136:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "1136:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1121:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "1121:3:10"
																				},
																				"nativeSrc": "1121:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1121:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1145:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "1145:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1100:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "1100:20:10"
																		},
																		"nativeSrc": "1100:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1100:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1090:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "1090:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "841:329:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "877:9:10",
														"nodeType": "YulTypedName",
														"src": "877:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "888:7:10",
														"nodeType": "YulTypedName",
														"src": "888:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "900:6:10",
														"nodeType": "YulTypedName",
														"src": "900:6:10",
														"type": ""
													}
												],
												"src": "841:329:10"
											},
											{
												"body": {
													"nativeSrc": "1221:32:10",
													"nodeType": "YulBlock",
													"src": "1221:32:10",
													"statements": [
														{
															"nativeSrc": "1231:16:10",
															"nodeType": "YulAssignment",
															"src": "1231:16:10",
															"value": {
																"name": "value",
																"nativeSrc": "1242:5:10",
																"nodeType": "YulIdentifier",
																"src": "1242:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1231:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "1231:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1176:77:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1203:5:10",
														"nodeType": "YulTypedName",
														"src": "1203:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1213:7:10",
														"nodeType": "YulTypedName",
														"src": "1213:7:10",
														"type": ""
													}
												],
												"src": "1176:77:10"
											},
											{
												"body": {
													"nativeSrc": "1324:53:10",
													"nodeType": "YulBlock",
													"src": "1324:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1341:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "1341:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1364:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "1364:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1346:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "1346:17:10"
																		},
																		"nativeSrc": "1346:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1346:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1334:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1334:6:10"
																},
																"nativeSrc": "1334:37:10",
																"nodeType": "YulFunctionCall",
																"src": "1334:37:10"
															},
															"nativeSrc": "1334:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "1334:37:10"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "1259:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1312:5:10",
														"nodeType": "YulTypedName",
														"src": "1312:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1319:3:10",
														"nodeType": "YulTypedName",
														"src": "1319:3:10",
														"type": ""
													}
												],
												"src": "1259:118:10"
											},
											{
												"body": {
													"nativeSrc": "1481:124:10",
													"nodeType": "YulBlock",
													"src": "1481:124:10",
													"statements": [
														{
															"nativeSrc": "1491:26:10",
															"nodeType": "YulAssignment",
															"src": "1491:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1503:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1503:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1514:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1514:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1499:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1499:3:10"
																},
																"nativeSrc": "1499:18:10",
																"nodeType": "YulFunctionCall",
																"src": "1499:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1491:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "1491:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1571:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1571:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1584:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1584:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1595:1:10",
																				"nodeType": "YulLiteral",
																				"src": "1595:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1580:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1580:3:10"
																		},
																		"nativeSrc": "1580:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1580:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1527:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "1527:43:10"
																},
																"nativeSrc": "1527:71:10",
																"nodeType": "YulFunctionCall",
																"src": "1527:71:10"
															},
															"nativeSrc": "1527:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "1527:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1383:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1453:9:10",
														"nodeType": "YulTypedName",
														"src": "1453:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1465:6:10",
														"nodeType": "YulTypedName",
														"src": "1465:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1476:4:10",
														"nodeType": "YulTypedName",
														"src": "1476:4:10",
														"type": ""
													}
												],
												"src": "1383:222:10"
											},
											{
												"body": {
													"nativeSrc": "1654:79:10",
													"nodeType": "YulBlock",
													"src": "1654:79:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "1711:16:10",
																"nodeType": "YulBlock",
																"src": "1711:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1720:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1720:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1723:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1723:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1713:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1713:6:10"
																			},
																			"nativeSrc": "1713:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1713:12:10"
																		},
																		"nativeSrc": "1713:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1713:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1677:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "1677:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1702:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "1702:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1684:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "1684:17:10"
																				},
																				"nativeSrc": "1684:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1684:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1674:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "1674:2:10"
																		},
																		"nativeSrc": "1674:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1674:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1667:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1667:6:10"
																},
																"nativeSrc": "1667:43:10",
																"nodeType": "YulFunctionCall",
																"src": "1667:43:10"
															},
															"nativeSrc": "1664:63:10",
															"nodeType": "YulIf",
															"src": "1664:63:10"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "1611:122:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1647:5:10",
														"nodeType": "YulTypedName",
														"src": "1647:5:10",
														"type": ""
													}
												],
												"src": "1611:122:10"
											},
											{
												"body": {
													"nativeSrc": "1791:87:10",
													"nodeType": "YulBlock",
													"src": "1791:87:10",
													"statements": [
														{
															"nativeSrc": "1801:29:10",
															"nodeType": "YulAssignment",
															"src": "1801:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1823:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1823:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1810:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "1810:12:10"
																},
																"nativeSrc": "1810:20:10",
																"nodeType": "YulFunctionCall",
																"src": "1810:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1801:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "1801:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1866:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1866:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1839:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "1839:26:10"
																},
																"nativeSrc": "1839:33:10",
																"nodeType": "YulFunctionCall",
																"src": "1839:33:10"
															},
															"nativeSrc": "1839:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "1839:33:10"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "1739:139:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1769:6:10",
														"nodeType": "YulTypedName",
														"src": "1769:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1777:3:10",
														"nodeType": "YulTypedName",
														"src": "1777:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1785:5:10",
														"nodeType": "YulTypedName",
														"src": "1785:5:10",
														"type": ""
													}
												],
												"src": "1739:139:10"
											},
											{
												"body": {
													"nativeSrc": "1950:263:10",
													"nodeType": "YulBlock",
													"src": "1950:263:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "1996:83:10",
																"nodeType": "YulBlock",
																"src": "1996:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1998:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "1998:77:10"
																			},
																			"nativeSrc": "1998:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1998:79:10"
																		},
																		"nativeSrc": "1998:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1998:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1971:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "1971:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1980:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1980:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1967:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1967:3:10"
																		},
																		"nativeSrc": "1967:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1967:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1992:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1992:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1963:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1963:3:10"
																},
																"nativeSrc": "1963:32:10",
																"nodeType": "YulFunctionCall",
																"src": "1963:32:10"
															},
															"nativeSrc": "1960:119:10",
															"nodeType": "YulIf",
															"src": "1960:119:10"
														},
														{
															"nativeSrc": "2089:117:10",
															"nodeType": "YulBlock",
															"src": "2089:117:10",
															"statements": [
																{
																	"nativeSrc": "2104:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2104:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2118:1:10",
																		"nodeType": "YulLiteral",
																		"src": "2118:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2108:6:10",
																			"nodeType": "YulTypedName",
																			"src": "2108:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2133:63:10",
																	"nodeType": "YulAssignment",
																	"src": "2133:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2168:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "2168:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2179:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "2179:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2164:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "2164:3:10"
																				},
																				"nativeSrc": "2164:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2164:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2188:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "2188:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2143:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "2143:20:10"
																		},
																		"nativeSrc": "2143:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2143:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2133:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "2133:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "1884:329:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1920:9:10",
														"nodeType": "YulTypedName",
														"src": "1920:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1931:7:10",
														"nodeType": "YulTypedName",
														"src": "1931:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1943:6:10",
														"nodeType": "YulTypedName",
														"src": "1943:6:10",
														"type": ""
													}
												],
												"src": "1884:329:10"
											},
											{
												"body": {
													"nativeSrc": "2401:371:10",
													"nodeType": "YulBlock",
													"src": "2401:371:10",
													"statements": [
														{
															"nativeSrc": "2411:27:10",
															"nodeType": "YulAssignment",
															"src": "2411:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2423:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "2423:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2434:3:10",
																		"nodeType": "YulLiteral",
																		"src": "2434:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2419:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2419:3:10"
																},
																"nativeSrc": "2419:19:10",
																"nodeType": "YulFunctionCall",
																"src": "2419:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2411:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "2411:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2492:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2492:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2505:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "2505:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2516:1:10",
																				"nodeType": "YulLiteral",
																				"src": "2516:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2501:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2501:3:10"
																		},
																		"nativeSrc": "2501:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2501:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "2448:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "2448:43:10"
																},
																"nativeSrc": "2448:71:10",
																"nodeType": "YulFunctionCall",
																"src": "2448:71:10"
															},
															"nativeSrc": "2448:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "2448:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "2573:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2573:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2586:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "2586:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2597:2:10",
																				"nodeType": "YulLiteral",
																				"src": "2597:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2582:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2582:3:10"
																		},
																		"nativeSrc": "2582:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2582:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "2529:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "2529:43:10"
																},
																"nativeSrc": "2529:72:10",
																"nodeType": "YulFunctionCall",
																"src": "2529:72:10"
															},
															"nativeSrc": "2529:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "2529:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "2655:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2655:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2668:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "2668:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2679:2:10",
																				"nodeType": "YulLiteral",
																				"src": "2679:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2664:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2664:3:10"
																		},
																		"nativeSrc": "2664:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2664:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "2611:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "2611:43:10"
																},
																"nativeSrc": "2611:72:10",
																"nodeType": "YulFunctionCall",
																"src": "2611:72:10"
															},
															"nativeSrc": "2611:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "2611:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "2737:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2737:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2750:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "2750:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2761:2:10",
																				"nodeType": "YulLiteral",
																				"src": "2761:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2746:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2746:3:10"
																		},
																		"nativeSrc": "2746:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2746:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "2693:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "2693:43:10"
																},
																"nativeSrc": "2693:72:10",
																"nodeType": "YulFunctionCall",
																"src": "2693:72:10"
															},
															"nativeSrc": "2693:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "2693:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "2219:553:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2349:9:10",
														"nodeType": "YulTypedName",
														"src": "2349:9:10",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "2361:6:10",
														"nodeType": "YulTypedName",
														"src": "2361:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2369:6:10",
														"nodeType": "YulTypedName",
														"src": "2369:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2377:6:10",
														"nodeType": "YulTypedName",
														"src": "2377:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2385:6:10",
														"nodeType": "YulTypedName",
														"src": "2385:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2396:4:10",
														"nodeType": "YulTypedName",
														"src": "2396:4:10",
														"type": ""
													}
												],
												"src": "2219:553:10"
											},
											{
												"body": {
													"nativeSrc": "2810:28:10",
													"nodeType": "YulBlock",
													"src": "2810:28:10",
													"statements": [
														{
															"nativeSrc": "2820:12:10",
															"nodeType": "YulAssignment",
															"src": "2820:12:10",
															"value": {
																"name": "value",
																"nativeSrc": "2827:5:10",
																"nodeType": "YulIdentifier",
																"src": "2827:5:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2820:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2820:3:10"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "2778:60:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2796:5:10",
														"nodeType": "YulTypedName",
														"src": "2796:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2806:3:10",
														"nodeType": "YulTypedName",
														"src": "2806:3:10",
														"type": ""
													}
												],
												"src": "2778:60:10"
											},
											{
												"body": {
													"nativeSrc": "2904:82:10",
													"nodeType": "YulBlock",
													"src": "2904:82:10",
													"statements": [
														{
															"nativeSrc": "2914:66:10",
															"nodeType": "YulAssignment",
															"src": "2914:66:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2972:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "2972:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "2954:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "2954:17:10"
																				},
																				"nativeSrc": "2954:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2954:24:10"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "2945:8:10",
																			"nodeType": "YulIdentifier",
																			"src": "2945:8:10"
																		},
																		"nativeSrc": "2945:34:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2945:34:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2927:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "2927:17:10"
																},
																"nativeSrc": "2927:53:10",
																"nodeType": "YulFunctionCall",
																"src": "2927:53:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2914:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "2914:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "2844:142:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2884:5:10",
														"nodeType": "YulTypedName",
														"src": "2884:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2894:9:10",
														"nodeType": "YulTypedName",
														"src": "2894:9:10",
														"type": ""
													}
												],
												"src": "2844:142:10"
											},
											{
												"body": {
													"nativeSrc": "3052:66:10",
													"nodeType": "YulBlock",
													"src": "3052:66:10",
													"statements": [
														{
															"nativeSrc": "3062:50:10",
															"nodeType": "YulAssignment",
															"src": "3062:50:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3106:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "3106:5:10"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "3075:30:10",
																	"nodeType": "YulIdentifier",
																	"src": "3075:30:10"
																},
																"nativeSrc": "3075:37:10",
																"nodeType": "YulFunctionCall",
																"src": "3075:37:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "3062:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "3062:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "2992:126:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3032:5:10",
														"nodeType": "YulTypedName",
														"src": "3032:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3042:9:10",
														"nodeType": "YulTypedName",
														"src": "3042:9:10",
														"type": ""
													}
												],
												"src": "2992:126:10"
											},
											{
												"body": {
													"nativeSrc": "3202:66:10",
													"nodeType": "YulBlock",
													"src": "3202:66:10",
													"statements": [
														{
															"nativeSrc": "3212:50:10",
															"nodeType": "YulAssignment",
															"src": "3212:50:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3256:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "3256:5:10"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "3225:30:10",
																	"nodeType": "YulIdentifier",
																	"src": "3225:30:10"
																},
																"nativeSrc": "3225:37:10",
																"nodeType": "YulFunctionCall",
																"src": "3225:37:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "3212:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "3212:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_ILatToken_$1410_to_t_address",
												"nativeSrc": "3124:144:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3182:5:10",
														"nodeType": "YulTypedName",
														"src": "3182:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3192:9:10",
														"nodeType": "YulTypedName",
														"src": "3192:9:10",
														"type": ""
													}
												],
												"src": "3124:144:10"
											},
											{
												"body": {
													"nativeSrc": "3357:84:10",
													"nodeType": "YulBlock",
													"src": "3357:84:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3374:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3374:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3428:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "3428:5:10"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_ILatToken_$1410_to_t_address",
																			"nativeSrc": "3379:48:10",
																			"nodeType": "YulIdentifier",
																			"src": "3379:48:10"
																		},
																		"nativeSrc": "3379:55:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3379:55:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3367:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3367:6:10"
																},
																"nativeSrc": "3367:68:10",
																"nodeType": "YulFunctionCall",
																"src": "3367:68:10"
															},
															"nativeSrc": "3367:68:10",
															"nodeType": "YulExpressionStatement",
															"src": "3367:68:10"
														}
													]
												},
												"name": "abi_encode_t_contract$_ILatToken_$1410_to_t_address_fromStack",
												"nativeSrc": "3274:167:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3345:5:10",
														"nodeType": "YulTypedName",
														"src": "3345:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3352:3:10",
														"nodeType": "YulTypedName",
														"src": "3352:3:10",
														"type": ""
													}
												],
												"src": "3274:167:10"
											},
											{
												"body": {
													"nativeSrc": "3563:142:10",
													"nodeType": "YulBlock",
													"src": "3563:142:10",
													"statements": [
														{
															"nativeSrc": "3573:26:10",
															"nodeType": "YulAssignment",
															"src": "3573:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3585:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "3585:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3596:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3596:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3581:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3581:3:10"
																},
																"nativeSrc": "3581:18:10",
																"nodeType": "YulFunctionCall",
																"src": "3581:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3573:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "3573:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3671:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3671:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3684:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3684:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3695:1:10",
																				"nodeType": "YulLiteral",
																				"src": "3695:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3680:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3680:3:10"
																		},
																		"nativeSrc": "3680:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3680:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_ILatToken_$1410_to_t_address_fromStack",
																	"nativeSrc": "3609:61:10",
																	"nodeType": "YulIdentifier",
																	"src": "3609:61:10"
																},
																"nativeSrc": "3609:89:10",
																"nodeType": "YulFunctionCall",
																"src": "3609:89:10"
															},
															"nativeSrc": "3609:89:10",
															"nodeType": "YulExpressionStatement",
															"src": "3609:89:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_ILatToken_$1410__to_t_address__fromStack_reversed",
												"nativeSrc": "3447:258:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3535:9:10",
														"nodeType": "YulTypedName",
														"src": "3535:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3547:6:10",
														"nodeType": "YulTypedName",
														"src": "3547:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3558:4:10",
														"nodeType": "YulTypedName",
														"src": "3558:4:10",
														"type": ""
													}
												],
												"src": "3447:258:10"
											},
											{
												"body": {
													"nativeSrc": "3753:48:10",
													"nodeType": "YulBlock",
													"src": "3753:48:10",
													"statements": [
														{
															"nativeSrc": "3763:32:10",
															"nodeType": "YulAssignment",
															"src": "3763:32:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3788:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "3788:5:10"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "3781:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "3781:6:10"
																		},
																		"nativeSrc": "3781:13:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3781:13:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3774:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3774:6:10"
																},
																"nativeSrc": "3774:21:10",
																"nodeType": "YulFunctionCall",
																"src": "3774:21:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3763:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "3763:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "3711:90:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3735:5:10",
														"nodeType": "YulTypedName",
														"src": "3735:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3745:7:10",
														"nodeType": "YulTypedName",
														"src": "3745:7:10",
														"type": ""
													}
												],
												"src": "3711:90:10"
											},
											{
												"body": {
													"nativeSrc": "3866:50:10",
													"nodeType": "YulBlock",
													"src": "3866:50:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3883:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3883:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3903:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "3903:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3888:14:10",
																			"nodeType": "YulIdentifier",
																			"src": "3888:14:10"
																		},
																		"nativeSrc": "3888:21:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3888:21:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3876:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3876:6:10"
																},
																"nativeSrc": "3876:34:10",
																"nodeType": "YulFunctionCall",
																"src": "3876:34:10"
															},
															"nativeSrc": "3876:34:10",
															"nodeType": "YulExpressionStatement",
															"src": "3876:34:10"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3807:109:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3854:5:10",
														"nodeType": "YulTypedName",
														"src": "3854:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3861:3:10",
														"nodeType": "YulTypedName",
														"src": "3861:3:10",
														"type": ""
													}
												],
												"src": "3807:109:10"
											},
											{
												"body": {
													"nativeSrc": "4014:118:10",
													"nodeType": "YulBlock",
													"src": "4014:118:10",
													"statements": [
														{
															"nativeSrc": "4024:26:10",
															"nodeType": "YulAssignment",
															"src": "4024:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4036:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "4036:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4047:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4047:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4032:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4032:3:10"
																},
																"nativeSrc": "4032:18:10",
																"nodeType": "YulFunctionCall",
																"src": "4032:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4024:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "4024:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4098:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "4098:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4111:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4111:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4122:1:10",
																				"nodeType": "YulLiteral",
																				"src": "4122:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4107:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4107:3:10"
																		},
																		"nativeSrc": "4107:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4107:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "4060:37:10",
																	"nodeType": "YulIdentifier",
																	"src": "4060:37:10"
																},
																"nativeSrc": "4060:65:10",
																"nodeType": "YulFunctionCall",
																"src": "4060:65:10"
															},
															"nativeSrc": "4060:65:10",
															"nodeType": "YulExpressionStatement",
															"src": "4060:65:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3922:210:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3986:9:10",
														"nodeType": "YulTypedName",
														"src": "3986:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3998:6:10",
														"nodeType": "YulTypedName",
														"src": "3998:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4009:4:10",
														"nodeType": "YulTypedName",
														"src": "4009:4:10",
														"type": ""
													}
												],
												"src": "3922:210:10"
											},
											{
												"body": {
													"nativeSrc": "4292:288:10",
													"nodeType": "YulBlock",
													"src": "4292:288:10",
													"statements": [
														{
															"nativeSrc": "4302:26:10",
															"nodeType": "YulAssignment",
															"src": "4302:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4314:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "4314:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4325:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4325:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4310:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4310:3:10"
																},
																"nativeSrc": "4310:18:10",
																"nodeType": "YulFunctionCall",
																"src": "4310:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4302:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "4302:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4382:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "4382:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4395:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4395:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4406:1:10",
																				"nodeType": "YulLiteral",
																				"src": "4406:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4391:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4391:3:10"
																		},
																		"nativeSrc": "4391:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4391:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4338:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "4338:43:10"
																},
																"nativeSrc": "4338:71:10",
																"nodeType": "YulFunctionCall",
																"src": "4338:71:10"
															},
															"nativeSrc": "4338:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "4338:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "4463:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "4463:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4476:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4476:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4487:2:10",
																				"nodeType": "YulLiteral",
																				"src": "4487:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4472:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4472:3:10"
																		},
																		"nativeSrc": "4472:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4472:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4419:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "4419:43:10"
																},
																"nativeSrc": "4419:72:10",
																"nodeType": "YulFunctionCall",
																"src": "4419:72:10"
															},
															"nativeSrc": "4419:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "4419:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "4545:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "4545:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4558:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4558:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4569:2:10",
																				"nodeType": "YulLiteral",
																				"src": "4569:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4554:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4554:3:10"
																		},
																		"nativeSrc": "4554:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4554:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4501:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "4501:43:10"
																},
																"nativeSrc": "4501:72:10",
																"nodeType": "YulFunctionCall",
																"src": "4501:72:10"
															},
															"nativeSrc": "4501:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "4501:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "4138:442:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4248:9:10",
														"nodeType": "YulTypedName",
														"src": "4248:9:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4260:6:10",
														"nodeType": "YulTypedName",
														"src": "4260:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4268:6:10",
														"nodeType": "YulTypedName",
														"src": "4268:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4276:6:10",
														"nodeType": "YulTypedName",
														"src": "4276:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4287:4:10",
														"nodeType": "YulTypedName",
														"src": "4287:4:10",
														"type": ""
													}
												],
												"src": "4138:442:10"
											},
											{
												"body": {
													"nativeSrc": "4626:76:10",
													"nodeType": "YulBlock",
													"src": "4626:76:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "4680:16:10",
																"nodeType": "YulBlock",
																"src": "4680:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4689:1:10",
																					"nodeType": "YulLiteral",
																					"src": "4689:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4692:1:10",
																					"nodeType": "YulLiteral",
																					"src": "4692:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4682:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "4682:6:10"
																			},
																			"nativeSrc": "4682:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "4682:12:10"
																		},
																		"nativeSrc": "4682:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "4682:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4649:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "4649:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4671:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "4671:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "4656:14:10",
																					"nodeType": "YulIdentifier",
																					"src": "4656:14:10"
																				},
																				"nativeSrc": "4656:21:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4656:21:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4646:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "4646:2:10"
																		},
																		"nativeSrc": "4646:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4646:32:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4639:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4639:6:10"
																},
																"nativeSrc": "4639:40:10",
																"nodeType": "YulFunctionCall",
																"src": "4639:40:10"
															},
															"nativeSrc": "4636:60:10",
															"nodeType": "YulIf",
															"src": "4636:60:10"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "4586:116:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4619:5:10",
														"nodeType": "YulTypedName",
														"src": "4619:5:10",
														"type": ""
													}
												],
												"src": "4586:116:10"
											},
											{
												"body": {
													"nativeSrc": "4757:84:10",
													"nodeType": "YulBlock",
													"src": "4757:84:10",
													"statements": [
														{
															"nativeSrc": "4767:29:10",
															"nodeType": "YulAssignment",
															"src": "4767:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4789:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "4789:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4776:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "4776:12:10"
																},
																"nativeSrc": "4776:20:10",
																"nodeType": "YulFunctionCall",
																"src": "4776:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4767:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "4767:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4829:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "4829:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "4805:23:10",
																	"nodeType": "YulIdentifier",
																	"src": "4805:23:10"
																},
																"nativeSrc": "4805:30:10",
																"nodeType": "YulFunctionCall",
																"src": "4805:30:10"
															},
															"nativeSrc": "4805:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "4805:30:10"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nativeSrc": "4708:133:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4735:6:10",
														"nodeType": "YulTypedName",
														"src": "4735:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4743:3:10",
														"nodeType": "YulTypedName",
														"src": "4743:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "4751:5:10",
														"nodeType": "YulTypedName",
														"src": "4751:5:10",
														"type": ""
													}
												],
												"src": "4708:133:10"
											},
											{
												"body": {
													"nativeSrc": "4910:260:10",
													"nodeType": "YulBlock",
													"src": "4910:260:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "4956:83:10",
																"nodeType": "YulBlock",
																"src": "4956:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4958:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "4958:77:10"
																			},
																			"nativeSrc": "4958:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "4958:79:10"
																		},
																		"nativeSrc": "4958:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "4958:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4931:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "4931:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4940:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4940:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4927:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4927:3:10"
																		},
																		"nativeSrc": "4927:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4927:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4952:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4952:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4923:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4923:3:10"
																},
																"nativeSrc": "4923:32:10",
																"nodeType": "YulFunctionCall",
																"src": "4923:32:10"
															},
															"nativeSrc": "4920:119:10",
															"nodeType": "YulIf",
															"src": "4920:119:10"
														},
														{
															"nativeSrc": "5049:114:10",
															"nodeType": "YulBlock",
															"src": "5049:114:10",
															"statements": [
																{
																	"nativeSrc": "5064:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5064:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5078:1:10",
																		"nodeType": "YulLiteral",
																		"src": "5078:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5068:6:10",
																			"nodeType": "YulTypedName",
																			"src": "5068:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5093:60:10",
																	"nodeType": "YulAssignment",
																	"src": "5093:60:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5125:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "5125:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5136:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "5136:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5121:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "5121:3:10"
																				},
																				"nativeSrc": "5121:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "5121:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5145:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "5145:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "5103:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "5103:17:10"
																		},
																		"nativeSrc": "5103:50:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5103:50:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5093:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "5093:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool",
												"nativeSrc": "4847:323:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4880:9:10",
														"nodeType": "YulTypedName",
														"src": "4880:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4891:7:10",
														"nodeType": "YulTypedName",
														"src": "4891:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4903:6:10",
														"nodeType": "YulTypedName",
														"src": "4903:6:10",
														"type": ""
													}
												],
												"src": "4847:323:10"
											},
											{
												"body": {
													"nativeSrc": "5259:391:10",
													"nodeType": "YulBlock",
													"src": "5259:391:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "5305:83:10",
																"nodeType": "YulBlock",
																"src": "5305:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5307:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "5307:77:10"
																			},
																			"nativeSrc": "5307:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "5307:79:10"
																		},
																		"nativeSrc": "5307:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "5307:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5280:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "5280:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5289:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5289:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5276:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5276:3:10"
																		},
																		"nativeSrc": "5276:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5276:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5301:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5301:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5272:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5272:3:10"
																},
																"nativeSrc": "5272:32:10",
																"nodeType": "YulFunctionCall",
																"src": "5272:32:10"
															},
															"nativeSrc": "5269:119:10",
															"nodeType": "YulIf",
															"src": "5269:119:10"
														},
														{
															"nativeSrc": "5398:117:10",
															"nodeType": "YulBlock",
															"src": "5398:117:10",
															"statements": [
																{
																	"nativeSrc": "5413:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5413:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5427:1:10",
																		"nodeType": "YulLiteral",
																		"src": "5427:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5417:6:10",
																			"nodeType": "YulTypedName",
																			"src": "5417:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5442:63:10",
																	"nodeType": "YulAssignment",
																	"src": "5442:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5477:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "5477:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5488:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "5488:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5473:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "5473:3:10"
																				},
																				"nativeSrc": "5473:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "5473:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5497:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "5497:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5452:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "5452:20:10"
																		},
																		"nativeSrc": "5452:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5452:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5442:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "5442:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5525:118:10",
															"nodeType": "YulBlock",
															"src": "5525:118:10",
															"statements": [
																{
																	"nativeSrc": "5540:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5540:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5554:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5554:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5544:6:10",
																			"nodeType": "YulTypedName",
																			"src": "5544:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5570:63:10",
																	"nodeType": "YulAssignment",
																	"src": "5570:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5605:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "5605:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5616:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "5616:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5601:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "5601:3:10"
																				},
																				"nativeSrc": "5601:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "5601:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5625:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "5625:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5580:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "5580:20:10"
																		},
																		"nativeSrc": "5580:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5580:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5570:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "5570:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "5176:474:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5221:9:10",
														"nodeType": "YulTypedName",
														"src": "5221:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5232:7:10",
														"nodeType": "YulTypedName",
														"src": "5232:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5244:6:10",
														"nodeType": "YulTypedName",
														"src": "5244:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5252:6:10",
														"nodeType": "YulTypedName",
														"src": "5252:6:10",
														"type": ""
													}
												],
												"src": "5176:474:10"
											},
											{
												"body": {
													"nativeSrc": "5721:53:10",
													"nodeType": "YulBlock",
													"src": "5721:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5738:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "5738:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5761:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "5761:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "5743:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "5743:17:10"
																		},
																		"nativeSrc": "5743:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5743:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5731:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5731:6:10"
																},
																"nativeSrc": "5731:37:10",
																"nodeType": "YulFunctionCall",
																"src": "5731:37:10"
															},
															"nativeSrc": "5731:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "5731:37:10"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "5656:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5709:5:10",
														"nodeType": "YulTypedName",
														"src": "5709:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5716:3:10",
														"nodeType": "YulTypedName",
														"src": "5716:3:10",
														"type": ""
													}
												],
												"src": "5656:118:10"
											},
											{
												"body": {
													"nativeSrc": "5878:124:10",
													"nodeType": "YulBlock",
													"src": "5878:124:10",
													"statements": [
														{
															"nativeSrc": "5888:26:10",
															"nodeType": "YulAssignment",
															"src": "5888:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5900:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "5900:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5911:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5911:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5896:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5896:3:10"
																},
																"nativeSrc": "5896:18:10",
																"nodeType": "YulFunctionCall",
																"src": "5896:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5888:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "5888:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5968:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "5968:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5981:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5981:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5992:1:10",
																				"nodeType": "YulLiteral",
																				"src": "5992:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5977:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5977:3:10"
																		},
																		"nativeSrc": "5977:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5977:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5924:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "5924:43:10"
																},
																"nativeSrc": "5924:71:10",
																"nodeType": "YulFunctionCall",
																"src": "5924:71:10"
															},
															"nativeSrc": "5924:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "5924:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "5780:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5850:9:10",
														"nodeType": "YulTypedName",
														"src": "5850:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5862:6:10",
														"nodeType": "YulTypedName",
														"src": "5862:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5873:4:10",
														"nodeType": "YulTypedName",
														"src": "5873:4:10",
														"type": ""
													}
												],
												"src": "5780:222:10"
											},
											{
												"body": {
													"nativeSrc": "6071:51:10",
													"nodeType": "YulBlock",
													"src": "6071:51:10",
													"statements": [
														{
															"nativeSrc": "6081:35:10",
															"nodeType": "YulAssignment",
															"src": "6081:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6110:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "6110:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nativeSrc": "6092:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "6092:17:10"
																},
																"nativeSrc": "6092:24:10",
																"nodeType": "YulFunctionCall",
																"src": "6092:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "6081:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "6081:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_ILatToken_$1410",
												"nativeSrc": "6008:114:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6053:5:10",
														"nodeType": "YulTypedName",
														"src": "6053:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "6063:7:10",
														"nodeType": "YulTypedName",
														"src": "6063:7:10",
														"type": ""
													}
												],
												"src": "6008:114:10"
											},
											{
												"body": {
													"nativeSrc": "6189:97:10",
													"nodeType": "YulBlock",
													"src": "6189:97:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "6264:16:10",
																"nodeType": "YulBlock",
																"src": "6264:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6273:1:10",
																					"nodeType": "YulLiteral",
																					"src": "6273:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6276:1:10",
																					"nodeType": "YulLiteral",
																					"src": "6276:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6266:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "6266:6:10"
																			},
																			"nativeSrc": "6266:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "6266:12:10"
																		},
																		"nativeSrc": "6266:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "6266:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6212:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "6212:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6255:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "6255:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_ILatToken_$1410",
																					"nativeSrc": "6219:35:10",
																					"nodeType": "YulIdentifier",
																					"src": "6219:35:10"
																				},
																				"nativeSrc": "6219:42:10",
																				"nodeType": "YulFunctionCall",
																				"src": "6219:42:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "6209:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "6209:2:10"
																		},
																		"nativeSrc": "6209:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6209:53:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6202:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6202:6:10"
																},
																"nativeSrc": "6202:61:10",
																"nodeType": "YulFunctionCall",
																"src": "6202:61:10"
															},
															"nativeSrc": "6199:81:10",
															"nodeType": "YulIf",
															"src": "6199:81:10"
														}
													]
												},
												"name": "validator_revert_t_contract$_ILatToken_$1410",
												"nativeSrc": "6128:158:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6182:5:10",
														"nodeType": "YulTypedName",
														"src": "6182:5:10",
														"type": ""
													}
												],
												"src": "6128:158:10"
											},
											{
												"body": {
													"nativeSrc": "6362:105:10",
													"nodeType": "YulBlock",
													"src": "6362:105:10",
													"statements": [
														{
															"nativeSrc": "6372:29:10",
															"nodeType": "YulAssignment",
															"src": "6372:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6394:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "6394:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6381:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "6381:12:10"
																},
																"nativeSrc": "6381:20:10",
																"nodeType": "YulFunctionCall",
																"src": "6381:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "6372:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "6372:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6455:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "6455:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_ILatToken_$1410",
																	"nativeSrc": "6410:44:10",
																	"nodeType": "YulIdentifier",
																	"src": "6410:44:10"
																},
																"nativeSrc": "6410:51:10",
																"nodeType": "YulFunctionCall",
																"src": "6410:51:10"
															},
															"nativeSrc": "6410:51:10",
															"nodeType": "YulExpressionStatement",
															"src": "6410:51:10"
														}
													]
												},
												"name": "abi_decode_t_contract$_ILatToken_$1410",
												"nativeSrc": "6292:175:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "6340:6:10",
														"nodeType": "YulTypedName",
														"src": "6340:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6348:3:10",
														"nodeType": "YulTypedName",
														"src": "6348:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "6356:5:10",
														"nodeType": "YulTypedName",
														"src": "6356:5:10",
														"type": ""
													}
												],
												"src": "6292:175:10"
											},
											{
												"body": {
													"nativeSrc": "6676:1182:10",
													"nodeType": "YulBlock",
													"src": "6676:1182:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "6723:83:10",
																"nodeType": "YulBlock",
																"src": "6723:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6725:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "6725:77:10"
																			},
																			"nativeSrc": "6725:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "6725:79:10"
																		},
																		"nativeSrc": "6725:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "6725:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6697:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "6697:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6706:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6706:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6693:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6693:3:10"
																		},
																		"nativeSrc": "6693:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6693:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6718:3:10",
																		"nodeType": "YulLiteral",
																		"src": "6718:3:10",
																		"type": "",
																		"value": "256"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6689:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6689:3:10"
																},
																"nativeSrc": "6689:33:10",
																"nodeType": "YulFunctionCall",
																"src": "6689:33:10"
															},
															"nativeSrc": "6686:120:10",
															"nodeType": "YulIf",
															"src": "6686:120:10"
														},
														{
															"nativeSrc": "6816:135:10",
															"nodeType": "YulBlock",
															"src": "6816:135:10",
															"statements": [
																{
																	"nativeSrc": "6831:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6831:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6845:1:10",
																		"nodeType": "YulLiteral",
																		"src": "6845:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6835:6:10",
																			"nodeType": "YulTypedName",
																			"src": "6835:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6860:81:10",
																	"nodeType": "YulAssignment",
																	"src": "6860:81:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6913:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "6913:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6924:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "6924:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6909:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "6909:3:10"
																				},
																				"nativeSrc": "6909:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "6909:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6933:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "6933:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_ILatToken_$1410",
																			"nativeSrc": "6870:38:10",
																			"nodeType": "YulIdentifier",
																			"src": "6870:38:10"
																		},
																		"nativeSrc": "6870:71:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6870:71:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6860:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "6860:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6961:118:10",
															"nodeType": "YulBlock",
															"src": "6961:118:10",
															"statements": [
																{
																	"nativeSrc": "6976:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6976:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6990:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6990:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6980:6:10",
																			"nodeType": "YulTypedName",
																			"src": "6980:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7006:63:10",
																	"nodeType": "YulAssignment",
																	"src": "7006:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7041:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "7041:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7052:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "7052:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7037:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "7037:3:10"
																				},
																				"nativeSrc": "7037:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "7037:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7061:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "7061:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "7016:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "7016:20:10"
																		},
																		"nativeSrc": "7016:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7016:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "7006:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "7006:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7089:118:10",
															"nodeType": "YulBlock",
															"src": "7089:118:10",
															"statements": [
																{
																	"nativeSrc": "7104:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7104:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7118:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7118:2:10",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7108:6:10",
																			"nodeType": "YulTypedName",
																			"src": "7108:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7134:63:10",
																	"nodeType": "YulAssignment",
																	"src": "7134:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7169:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "7169:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7180:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "7180:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7165:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "7165:3:10"
																				},
																				"nativeSrc": "7165:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "7165:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7189:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "7189:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "7144:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "7144:20:10"
																		},
																		"nativeSrc": "7144:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7144:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "7134:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "7134:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7217:118:10",
															"nodeType": "YulBlock",
															"src": "7217:118:10",
															"statements": [
																{
																	"nativeSrc": "7232:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7232:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7246:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7246:2:10",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7236:6:10",
																			"nodeType": "YulTypedName",
																			"src": "7236:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7262:63:10",
																	"nodeType": "YulAssignment",
																	"src": "7262:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7297:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "7297:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7308:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "7308:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7293:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "7293:3:10"
																				},
																				"nativeSrc": "7293:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "7293:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7317:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "7317:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "7272:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "7272:20:10"
																		},
																		"nativeSrc": "7272:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7272:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "7262:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "7262:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7345:119:10",
															"nodeType": "YulBlock",
															"src": "7345:119:10",
															"statements": [
																{
																	"nativeSrc": "7360:17:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7360:17:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7374:3:10",
																		"nodeType": "YulLiteral",
																		"src": "7374:3:10",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7364:6:10",
																			"nodeType": "YulTypedName",
																			"src": "7364:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7391:63:10",
																	"nodeType": "YulAssignment",
																	"src": "7391:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7426:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "7426:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7437:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "7437:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7422:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "7422:3:10"
																				},
																				"nativeSrc": "7422:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "7422:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7446:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "7446:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "7401:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "7401:20:10"
																		},
																		"nativeSrc": "7401:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7401:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "7391:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "7391:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7474:119:10",
															"nodeType": "YulBlock",
															"src": "7474:119:10",
															"statements": [
																{
																	"nativeSrc": "7489:17:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7489:17:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7503:3:10",
																		"nodeType": "YulLiteral",
																		"src": "7503:3:10",
																		"type": "",
																		"value": "160"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7493:6:10",
																			"nodeType": "YulTypedName",
																			"src": "7493:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7520:63:10",
																	"nodeType": "YulAssignment",
																	"src": "7520:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7555:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "7555:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7566:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "7566:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7551:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "7551:3:10"
																				},
																				"nativeSrc": "7551:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "7551:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7575:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "7575:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "7530:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "7530:20:10"
																		},
																		"nativeSrc": "7530:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7530:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value5",
																			"nativeSrc": "7520:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "7520:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7603:119:10",
															"nodeType": "YulBlock",
															"src": "7603:119:10",
															"statements": [
																{
																	"nativeSrc": "7618:17:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7618:17:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7632:3:10",
																		"nodeType": "YulLiteral",
																		"src": "7632:3:10",
																		"type": "",
																		"value": "192"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7622:6:10",
																			"nodeType": "YulTypedName",
																			"src": "7622:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7649:63:10",
																	"nodeType": "YulAssignment",
																	"src": "7649:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7684:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "7684:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7695:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "7695:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7680:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "7680:3:10"
																				},
																				"nativeSrc": "7680:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "7680:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7704:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "7704:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "7659:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "7659:20:10"
																		},
																		"nativeSrc": "7659:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7659:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value6",
																			"nativeSrc": "7649:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "7649:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7732:119:10",
															"nodeType": "YulBlock",
															"src": "7732:119:10",
															"statements": [
																{
																	"nativeSrc": "7747:17:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7747:17:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7761:3:10",
																		"nodeType": "YulLiteral",
																		"src": "7761:3:10",
																		"type": "",
																		"value": "224"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7751:6:10",
																			"nodeType": "YulTypedName",
																			"src": "7751:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7778:63:10",
																	"nodeType": "YulAssignment",
																	"src": "7778:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7813:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "7813:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7824:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "7824:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7809:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "7809:3:10"
																				},
																				"nativeSrc": "7809:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "7809:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7833:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "7833:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7788:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "7788:20:10"
																		},
																		"nativeSrc": "7788:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7788:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value7",
																			"nativeSrc": "7778:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "7778:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_ILatToken_$1410t_uint256t_uint256t_uint256t_uint256t_uint256t_uint256t_address",
												"nativeSrc": "6473:1385:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6590:9:10",
														"nodeType": "YulTypedName",
														"src": "6590:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6601:7:10",
														"nodeType": "YulTypedName",
														"src": "6601:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6613:6:10",
														"nodeType": "YulTypedName",
														"src": "6613:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6621:6:10",
														"nodeType": "YulTypedName",
														"src": "6621:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6629:6:10",
														"nodeType": "YulTypedName",
														"src": "6629:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "6637:6:10",
														"nodeType": "YulTypedName",
														"src": "6637:6:10",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "6645:6:10",
														"nodeType": "YulTypedName",
														"src": "6645:6:10",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "6653:6:10",
														"nodeType": "YulTypedName",
														"src": "6653:6:10",
														"type": ""
													},
													{
														"name": "value6",
														"nativeSrc": "6661:6:10",
														"nodeType": "YulTypedName",
														"src": "6661:6:10",
														"type": ""
													},
													{
														"name": "value7",
														"nativeSrc": "6669:6:10",
														"nodeType": "YulTypedName",
														"src": "6669:6:10",
														"type": ""
													}
												],
												"src": "6473:1385:10"
											},
											{
												"body": {
													"nativeSrc": "7953:28:10",
													"nodeType": "YulBlock",
													"src": "7953:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7970:1:10",
																		"nodeType": "YulLiteral",
																		"src": "7970:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7973:1:10",
																		"nodeType": "YulLiteral",
																		"src": "7973:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7963:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7963:6:10"
																},
																"nativeSrc": "7963:12:10",
																"nodeType": "YulFunctionCall",
																"src": "7963:12:10"
															},
															"nativeSrc": "7963:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "7963:12:10"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "7864:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "7864:117:10"
											},
											{
												"body": {
													"nativeSrc": "8076:28:10",
													"nodeType": "YulBlock",
													"src": "8076:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8093:1:10",
																		"nodeType": "YulLiteral",
																		"src": "8093:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8096:1:10",
																		"nodeType": "YulLiteral",
																		"src": "8096:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8086:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8086:6:10"
																},
																"nativeSrc": "8086:12:10",
																"nodeType": "YulFunctionCall",
																"src": "8086:12:10"
															},
															"nativeSrc": "8086:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "8086:12:10"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "7987:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "7987:117:10"
											},
											{
												"body": {
													"nativeSrc": "8158:54:10",
													"nodeType": "YulBlock",
													"src": "8158:54:10",
													"statements": [
														{
															"nativeSrc": "8168:38:10",
															"nodeType": "YulAssignment",
															"src": "8168:38:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8186:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "8186:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8193:2:10",
																				"nodeType": "YulLiteral",
																				"src": "8193:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8182:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8182:3:10"
																		},
																		"nativeSrc": "8182:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8182:14:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "8202:2:10",
																				"nodeType": "YulLiteral",
																				"src": "8202:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "8198:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8198:3:10"
																		},
																		"nativeSrc": "8198:7:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8198:7:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "8178:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8178:3:10"
																},
																"nativeSrc": "8178:28:10",
																"nodeType": "YulFunctionCall",
																"src": "8178:28:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "8168:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8168:6:10"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "8110:102:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8141:5:10",
														"nodeType": "YulTypedName",
														"src": "8141:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "8151:6:10",
														"nodeType": "YulTypedName",
														"src": "8151:6:10",
														"type": ""
													}
												],
												"src": "8110:102:10"
											},
											{
												"body": {
													"nativeSrc": "8246:152:10",
													"nodeType": "YulBlock",
													"src": "8246:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8263:1:10",
																		"nodeType": "YulLiteral",
																		"src": "8263:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8266:77:10",
																		"nodeType": "YulLiteral",
																		"src": "8266:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8256:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8256:6:10"
																},
																"nativeSrc": "8256:88:10",
																"nodeType": "YulFunctionCall",
																"src": "8256:88:10"
															},
															"nativeSrc": "8256:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "8256:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8360:1:10",
																		"nodeType": "YulLiteral",
																		"src": "8360:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8363:4:10",
																		"nodeType": "YulLiteral",
																		"src": "8363:4:10",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8353:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8353:6:10"
																},
																"nativeSrc": "8353:15:10",
																"nodeType": "YulFunctionCall",
																"src": "8353:15:10"
															},
															"nativeSrc": "8353:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "8353:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8384:1:10",
																		"nodeType": "YulLiteral",
																		"src": "8384:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8387:4:10",
																		"nodeType": "YulLiteral",
																		"src": "8387:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8377:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8377:6:10"
																},
																"nativeSrc": "8377:15:10",
																"nodeType": "YulFunctionCall",
																"src": "8377:15:10"
															},
															"nativeSrc": "8377:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "8377:15:10"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "8218:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "8218:180:10"
											},
											{
												"body": {
													"nativeSrc": "8447:238:10",
													"nodeType": "YulBlock",
													"src": "8447:238:10",
													"statements": [
														{
															"nativeSrc": "8457:58:10",
															"nodeType": "YulVariableDeclaration",
															"src": "8457:58:10",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "8479:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "8479:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "8509:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "8509:4:10"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "8487:21:10",
																			"nodeType": "YulIdentifier",
																			"src": "8487:21:10"
																		},
																		"nativeSrc": "8487:27:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8487:27:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8475:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8475:3:10"
																},
																"nativeSrc": "8475:40:10",
																"nodeType": "YulFunctionCall",
																"src": "8475:40:10"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "8461:10:10",
																	"nodeType": "YulTypedName",
																	"src": "8461:10:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8626:22:10",
																"nodeType": "YulBlock",
																"src": "8626:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "8628:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "8628:16:10"
																			},
																			"nativeSrc": "8628:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "8628:18:10"
																		},
																		"nativeSrc": "8628:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "8628:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "8569:10:10",
																				"nodeType": "YulIdentifier",
																				"src": "8569:10:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8581:18:10",
																				"nodeType": "YulLiteral",
																				"src": "8581:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "8566:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "8566:2:10"
																		},
																		"nativeSrc": "8566:34:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8566:34:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "8605:10:10",
																				"nodeType": "YulIdentifier",
																				"src": "8605:10:10"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "8617:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "8617:6:10"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "8602:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "8602:2:10"
																		},
																		"nativeSrc": "8602:22:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8602:22:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "8563:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "8563:2:10"
																},
																"nativeSrc": "8563:62:10",
																"nodeType": "YulFunctionCall",
																"src": "8563:62:10"
															},
															"nativeSrc": "8560:88:10",
															"nodeType": "YulIf",
															"src": "8560:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8664:2:10",
																		"nodeType": "YulLiteral",
																		"src": "8664:2:10",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "8668:10:10",
																		"nodeType": "YulIdentifier",
																		"src": "8668:10:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8657:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8657:6:10"
																},
																"nativeSrc": "8657:22:10",
																"nodeType": "YulFunctionCall",
																"src": "8657:22:10"
															},
															"nativeSrc": "8657:22:10",
															"nodeType": "YulExpressionStatement",
															"src": "8657:22:10"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "8404:281:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8433:6:10",
														"nodeType": "YulTypedName",
														"src": "8433:6:10",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "8441:4:10",
														"nodeType": "YulTypedName",
														"src": "8441:4:10",
														"type": ""
													}
												],
												"src": "8404:281:10"
											},
											{
												"body": {
													"nativeSrc": "8732:88:10",
													"nodeType": "YulBlock",
													"src": "8732:88:10",
													"statements": [
														{
															"nativeSrc": "8742:30:10",
															"nodeType": "YulAssignment",
															"src": "8742:30:10",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "8752:18:10",
																	"nodeType": "YulIdentifier",
																	"src": "8752:18:10"
																},
																"nativeSrc": "8752:20:10",
																"nodeType": "YulFunctionCall",
																"src": "8752:20:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "8742:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8742:6:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "8801:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "8801:6:10"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "8809:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "8809:4:10"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "8781:19:10",
																	"nodeType": "YulIdentifier",
																	"src": "8781:19:10"
																},
																"nativeSrc": "8781:33:10",
																"nodeType": "YulFunctionCall",
																"src": "8781:33:10"
															},
															"nativeSrc": "8781:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "8781:33:10"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "8691:129:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "8716:4:10",
														"nodeType": "YulTypedName",
														"src": "8716:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "8725:6:10",
														"nodeType": "YulTypedName",
														"src": "8725:6:10",
														"type": ""
													}
												],
												"src": "8691:129:10"
											},
											{
												"body": {
													"nativeSrc": "8892:241:10",
													"nodeType": "YulBlock",
													"src": "8892:241:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "8997:22:10",
																"nodeType": "YulBlock",
																"src": "8997:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "8999:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "8999:16:10"
																			},
																			"nativeSrc": "8999:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "8999:18:10"
																		},
																		"nativeSrc": "8999:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "8999:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "8969:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "8969:6:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8977:18:10",
																		"nodeType": "YulLiteral",
																		"src": "8977:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8966:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "8966:2:10"
																},
																"nativeSrc": "8966:30:10",
																"nodeType": "YulFunctionCall",
																"src": "8966:30:10"
															},
															"nativeSrc": "8963:56:10",
															"nodeType": "YulIf",
															"src": "8963:56:10"
														},
														{
															"nativeSrc": "9029:37:10",
															"nodeType": "YulAssignment",
															"src": "9029:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "9059:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "9059:6:10"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "9037:21:10",
																	"nodeType": "YulIdentifier",
																	"src": "9037:21:10"
																},
																"nativeSrc": "9037:29:10",
																"nodeType": "YulFunctionCall",
																"src": "9037:29:10"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "9029:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "9029:4:10"
																}
															]
														},
														{
															"nativeSrc": "9103:23:10",
															"nodeType": "YulAssignment",
															"src": "9103:23:10",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "9115:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "9115:4:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9121:4:10",
																		"nodeType": "YulLiteral",
																		"src": "9121:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9111:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9111:3:10"
																},
																"nativeSrc": "9111:15:10",
																"nodeType": "YulFunctionCall",
																"src": "9111:15:10"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "9103:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "9103:4:10"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nativeSrc": "8826:307:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "8876:6:10",
														"nodeType": "YulTypedName",
														"src": "8876:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "8887:4:10",
														"nodeType": "YulTypedName",
														"src": "8887:4:10",
														"type": ""
													}
												],
												"src": "8826:307:10"
											},
											{
												"body": {
													"nativeSrc": "9203:84:10",
													"nodeType": "YulBlock",
													"src": "9203:84:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "9227:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "9227:3:10"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "9232:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "9232:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9237:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "9237:6:10"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "9214:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "9214:12:10"
																},
																"nativeSrc": "9214:30:10",
																"nodeType": "YulFunctionCall",
																"src": "9214:30:10"
															},
															"nativeSrc": "9214:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "9214:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "9264:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "9264:3:10"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "9269:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "9269:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9260:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9260:3:10"
																		},
																		"nativeSrc": "9260:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9260:16:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9278:1:10",
																		"nodeType": "YulLiteral",
																		"src": "9278:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9253:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9253:6:10"
																},
																"nativeSrc": "9253:27:10",
																"nodeType": "YulFunctionCall",
																"src": "9253:27:10"
															},
															"nativeSrc": "9253:27:10",
															"nodeType": "YulExpressionStatement",
															"src": "9253:27:10"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "9139:148:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "9185:3:10",
														"nodeType": "YulTypedName",
														"src": "9185:3:10",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "9190:3:10",
														"nodeType": "YulTypedName",
														"src": "9190:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "9195:6:10",
														"nodeType": "YulTypedName",
														"src": "9195:6:10",
														"type": ""
													}
												],
												"src": "9139:148:10"
											},
											{
												"body": {
													"nativeSrc": "9376:340:10",
													"nodeType": "YulBlock",
													"src": "9376:340:10",
													"statements": [
														{
															"nativeSrc": "9386:74:10",
															"nodeType": "YulAssignment",
															"src": "9386:74:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "9452:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "9452:6:10"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nativeSrc": "9411:40:10",
																			"nodeType": "YulIdentifier",
																			"src": "9411:40:10"
																		},
																		"nativeSrc": "9411:48:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9411:48:10"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "9395:15:10",
																	"nodeType": "YulIdentifier",
																	"src": "9395:15:10"
																},
																"nativeSrc": "9395:65:10",
																"nodeType": "YulFunctionCall",
																"src": "9395:65:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "9386:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "9386:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "9476:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "9476:5:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9483:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "9483:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9469:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9469:6:10"
																},
																"nativeSrc": "9469:21:10",
																"nodeType": "YulFunctionCall",
																"src": "9469:21:10"
															},
															"nativeSrc": "9469:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "9469:21:10"
														},
														{
															"nativeSrc": "9499:27:10",
															"nodeType": "YulVariableDeclaration",
															"src": "9499:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "9514:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "9514:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9521:4:10",
																		"nodeType": "YulLiteral",
																		"src": "9521:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9510:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9510:3:10"
																},
																"nativeSrc": "9510:16:10",
																"nodeType": "YulFunctionCall",
																"src": "9510:16:10"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "9503:3:10",
																	"nodeType": "YulTypedName",
																	"src": "9503:3:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9564:83:10",
																"nodeType": "YulBlock",
																"src": "9564:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "9566:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "9566:77:10"
																			},
																			"nativeSrc": "9566:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "9566:79:10"
																		},
																		"nativeSrc": "9566:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "9566:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "9545:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "9545:3:10"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "9550:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "9550:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9541:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9541:3:10"
																		},
																		"nativeSrc": "9541:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9541:16:10"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "9559:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "9559:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9538:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "9538:2:10"
																},
																"nativeSrc": "9538:25:10",
																"nodeType": "YulFunctionCall",
																"src": "9538:25:10"
															},
															"nativeSrc": "9535:112:10",
															"nodeType": "YulIf",
															"src": "9535:112:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "9693:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "9693:3:10"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "9698:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "9698:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9703:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "9703:6:10"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "9656:36:10",
																	"nodeType": "YulIdentifier",
																	"src": "9656:36:10"
																},
																"nativeSrc": "9656:54:10",
																"nodeType": "YulFunctionCall",
																"src": "9656:54:10"
															},
															"nativeSrc": "9656:54:10",
															"nodeType": "YulExpressionStatement",
															"src": "9656:54:10"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nativeSrc": "9293:423:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "9349:3:10",
														"nodeType": "YulTypedName",
														"src": "9349:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "9354:6:10",
														"nodeType": "YulTypedName",
														"src": "9354:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "9362:3:10",
														"nodeType": "YulTypedName",
														"src": "9362:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "9370:5:10",
														"nodeType": "YulTypedName",
														"src": "9370:5:10",
														"type": ""
													}
												],
												"src": "9293:423:10"
											},
											{
												"body": {
													"nativeSrc": "9796:277:10",
													"nodeType": "YulBlock",
													"src": "9796:277:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "9845:83:10",
																"nodeType": "YulBlock",
																"src": "9845:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "9847:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "9847:77:10"
																			},
																			"nativeSrc": "9847:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "9847:79:10"
																		},
																		"nativeSrc": "9847:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "9847:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "9824:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "9824:6:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9832:4:10",
																						"nodeType": "YulLiteral",
																						"src": "9832:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9820:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "9820:3:10"
																				},
																				"nativeSrc": "9820:17:10",
																				"nodeType": "YulFunctionCall",
																				"src": "9820:17:10"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "9839:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "9839:3:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "9816:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9816:3:10"
																		},
																		"nativeSrc": "9816:27:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9816:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9809:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9809:6:10"
																},
																"nativeSrc": "9809:35:10",
																"nodeType": "YulFunctionCall",
																"src": "9809:35:10"
															},
															"nativeSrc": "9806:122:10",
															"nodeType": "YulIf",
															"src": "9806:122:10"
														},
														{
															"nativeSrc": "9937:34:10",
															"nodeType": "YulVariableDeclaration",
															"src": "9937:34:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "9964:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "9964:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "9951:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "9951:12:10"
																},
																"nativeSrc": "9951:20:10",
																"nodeType": "YulFunctionCall",
																"src": "9951:20:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "9941:6:10",
																	"nodeType": "YulTypedName",
																	"src": "9941:6:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "9980:87:10",
															"nodeType": "YulAssignment",
															"src": "9980:87:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "10040:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "10040:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10048:4:10",
																				"nodeType": "YulLiteral",
																				"src": "10048:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10036:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10036:3:10"
																		},
																		"nativeSrc": "10036:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10036:17:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10055:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "10055:6:10"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "10063:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "10063:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nativeSrc": "9989:46:10",
																	"nodeType": "YulIdentifier",
																	"src": "9989:46:10"
																},
																"nativeSrc": "9989:78:10",
																"nodeType": "YulFunctionCall",
																"src": "9989:78:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "9980:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "9980:5:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nativeSrc": "9735:338:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "9774:6:10",
														"nodeType": "YulTypedName",
														"src": "9774:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "9782:3:10",
														"nodeType": "YulTypedName",
														"src": "9782:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "9790:5:10",
														"nodeType": "YulTypedName",
														"src": "9790:5:10",
														"type": ""
													}
												],
												"src": "9735:338:10"
											},
											{
												"body": {
													"nativeSrc": "10171:560:10",
													"nodeType": "YulBlock",
													"src": "10171:560:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "10217:83:10",
																"nodeType": "YulBlock",
																"src": "10217:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "10219:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "10219:77:10"
																			},
																			"nativeSrc": "10219:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "10219:79:10"
																		},
																		"nativeSrc": "10219:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "10219:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10192:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "10192:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10201:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "10201:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10188:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10188:3:10"
																		},
																		"nativeSrc": "10188:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10188:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10213:2:10",
																		"nodeType": "YulLiteral",
																		"src": "10213:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "10184:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10184:3:10"
																},
																"nativeSrc": "10184:32:10",
																"nodeType": "YulFunctionCall",
																"src": "10184:32:10"
															},
															"nativeSrc": "10181:119:10",
															"nodeType": "YulIf",
															"src": "10181:119:10"
														},
														{
															"nativeSrc": "10310:117:10",
															"nodeType": "YulBlock",
															"src": "10310:117:10",
															"statements": [
																{
																	"nativeSrc": "10325:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10325:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10339:1:10",
																		"nodeType": "YulLiteral",
																		"src": "10339:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10329:6:10",
																			"nodeType": "YulTypedName",
																			"src": "10329:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10354:63:10",
																	"nodeType": "YulAssignment",
																	"src": "10354:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10389:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "10389:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10400:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "10400:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10385:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "10385:3:10"
																				},
																				"nativeSrc": "10385:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "10385:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10409:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "10409:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "10364:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "10364:20:10"
																		},
																		"nativeSrc": "10364:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10364:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "10354:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "10354:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10437:287:10",
															"nodeType": "YulBlock",
															"src": "10437:287:10",
															"statements": [
																{
																	"nativeSrc": "10452:46:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10452:46:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10483:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "10483:9:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10494:2:10",
																						"nodeType": "YulLiteral",
																						"src": "10494:2:10",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10479:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "10479:3:10"
																				},
																				"nativeSrc": "10479:18:10",
																				"nodeType": "YulFunctionCall",
																				"src": "10479:18:10"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "10466:12:10",
																			"nodeType": "YulIdentifier",
																			"src": "10466:12:10"
																		},
																		"nativeSrc": "10466:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10466:32:10"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10456:6:10",
																			"nodeType": "YulTypedName",
																			"src": "10456:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "10545:83:10",
																		"nodeType": "YulBlock",
																		"src": "10545:83:10",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "10547:77:10",
																						"nodeType": "YulIdentifier",
																						"src": "10547:77:10"
																					},
																					"nativeSrc": "10547:79:10",
																					"nodeType": "YulFunctionCall",
																					"src": "10547:79:10"
																				},
																				"nativeSrc": "10547:79:10",
																				"nodeType": "YulExpressionStatement",
																				"src": "10547:79:10"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "10517:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "10517:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10525:18:10",
																				"nodeType": "YulLiteral",
																				"src": "10525:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "10514:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "10514:2:10"
																		},
																		"nativeSrc": "10514:30:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10514:30:10"
																	},
																	"nativeSrc": "10511:117:10",
																	"nodeType": "YulIf",
																	"src": "10511:117:10"
																},
																{
																	"nativeSrc": "10642:72:10",
																	"nodeType": "YulAssignment",
																	"src": "10642:72:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10686:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "10686:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10697:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "10697:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10682:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "10682:3:10"
																				},
																				"nativeSrc": "10682:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "10682:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10706:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "10706:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nativeSrc": "10652:29:10",
																			"nodeType": "YulIdentifier",
																			"src": "10652:29:10"
																		},
																		"nativeSrc": "10652:62:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10652:62:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "10642:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "10642:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_bytes_memory_ptr",
												"nativeSrc": "10079:652:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10133:9:10",
														"nodeType": "YulTypedName",
														"src": "10133:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "10144:7:10",
														"nodeType": "YulTypedName",
														"src": "10144:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "10156:6:10",
														"nodeType": "YulTypedName",
														"src": "10156:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10164:6:10",
														"nodeType": "YulTypedName",
														"src": "10164:6:10",
														"type": ""
													}
												],
												"src": "10079:652:10"
											},
											{
												"body": {
													"nativeSrc": "10817:388:10",
													"nodeType": "YulBlock",
													"src": "10817:388:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "10863:83:10",
																"nodeType": "YulBlock",
																"src": "10863:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "10865:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "10865:77:10"
																			},
																			"nativeSrc": "10865:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "10865:79:10"
																		},
																		"nativeSrc": "10865:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "10865:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10838:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "10838:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10847:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "10847:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10834:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10834:3:10"
																		},
																		"nativeSrc": "10834:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10834:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10859:2:10",
																		"nodeType": "YulLiteral",
																		"src": "10859:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "10830:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10830:3:10"
																},
																"nativeSrc": "10830:32:10",
																"nodeType": "YulFunctionCall",
																"src": "10830:32:10"
															},
															"nativeSrc": "10827:119:10",
															"nodeType": "YulIf",
															"src": "10827:119:10"
														},
														{
															"nativeSrc": "10956:117:10",
															"nodeType": "YulBlock",
															"src": "10956:117:10",
															"statements": [
																{
																	"nativeSrc": "10971:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10971:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10985:1:10",
																		"nodeType": "YulLiteral",
																		"src": "10985:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10975:6:10",
																			"nodeType": "YulTypedName",
																			"src": "10975:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11000:63:10",
																	"nodeType": "YulAssignment",
																	"src": "11000:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11035:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "11035:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11046:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "11046:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11031:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "11031:3:10"
																				},
																				"nativeSrc": "11031:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "11031:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11055:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "11055:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "11010:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "11010:20:10"
																		},
																		"nativeSrc": "11010:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11010:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "11000:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "11000:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "11083:115:10",
															"nodeType": "YulBlock",
															"src": "11083:115:10",
															"statements": [
																{
																	"nativeSrc": "11098:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11098:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11112:2:10",
																		"nodeType": "YulLiteral",
																		"src": "11112:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11102:6:10",
																			"nodeType": "YulTypedName",
																			"src": "11102:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11128:60:10",
																	"nodeType": "YulAssignment",
																	"src": "11128:60:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11160:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "11160:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11171:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "11171:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11156:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "11156:3:10"
																				},
																				"nativeSrc": "11156:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "11156:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11180:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "11180:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "11138:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "11138:17:10"
																		},
																		"nativeSrc": "11138:50:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11138:50:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "11128:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "11128:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_bool",
												"nativeSrc": "10737:468:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10779:9:10",
														"nodeType": "YulTypedName",
														"src": "10779:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "10790:7:10",
														"nodeType": "YulTypedName",
														"src": "10790:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "10802:6:10",
														"nodeType": "YulTypedName",
														"src": "10802:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10810:6:10",
														"nodeType": "YulTypedName",
														"src": "10810:6:10",
														"type": ""
													}
												],
												"src": "10737:468:10"
											},
											{
												"body": {
													"nativeSrc": "11307:73:10",
													"nodeType": "YulBlock",
													"src": "11307:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11324:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "11324:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "11329:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "11329:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11317:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "11317:6:10"
																},
																"nativeSrc": "11317:19:10",
																"nodeType": "YulFunctionCall",
																"src": "11317:19:10"
															},
															"nativeSrc": "11317:19:10",
															"nodeType": "YulExpressionStatement",
															"src": "11317:19:10"
														},
														{
															"nativeSrc": "11345:29:10",
															"nodeType": "YulAssignment",
															"src": "11345:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11364:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "11364:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11369:4:10",
																		"nodeType": "YulLiteral",
																		"src": "11369:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11360:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11360:3:10"
																},
																"nativeSrc": "11360:14:10",
																"nodeType": "YulFunctionCall",
																"src": "11360:14:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "11345:11:10",
																	"nodeType": "YulIdentifier",
																	"src": "11345:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "11211:169:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11279:3:10",
														"nodeType": "YulTypedName",
														"src": "11279:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "11284:6:10",
														"nodeType": "YulTypedName",
														"src": "11284:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "11295:11:10",
														"nodeType": "YulTypedName",
														"src": "11295:11:10",
														"type": ""
													}
												],
												"src": "11211:169:10"
											},
											{
												"body": {
													"nativeSrc": "11492:62:10",
													"nodeType": "YulBlock",
													"src": "11492:62:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11514:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "11514:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11522:1:10",
																				"nodeType": "YulLiteral",
																				"src": "11522:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11510:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "11510:3:10"
																		},
																		"nativeSrc": "11510:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11510:14:10"
																	},
																	{
																		"hexValue": "436f6e747261637420697320706175736564",
																		"kind": "string",
																		"nativeSrc": "11526:20:10",
																		"nodeType": "YulLiteral",
																		"src": "11526:20:10",
																		"type": "",
																		"value": "Contract is paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11503:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "11503:6:10"
																},
																"nativeSrc": "11503:44:10",
																"nodeType": "YulFunctionCall",
																"src": "11503:44:10"
															},
															"nativeSrc": "11503:44:10",
															"nodeType": "YulExpressionStatement",
															"src": "11503:44:10"
														}
													]
												},
												"name": "store_literal_in_memory_e55600974a468a5baf1f1454a24481ec68f787ee02cd9f1d97c35ce2a8d2093d",
												"nativeSrc": "11386:168:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11484:6:10",
														"nodeType": "YulTypedName",
														"src": "11484:6:10",
														"type": ""
													}
												],
												"src": "11386:168:10"
											},
											{
												"body": {
													"nativeSrc": "11706:220:10",
													"nodeType": "YulBlock",
													"src": "11706:220:10",
													"statements": [
														{
															"nativeSrc": "11716:74:10",
															"nodeType": "YulAssignment",
															"src": "11716:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11782:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "11782:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11787:2:10",
																		"nodeType": "YulLiteral",
																		"src": "11787:2:10",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11723:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "11723:58:10"
																},
																"nativeSrc": "11723:67:10",
																"nodeType": "YulFunctionCall",
																"src": "11723:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11716:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11716:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11888:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "11888:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e55600974a468a5baf1f1454a24481ec68f787ee02cd9f1d97c35ce2a8d2093d",
																	"nativeSrc": "11799:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "11799:88:10"
																},
																"nativeSrc": "11799:93:10",
																"nodeType": "YulFunctionCall",
																"src": "11799:93:10"
															},
															"nativeSrc": "11799:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "11799:93:10"
														},
														{
															"nativeSrc": "11901:19:10",
															"nodeType": "YulAssignment",
															"src": "11901:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11912:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "11912:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11917:2:10",
																		"nodeType": "YulLiteral",
																		"src": "11917:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11908:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11908:3:10"
																},
																"nativeSrc": "11908:12:10",
																"nodeType": "YulFunctionCall",
																"src": "11908:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11901:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11901:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e55600974a468a5baf1f1454a24481ec68f787ee02cd9f1d97c35ce2a8d2093d_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11560:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11694:3:10",
														"nodeType": "YulTypedName",
														"src": "11694:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11702:3:10",
														"nodeType": "YulTypedName",
														"src": "11702:3:10",
														"type": ""
													}
												],
												"src": "11560:366:10"
											},
											{
												"body": {
													"nativeSrc": "12103:248:10",
													"nodeType": "YulBlock",
													"src": "12103:248:10",
													"statements": [
														{
															"nativeSrc": "12113:26:10",
															"nodeType": "YulAssignment",
															"src": "12113:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12125:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "12125:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12136:2:10",
																		"nodeType": "YulLiteral",
																		"src": "12136:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12121:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "12121:3:10"
																},
																"nativeSrc": "12121:18:10",
																"nodeType": "YulFunctionCall",
																"src": "12121:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12113:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "12113:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12160:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "12160:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12171:1:10",
																				"nodeType": "YulLiteral",
																				"src": "12171:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12156:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "12156:3:10"
																		},
																		"nativeSrc": "12156:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12156:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12179:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "12179:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12185:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "12185:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12175:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "12175:3:10"
																		},
																		"nativeSrc": "12175:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12175:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12149:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "12149:6:10"
																},
																"nativeSrc": "12149:47:10",
																"nodeType": "YulFunctionCall",
																"src": "12149:47:10"
															},
															"nativeSrc": "12149:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "12149:47:10"
														},
														{
															"nativeSrc": "12205:139:10",
															"nodeType": "YulAssignment",
															"src": "12205:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12339:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "12339:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e55600974a468a5baf1f1454a24481ec68f787ee02cd9f1d97c35ce2a8d2093d_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12213:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "12213:124:10"
																},
																"nativeSrc": "12213:131:10",
																"nodeType": "YulFunctionCall",
																"src": "12213:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12205:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "12205:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e55600974a468a5baf1f1454a24481ec68f787ee02cd9f1d97c35ce2a8d2093d__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11932:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12083:9:10",
														"nodeType": "YulTypedName",
														"src": "12083:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12098:4:10",
														"nodeType": "YulTypedName",
														"src": "12098:4:10",
														"type": ""
													}
												],
												"src": "11932:419:10"
											},
											{
												"body": {
													"nativeSrc": "12463:59:10",
													"nodeType": "YulBlock",
													"src": "12463:59:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12485:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "12485:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12493:1:10",
																				"nodeType": "YulLiteral",
																				"src": "12493:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12481:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "12481:3:10"
																		},
																		"nativeSrc": "12481:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12481:14:10"
																	},
																	{
																		"hexValue": "4e6f7420696e697469616c697a6564",
																		"kind": "string",
																		"nativeSrc": "12497:17:10",
																		"nodeType": "YulLiteral",
																		"src": "12497:17:10",
																		"type": "",
																		"value": "Not initialized"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12474:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "12474:6:10"
																},
																"nativeSrc": "12474:41:10",
																"nodeType": "YulFunctionCall",
																"src": "12474:41:10"
															},
															"nativeSrc": "12474:41:10",
															"nodeType": "YulExpressionStatement",
															"src": "12474:41:10"
														}
													]
												},
												"name": "store_literal_in_memory_6ae2314e839d4d9cfe442dd3a2386a5c83b76bbc48be45cca60d84c71c4359b2",
												"nativeSrc": "12357:165:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12455:6:10",
														"nodeType": "YulTypedName",
														"src": "12455:6:10",
														"type": ""
													}
												],
												"src": "12357:165:10"
											},
											{
												"body": {
													"nativeSrc": "12674:220:10",
													"nodeType": "YulBlock",
													"src": "12674:220:10",
													"statements": [
														{
															"nativeSrc": "12684:74:10",
															"nodeType": "YulAssignment",
															"src": "12684:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12750:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "12750:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12755:2:10",
																		"nodeType": "YulLiteral",
																		"src": "12755:2:10",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12691:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "12691:58:10"
																},
																"nativeSrc": "12691:67:10",
																"nodeType": "YulFunctionCall",
																"src": "12691:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12684:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "12684:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12856:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "12856:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_6ae2314e839d4d9cfe442dd3a2386a5c83b76bbc48be45cca60d84c71c4359b2",
																	"nativeSrc": "12767:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "12767:88:10"
																},
																"nativeSrc": "12767:93:10",
																"nodeType": "YulFunctionCall",
																"src": "12767:93:10"
															},
															"nativeSrc": "12767:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "12767:93:10"
														},
														{
															"nativeSrc": "12869:19:10",
															"nodeType": "YulAssignment",
															"src": "12869:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12880:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "12880:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12885:2:10",
																		"nodeType": "YulLiteral",
																		"src": "12885:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12876:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "12876:3:10"
																},
																"nativeSrc": "12876:12:10",
																"nodeType": "YulFunctionCall",
																"src": "12876:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12869:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "12869:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_6ae2314e839d4d9cfe442dd3a2386a5c83b76bbc48be45cca60d84c71c4359b2_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12528:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12662:3:10",
														"nodeType": "YulTypedName",
														"src": "12662:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12670:3:10",
														"nodeType": "YulTypedName",
														"src": "12670:3:10",
														"type": ""
													}
												],
												"src": "12528:366:10"
											},
											{
												"body": {
													"nativeSrc": "13071:248:10",
													"nodeType": "YulBlock",
													"src": "13071:248:10",
													"statements": [
														{
															"nativeSrc": "13081:26:10",
															"nodeType": "YulAssignment",
															"src": "13081:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13093:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "13093:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13104:2:10",
																		"nodeType": "YulLiteral",
																		"src": "13104:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13089:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13089:3:10"
																},
																"nativeSrc": "13089:18:10",
																"nodeType": "YulFunctionCall",
																"src": "13089:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13081:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "13081:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13128:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "13128:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13139:1:10",
																				"nodeType": "YulLiteral",
																				"src": "13139:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13124:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "13124:3:10"
																		},
																		"nativeSrc": "13124:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13124:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13147:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "13147:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13153:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "13153:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13143:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "13143:3:10"
																		},
																		"nativeSrc": "13143:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13143:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13117:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "13117:6:10"
																},
																"nativeSrc": "13117:47:10",
																"nodeType": "YulFunctionCall",
																"src": "13117:47:10"
															},
															"nativeSrc": "13117:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "13117:47:10"
														},
														{
															"nativeSrc": "13173:139:10",
															"nodeType": "YulAssignment",
															"src": "13173:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "13307:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "13307:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_6ae2314e839d4d9cfe442dd3a2386a5c83b76bbc48be45cca60d84c71c4359b2_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13181:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "13181:124:10"
																},
																"nativeSrc": "13181:131:10",
																"nodeType": "YulFunctionCall",
																"src": "13181:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13173:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "13173:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6ae2314e839d4d9cfe442dd3a2386a5c83b76bbc48be45cca60d84c71c4359b2__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12900:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13051:9:10",
														"nodeType": "YulTypedName",
														"src": "13051:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13066:4:10",
														"nodeType": "YulTypedName",
														"src": "13066:4:10",
														"type": ""
													}
												],
												"src": "12900:419:10"
											},
											{
												"body": {
													"nativeSrc": "13479:288:10",
													"nodeType": "YulBlock",
													"src": "13479:288:10",
													"statements": [
														{
															"nativeSrc": "13489:26:10",
															"nodeType": "YulAssignment",
															"src": "13489:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13501:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "13501:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13512:2:10",
																		"nodeType": "YulLiteral",
																		"src": "13512:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13497:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13497:3:10"
																},
																"nativeSrc": "13497:18:10",
																"nodeType": "YulFunctionCall",
																"src": "13497:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13489:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "13489:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13569:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "13569:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13582:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "13582:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13593:1:10",
																				"nodeType": "YulLiteral",
																				"src": "13593:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13578:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "13578:3:10"
																		},
																		"nativeSrc": "13578:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13578:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "13525:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "13525:43:10"
																},
																"nativeSrc": "13525:71:10",
																"nodeType": "YulFunctionCall",
																"src": "13525:71:10"
															},
															"nativeSrc": "13525:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "13525:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "13650:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "13650:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13663:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "13663:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13674:2:10",
																				"nodeType": "YulLiteral",
																				"src": "13674:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13659:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "13659:3:10"
																		},
																		"nativeSrc": "13659:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13659:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "13606:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "13606:43:10"
																},
																"nativeSrc": "13606:72:10",
																"nodeType": "YulFunctionCall",
																"src": "13606:72:10"
															},
															"nativeSrc": "13606:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "13606:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "13732:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "13732:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13745:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "13745:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13756:2:10",
																				"nodeType": "YulLiteral",
																				"src": "13756:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13741:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "13741:3:10"
																		},
																		"nativeSrc": "13741:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13741:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13688:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "13688:43:10"
																},
																"nativeSrc": "13688:72:10",
																"nodeType": "YulFunctionCall",
																"src": "13688:72:10"
															},
															"nativeSrc": "13688:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "13688:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "13325:442:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13435:9:10",
														"nodeType": "YulTypedName",
														"src": "13435:9:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "13447:6:10",
														"nodeType": "YulTypedName",
														"src": "13447:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13455:6:10",
														"nodeType": "YulTypedName",
														"src": "13455:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13463:6:10",
														"nodeType": "YulTypedName",
														"src": "13463:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13474:4:10",
														"nodeType": "YulTypedName",
														"src": "13474:4:10",
														"type": ""
													}
												],
												"src": "13325:442:10"
											},
											{
												"body": {
													"nativeSrc": "13833:77:10",
													"nodeType": "YulBlock",
													"src": "13833:77:10",
													"statements": [
														{
															"nativeSrc": "13843:22:10",
															"nodeType": "YulAssignment",
															"src": "13843:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "13858:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "13858:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "13852:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "13852:5:10"
																},
																"nativeSrc": "13852:13:10",
																"nodeType": "YulFunctionCall",
																"src": "13852:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "13843:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "13843:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "13898:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "13898:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "13874:23:10",
																	"nodeType": "YulIdentifier",
																	"src": "13874:23:10"
																},
																"nativeSrc": "13874:30:10",
																"nodeType": "YulFunctionCall",
																"src": "13874:30:10"
															},
															"nativeSrc": "13874:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "13874:30:10"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "13773:137:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "13811:6:10",
														"nodeType": "YulTypedName",
														"src": "13811:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "13819:3:10",
														"nodeType": "YulTypedName",
														"src": "13819:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "13827:5:10",
														"nodeType": "YulTypedName",
														"src": "13827:5:10",
														"type": ""
													}
												],
												"src": "13773:137:10"
											},
											{
												"body": {
													"nativeSrc": "13990:271:10",
													"nodeType": "YulBlock",
													"src": "13990:271:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "14036:83:10",
																"nodeType": "YulBlock",
																"src": "14036:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "14038:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "14038:77:10"
																			},
																			"nativeSrc": "14038:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "14038:79:10"
																		},
																		"nativeSrc": "14038:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "14038:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "14011:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "14011:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14020:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "14020:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14007:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "14007:3:10"
																		},
																		"nativeSrc": "14007:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14007:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14032:2:10",
																		"nodeType": "YulLiteral",
																		"src": "14032:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "14003:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "14003:3:10"
																},
																"nativeSrc": "14003:32:10",
																"nodeType": "YulFunctionCall",
																"src": "14003:32:10"
															},
															"nativeSrc": "14000:119:10",
															"nodeType": "YulIf",
															"src": "14000:119:10"
														},
														{
															"nativeSrc": "14129:125:10",
															"nodeType": "YulBlock",
															"src": "14129:125:10",
															"statements": [
																{
																	"nativeSrc": "14144:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "14144:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "14158:1:10",
																		"nodeType": "YulLiteral",
																		"src": "14158:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "14148:6:10",
																			"nodeType": "YulTypedName",
																			"src": "14148:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "14173:71:10",
																	"nodeType": "YulAssignment",
																	"src": "14173:71:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "14216:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "14216:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "14227:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "14227:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "14212:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "14212:3:10"
																				},
																				"nativeSrc": "14212:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "14212:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "14236:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "14236:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "14183:28:10",
																			"nodeType": "YulIdentifier",
																			"src": "14183:28:10"
																		},
																		"nativeSrc": "14183:61:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14183:61:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "14173:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "14173:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "13916:345:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13960:9:10",
														"nodeType": "YulTypedName",
														"src": "13960:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "13971:7:10",
														"nodeType": "YulTypedName",
														"src": "13971:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "13983:6:10",
														"nodeType": "YulTypedName",
														"src": "13983:6:10",
														"type": ""
													}
												],
												"src": "13916:345:10"
											},
											{
												"body": {
													"nativeSrc": "14373:59:10",
													"nodeType": "YulBlock",
													"src": "14373:59:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14395:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "14395:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14403:1:10",
																				"nodeType": "YulLiteral",
																				"src": "14403:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14391:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "14391:3:10"
																		},
																		"nativeSrc": "14391:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14391:14:10"
																	},
																	{
																		"hexValue": "5472616e73666572206661696c6564",
																		"kind": "string",
																		"nativeSrc": "14407:17:10",
																		"nodeType": "YulLiteral",
																		"src": "14407:17:10",
																		"type": "",
																		"value": "Transfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14384:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "14384:6:10"
																},
																"nativeSrc": "14384:41:10",
																"nodeType": "YulFunctionCall",
																"src": "14384:41:10"
															},
															"nativeSrc": "14384:41:10",
															"nodeType": "YulExpressionStatement",
															"src": "14384:41:10"
														}
													]
												},
												"name": "store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
												"nativeSrc": "14267:165:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "14365:6:10",
														"nodeType": "YulTypedName",
														"src": "14365:6:10",
														"type": ""
													}
												],
												"src": "14267:165:10"
											},
											{
												"body": {
													"nativeSrc": "14584:220:10",
													"nodeType": "YulBlock",
													"src": "14584:220:10",
													"statements": [
														{
															"nativeSrc": "14594:74:10",
															"nodeType": "YulAssignment",
															"src": "14594:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14660:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "14660:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14665:2:10",
																		"nodeType": "YulLiteral",
																		"src": "14665:2:10",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14601:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "14601:58:10"
																},
																"nativeSrc": "14601:67:10",
																"nodeType": "YulFunctionCall",
																"src": "14601:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14594:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "14594:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14766:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "14766:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																	"nativeSrc": "14677:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "14677:88:10"
																},
																"nativeSrc": "14677:93:10",
																"nodeType": "YulFunctionCall",
																"src": "14677:93:10"
															},
															"nativeSrc": "14677:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "14677:93:10"
														},
														{
															"nativeSrc": "14779:19:10",
															"nodeType": "YulAssignment",
															"src": "14779:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14790:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "14790:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14795:2:10",
																		"nodeType": "YulLiteral",
																		"src": "14795:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14786:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "14786:3:10"
																},
																"nativeSrc": "14786:12:10",
																"nodeType": "YulFunctionCall",
																"src": "14786:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14779:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "14779:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "14438:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14572:3:10",
														"nodeType": "YulTypedName",
														"src": "14572:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14580:3:10",
														"nodeType": "YulTypedName",
														"src": "14580:3:10",
														"type": ""
													}
												],
												"src": "14438:366:10"
											},
											{
												"body": {
													"nativeSrc": "14981:248:10",
													"nodeType": "YulBlock",
													"src": "14981:248:10",
													"statements": [
														{
															"nativeSrc": "14991:26:10",
															"nodeType": "YulAssignment",
															"src": "14991:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15003:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "15003:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15014:2:10",
																		"nodeType": "YulLiteral",
																		"src": "15014:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14999:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "14999:3:10"
																},
																"nativeSrc": "14999:18:10",
																"nodeType": "YulFunctionCall",
																"src": "14999:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14991:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "14991:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15038:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "15038:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15049:1:10",
																				"nodeType": "YulLiteral",
																				"src": "15049:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15034:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "15034:3:10"
																		},
																		"nativeSrc": "15034:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "15034:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "15057:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "15057:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15063:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "15063:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15053:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "15053:3:10"
																		},
																		"nativeSrc": "15053:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "15053:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15027:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "15027:6:10"
																},
																"nativeSrc": "15027:47:10",
																"nodeType": "YulFunctionCall",
																"src": "15027:47:10"
															},
															"nativeSrc": "15027:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "15027:47:10"
														},
														{
															"nativeSrc": "15083:139:10",
															"nodeType": "YulAssignment",
															"src": "15083:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "15217:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "15217:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15091:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "15091:124:10"
																},
																"nativeSrc": "15091:131:10",
																"nodeType": "YulFunctionCall",
																"src": "15091:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15083:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "15083:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14810:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14961:9:10",
														"nodeType": "YulTypedName",
														"src": "14961:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14976:4:10",
														"nodeType": "YulTypedName",
														"src": "14976:4:10",
														"type": ""
													}
												],
												"src": "14810:419:10"
											},
											{
												"body": {
													"nativeSrc": "15263:152:10",
													"nodeType": "YulBlock",
													"src": "15263:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15280:1:10",
																		"nodeType": "YulLiteral",
																		"src": "15280:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15283:77:10",
																		"nodeType": "YulLiteral",
																		"src": "15283:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15273:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "15273:6:10"
																},
																"nativeSrc": "15273:88:10",
																"nodeType": "YulFunctionCall",
																"src": "15273:88:10"
															},
															"nativeSrc": "15273:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "15273:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15377:1:10",
																		"nodeType": "YulLiteral",
																		"src": "15377:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15380:4:10",
																		"nodeType": "YulLiteral",
																		"src": "15380:4:10",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15370:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "15370:6:10"
																},
																"nativeSrc": "15370:15:10",
																"nodeType": "YulFunctionCall",
																"src": "15370:15:10"
															},
															"nativeSrc": "15370:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "15370:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15401:1:10",
																		"nodeType": "YulLiteral",
																		"src": "15401:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15404:4:10",
																		"nodeType": "YulLiteral",
																		"src": "15404:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "15394:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "15394:6:10"
																},
																"nativeSrc": "15394:15:10",
																"nodeType": "YulFunctionCall",
																"src": "15394:15:10"
															},
															"nativeSrc": "15394:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "15394:15:10"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "15235:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "15235:180:10"
											},
											{
												"body": {
													"nativeSrc": "15465:147:10",
													"nodeType": "YulBlock",
													"src": "15465:147:10",
													"statements": [
														{
															"nativeSrc": "15475:25:10",
															"nodeType": "YulAssignment",
															"src": "15475:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "15498:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "15498:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "15480:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "15480:17:10"
																},
																"nativeSrc": "15480:20:10",
																"nodeType": "YulFunctionCall",
																"src": "15480:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "15475:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "15475:1:10"
																}
															]
														},
														{
															"nativeSrc": "15509:25:10",
															"nodeType": "YulAssignment",
															"src": "15509:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "15532:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "15532:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "15514:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "15514:17:10"
																},
																"nativeSrc": "15514:20:10",
																"nodeType": "YulFunctionCall",
																"src": "15514:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "15509:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "15509:1:10"
																}
															]
														},
														{
															"nativeSrc": "15543:16:10",
															"nodeType": "YulAssignment",
															"src": "15543:16:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "15554:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "15554:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "15557:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "15557:1:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15550:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "15550:3:10"
																},
																"nativeSrc": "15550:9:10",
																"nodeType": "YulFunctionCall",
																"src": "15550:9:10"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "15543:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "15543:3:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "15583:22:10",
																"nodeType": "YulBlock",
																"src": "15583:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "15585:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "15585:16:10"
																			},
																			"nativeSrc": "15585:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "15585:18:10"
																		},
																		"nativeSrc": "15585:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "15585:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "15575:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "15575:1:10"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "15578:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "15578:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "15572:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "15572:2:10"
																},
																"nativeSrc": "15572:10:10",
																"nodeType": "YulFunctionCall",
																"src": "15572:10:10"
															},
															"nativeSrc": "15569:36:10",
															"nodeType": "YulIf",
															"src": "15569:36:10"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "15421:191:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "15452:1:10",
														"nodeType": "YulTypedName",
														"src": "15452:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "15455:1:10",
														"nodeType": "YulTypedName",
														"src": "15455:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "15461:3:10",
														"nodeType": "YulTypedName",
														"src": "15461:3:10",
														"type": ""
													}
												],
												"src": "15421:191:10"
											},
											{
												"body": {
													"nativeSrc": "15724:70:10",
													"nodeType": "YulBlock",
													"src": "15724:70:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15746:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "15746:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15754:1:10",
																				"nodeType": "YulLiteral",
																				"src": "15754:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15742:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "15742:3:10"
																		},
																		"nativeSrc": "15742:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "15742:14:10"
																	},
																	{
																		"hexValue": "496e73756666696369656e74207374616b656420616d6f756e74",
																		"kind": "string",
																		"nativeSrc": "15758:28:10",
																		"nodeType": "YulLiteral",
																		"src": "15758:28:10",
																		"type": "",
																		"value": "Insufficient staked amount"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15735:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "15735:6:10"
																},
																"nativeSrc": "15735:52:10",
																"nodeType": "YulFunctionCall",
																"src": "15735:52:10"
															},
															"nativeSrc": "15735:52:10",
															"nodeType": "YulExpressionStatement",
															"src": "15735:52:10"
														}
													]
												},
												"name": "store_literal_in_memory_0dd13570e20c96a9bfc56c79d1eb9235438d62a04250ac67a0d9f423a83cdc16",
												"nativeSrc": "15618:176:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "15716:6:10",
														"nodeType": "YulTypedName",
														"src": "15716:6:10",
														"type": ""
													}
												],
												"src": "15618:176:10"
											},
											{
												"body": {
													"nativeSrc": "15946:220:10",
													"nodeType": "YulBlock",
													"src": "15946:220:10",
													"statements": [
														{
															"nativeSrc": "15956:74:10",
															"nodeType": "YulAssignment",
															"src": "15956:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16022:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "16022:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16027:2:10",
																		"nodeType": "YulLiteral",
																		"src": "16027:2:10",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15963:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "15963:58:10"
																},
																"nativeSrc": "15963:67:10",
																"nodeType": "YulFunctionCall",
																"src": "15963:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15956:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "15956:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16128:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "16128:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0dd13570e20c96a9bfc56c79d1eb9235438d62a04250ac67a0d9f423a83cdc16",
																	"nativeSrc": "16039:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "16039:88:10"
																},
																"nativeSrc": "16039:93:10",
																"nodeType": "YulFunctionCall",
																"src": "16039:93:10"
															},
															"nativeSrc": "16039:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "16039:93:10"
														},
														{
															"nativeSrc": "16141:19:10",
															"nodeType": "YulAssignment",
															"src": "16141:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16152:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "16152:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16157:2:10",
																		"nodeType": "YulLiteral",
																		"src": "16157:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16148:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "16148:3:10"
																},
																"nativeSrc": "16148:12:10",
																"nodeType": "YulFunctionCall",
																"src": "16148:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16141:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "16141:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0dd13570e20c96a9bfc56c79d1eb9235438d62a04250ac67a0d9f423a83cdc16_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "15800:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15934:3:10",
														"nodeType": "YulTypedName",
														"src": "15934:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15942:3:10",
														"nodeType": "YulTypedName",
														"src": "15942:3:10",
														"type": ""
													}
												],
												"src": "15800:366:10"
											},
											{
												"body": {
													"nativeSrc": "16343:248:10",
													"nodeType": "YulBlock",
													"src": "16343:248:10",
													"statements": [
														{
															"nativeSrc": "16353:26:10",
															"nodeType": "YulAssignment",
															"src": "16353:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16365:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "16365:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16376:2:10",
																		"nodeType": "YulLiteral",
																		"src": "16376:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16361:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "16361:3:10"
																},
																"nativeSrc": "16361:18:10",
																"nodeType": "YulFunctionCall",
																"src": "16361:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16353:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "16353:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16400:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "16400:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16411:1:10",
																				"nodeType": "YulLiteral",
																				"src": "16411:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16396:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "16396:3:10"
																		},
																		"nativeSrc": "16396:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "16396:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "16419:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "16419:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16425:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "16425:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16415:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "16415:3:10"
																		},
																		"nativeSrc": "16415:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "16415:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16389:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "16389:6:10"
																},
																"nativeSrc": "16389:47:10",
																"nodeType": "YulFunctionCall",
																"src": "16389:47:10"
															},
															"nativeSrc": "16389:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "16389:47:10"
														},
														{
															"nativeSrc": "16445:139:10",
															"nodeType": "YulAssignment",
															"src": "16445:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "16579:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "16579:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0dd13570e20c96a9bfc56c79d1eb9235438d62a04250ac67a0d9f423a83cdc16_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16453:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "16453:124:10"
																},
																"nativeSrc": "16453:131:10",
																"nodeType": "YulFunctionCall",
																"src": "16453:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16445:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "16445:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0dd13570e20c96a9bfc56c79d1eb9235438d62a04250ac67a0d9f423a83cdc16__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "16172:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16323:9:10",
														"nodeType": "YulTypedName",
														"src": "16323:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16338:4:10",
														"nodeType": "YulTypedName",
														"src": "16338:4:10",
														"type": ""
													}
												],
												"src": "16172:419:10"
											},
											{
												"body": {
													"nativeSrc": "16645:362:10",
													"nodeType": "YulBlock",
													"src": "16645:362:10",
													"statements": [
														{
															"nativeSrc": "16655:25:10",
															"nodeType": "YulAssignment",
															"src": "16655:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "16678:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "16678:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "16660:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "16660:17:10"
																},
																"nativeSrc": "16660:20:10",
																"nodeType": "YulFunctionCall",
																"src": "16660:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "16655:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "16655:1:10"
																}
															]
														},
														{
															"nativeSrc": "16689:25:10",
															"nodeType": "YulAssignment",
															"src": "16689:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "16712:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "16712:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "16694:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "16694:17:10"
																},
																"nativeSrc": "16694:20:10",
																"nodeType": "YulFunctionCall",
																"src": "16694:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "16689:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "16689:1:10"
																}
															]
														},
														{
															"nativeSrc": "16723:28:10",
															"nodeType": "YulVariableDeclaration",
															"src": "16723:28:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "16746:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "16746:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "16749:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "16749:1:10"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "16742:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "16742:3:10"
																},
																"nativeSrc": "16742:9:10",
																"nodeType": "YulFunctionCall",
																"src": "16742:9:10"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "16727:11:10",
																	"nodeType": "YulTypedName",
																	"src": "16727:11:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "16760:41:10",
															"nodeType": "YulAssignment",
															"src": "16760:41:10",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "16789:11:10",
																		"nodeType": "YulIdentifier",
																		"src": "16789:11:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "16771:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "16771:17:10"
																},
																"nativeSrc": "16771:30:10",
																"nodeType": "YulFunctionCall",
																"src": "16771:30:10"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "16760:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "16760:7:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "16978:22:10",
																"nodeType": "YulBlock",
																"src": "16978:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "16980:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "16980:16:10"
																			},
																			"nativeSrc": "16980:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "16980:18:10"
																		},
																		"nativeSrc": "16980:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "16980:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "16911:1:10",
																						"nodeType": "YulIdentifier",
																						"src": "16911:1:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "16904:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "16904:6:10"
																				},
																				"nativeSrc": "16904:9:10",
																				"nodeType": "YulFunctionCall",
																				"src": "16904:9:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "16934:1:10",
																						"nodeType": "YulIdentifier",
																						"src": "16934:1:10"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "16941:7:10",
																								"nodeType": "YulIdentifier",
																								"src": "16941:7:10"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "16950:1:10",
																								"nodeType": "YulIdentifier",
																								"src": "16950:1:10"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "16937:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "16937:3:10"
																						},
																						"nativeSrc": "16937:15:10",
																						"nodeType": "YulFunctionCall",
																						"src": "16937:15:10"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "16931:2:10",
																					"nodeType": "YulIdentifier",
																					"src": "16931:2:10"
																				},
																				"nativeSrc": "16931:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "16931:22:10"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "16884:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "16884:2:10"
																		},
																		"nativeSrc": "16884:83:10",
																		"nodeType": "YulFunctionCall",
																		"src": "16884:83:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "16864:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "16864:6:10"
																},
																"nativeSrc": "16864:113:10",
																"nodeType": "YulFunctionCall",
																"src": "16864:113:10"
															},
															"nativeSrc": "16861:139:10",
															"nodeType": "YulIf",
															"src": "16861:139:10"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "16597:410:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "16628:1:10",
														"nodeType": "YulTypedName",
														"src": "16628:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "16631:1:10",
														"nodeType": "YulTypedName",
														"src": "16631:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "16637:7:10",
														"nodeType": "YulTypedName",
														"src": "16637:7:10",
														"type": ""
													}
												],
												"src": "16597:410:10"
											},
											{
												"body": {
													"nativeSrc": "17041:152:10",
													"nodeType": "YulBlock",
													"src": "17041:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17058:1:10",
																		"nodeType": "YulLiteral",
																		"src": "17058:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17061:77:10",
																		"nodeType": "YulLiteral",
																		"src": "17061:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17051:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "17051:6:10"
																},
																"nativeSrc": "17051:88:10",
																"nodeType": "YulFunctionCall",
																"src": "17051:88:10"
															},
															"nativeSrc": "17051:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "17051:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17155:1:10",
																		"nodeType": "YulLiteral",
																		"src": "17155:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17158:4:10",
																		"nodeType": "YulLiteral",
																		"src": "17158:4:10",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17148:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "17148:6:10"
																},
																"nativeSrc": "17148:15:10",
																"nodeType": "YulFunctionCall",
																"src": "17148:15:10"
															},
															"nativeSrc": "17148:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "17148:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17179:1:10",
																		"nodeType": "YulLiteral",
																		"src": "17179:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17182:4:10",
																		"nodeType": "YulLiteral",
																		"src": "17182:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "17172:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "17172:6:10"
																},
																"nativeSrc": "17172:15:10",
																"nodeType": "YulFunctionCall",
																"src": "17172:15:10"
															},
															"nativeSrc": "17172:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "17172:15:10"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "17013:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "17013:180:10"
											},
											{
												"body": {
													"nativeSrc": "17241:143:10",
													"nodeType": "YulBlock",
													"src": "17241:143:10",
													"statements": [
														{
															"nativeSrc": "17251:25:10",
															"nodeType": "YulAssignment",
															"src": "17251:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "17274:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "17274:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "17256:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "17256:17:10"
																},
																"nativeSrc": "17256:20:10",
																"nodeType": "YulFunctionCall",
																"src": "17256:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "17251:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "17251:1:10"
																}
															]
														},
														{
															"nativeSrc": "17285:25:10",
															"nodeType": "YulAssignment",
															"src": "17285:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "17308:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "17308:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "17290:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "17290:17:10"
																},
																"nativeSrc": "17290:20:10",
																"nodeType": "YulFunctionCall",
																"src": "17290:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "17285:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "17285:1:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "17332:22:10",
																"nodeType": "YulBlock",
																"src": "17332:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "17334:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "17334:16:10"
																			},
																			"nativeSrc": "17334:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "17334:18:10"
																		},
																		"nativeSrc": "17334:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "17334:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "17329:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "17329:1:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "17322:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "17322:6:10"
																},
																"nativeSrc": "17322:9:10",
																"nodeType": "YulFunctionCall",
																"src": "17322:9:10"
															},
															"nativeSrc": "17319:35:10",
															"nodeType": "YulIf",
															"src": "17319:35:10"
														},
														{
															"nativeSrc": "17364:14:10",
															"nodeType": "YulAssignment",
															"src": "17364:14:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "17373:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "17373:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "17376:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "17376:1:10"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "17369:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "17369:3:10"
																},
																"nativeSrc": "17369:9:10",
																"nodeType": "YulFunctionCall",
																"src": "17369:9:10"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "17364:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "17364:1:10"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "17199:185:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "17230:1:10",
														"nodeType": "YulTypedName",
														"src": "17230:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "17233:1:10",
														"nodeType": "YulTypedName",
														"src": "17233:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "17239:1:10",
														"nodeType": "YulTypedName",
														"src": "17239:1:10",
														"type": ""
													}
												],
												"src": "17199:185:10"
											},
											{
												"body": {
													"nativeSrc": "17435:149:10",
													"nodeType": "YulBlock",
													"src": "17435:149:10",
													"statements": [
														{
															"nativeSrc": "17445:25:10",
															"nodeType": "YulAssignment",
															"src": "17445:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "17468:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "17468:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "17450:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "17450:17:10"
																},
																"nativeSrc": "17450:20:10",
																"nodeType": "YulFunctionCall",
																"src": "17450:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "17445:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "17445:1:10"
																}
															]
														},
														{
															"nativeSrc": "17479:25:10",
															"nodeType": "YulAssignment",
															"src": "17479:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "17502:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "17502:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "17484:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "17484:17:10"
																},
																"nativeSrc": "17484:20:10",
																"nodeType": "YulFunctionCall",
																"src": "17484:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "17479:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "17479:1:10"
																}
															]
														},
														{
															"nativeSrc": "17513:17:10",
															"nodeType": "YulAssignment",
															"src": "17513:17:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "17525:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "17525:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "17528:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "17528:1:10"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "17521:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "17521:3:10"
																},
																"nativeSrc": "17521:9:10",
																"nodeType": "YulFunctionCall",
																"src": "17521:9:10"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "17513:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "17513:4:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "17555:22:10",
																"nodeType": "YulBlock",
																"src": "17555:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "17557:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "17557:16:10"
																			},
																			"nativeSrc": "17557:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "17557:18:10"
																		},
																		"nativeSrc": "17557:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "17557:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "17546:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "17546:4:10"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "17552:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "17552:1:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "17543:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "17543:2:10"
																},
																"nativeSrc": "17543:11:10",
																"nodeType": "YulFunctionCall",
																"src": "17543:11:10"
															},
															"nativeSrc": "17540:37:10",
															"nodeType": "YulIf",
															"src": "17540:37:10"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "17390:194:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "17421:1:10",
														"nodeType": "YulTypedName",
														"src": "17421:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "17424:1:10",
														"nodeType": "YulTypedName",
														"src": "17424:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "17430:4:10",
														"nodeType": "YulTypedName",
														"src": "17430:4:10",
														"type": ""
													}
												],
												"src": "17390:194:10"
											},
											{
												"body": {
													"nativeSrc": "17716:206:10",
													"nodeType": "YulBlock",
													"src": "17716:206:10",
													"statements": [
														{
															"nativeSrc": "17726:26:10",
															"nodeType": "YulAssignment",
															"src": "17726:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17738:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "17738:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17749:2:10",
																		"nodeType": "YulLiteral",
																		"src": "17749:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17734:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "17734:3:10"
																},
																"nativeSrc": "17734:18:10",
																"nodeType": "YulFunctionCall",
																"src": "17734:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17726:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "17726:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "17806:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "17806:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17819:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "17819:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17830:1:10",
																				"nodeType": "YulLiteral",
																				"src": "17830:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17815:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "17815:3:10"
																		},
																		"nativeSrc": "17815:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "17815:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "17762:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "17762:43:10"
																},
																"nativeSrc": "17762:71:10",
																"nodeType": "YulFunctionCall",
																"src": "17762:71:10"
															},
															"nativeSrc": "17762:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "17762:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "17887:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "17887:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17900:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "17900:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17911:2:10",
																				"nodeType": "YulLiteral",
																				"src": "17911:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17896:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "17896:3:10"
																		},
																		"nativeSrc": "17896:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "17896:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "17843:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "17843:43:10"
																},
																"nativeSrc": "17843:72:10",
																"nodeType": "YulFunctionCall",
																"src": "17843:72:10"
															},
															"nativeSrc": "17843:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "17843:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "17590:332:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17680:9:10",
														"nodeType": "YulTypedName",
														"src": "17680:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "17692:6:10",
														"nodeType": "YulTypedName",
														"src": "17692:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "17700:6:10",
														"nodeType": "YulTypedName",
														"src": "17700:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17711:4:10",
														"nodeType": "YulTypedName",
														"src": "17711:4:10",
														"type": ""
													}
												],
												"src": "17590:332:10"
											},
											{
												"body": {
													"nativeSrc": "18054:206:10",
													"nodeType": "YulBlock",
													"src": "18054:206:10",
													"statements": [
														{
															"nativeSrc": "18064:26:10",
															"nodeType": "YulAssignment",
															"src": "18064:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18076:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "18076:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18087:2:10",
																		"nodeType": "YulLiteral",
																		"src": "18087:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18072:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "18072:3:10"
																},
																"nativeSrc": "18072:18:10",
																"nodeType": "YulFunctionCall",
																"src": "18072:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18064:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "18064:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "18144:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "18144:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18157:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "18157:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18168:1:10",
																				"nodeType": "YulLiteral",
																				"src": "18168:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18153:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "18153:3:10"
																		},
																		"nativeSrc": "18153:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "18153:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "18100:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "18100:43:10"
																},
																"nativeSrc": "18100:71:10",
																"nodeType": "YulFunctionCall",
																"src": "18100:71:10"
															},
															"nativeSrc": "18100:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "18100:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "18225:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "18225:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18238:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "18238:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18249:2:10",
																				"nodeType": "YulLiteral",
																				"src": "18249:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18234:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "18234:3:10"
																		},
																		"nativeSrc": "18234:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "18234:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "18181:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "18181:43:10"
																},
																"nativeSrc": "18181:72:10",
																"nodeType": "YulFunctionCall",
																"src": "18181:72:10"
															},
															"nativeSrc": "18181:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "18181:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "17928:332:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18018:9:10",
														"nodeType": "YulTypedName",
														"src": "18018:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "18030:6:10",
														"nodeType": "YulTypedName",
														"src": "18030:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "18038:6:10",
														"nodeType": "YulTypedName",
														"src": "18038:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18049:4:10",
														"nodeType": "YulTypedName",
														"src": "18049:4:10",
														"type": ""
													}
												],
												"src": "17928:332:10"
											},
											{
												"body": {
													"nativeSrc": "18372:63:10",
													"nodeType": "YulBlock",
													"src": "18372:63:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "18394:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "18394:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18402:1:10",
																				"nodeType": "YulLiteral",
																				"src": "18402:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18390:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "18390:3:10"
																		},
																		"nativeSrc": "18390:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "18390:14:10"
																	},
																	{
																		"hexValue": "416c726561647920696e697469616c697a6564",
																		"kind": "string",
																		"nativeSrc": "18406:21:10",
																		"nodeType": "YulLiteral",
																		"src": "18406:21:10",
																		"type": "",
																		"value": "Already initialized"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18383:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "18383:6:10"
																},
																"nativeSrc": "18383:45:10",
																"nodeType": "YulFunctionCall",
																"src": "18383:45:10"
															},
															"nativeSrc": "18383:45:10",
															"nodeType": "YulExpressionStatement",
															"src": "18383:45:10"
														}
													]
												},
												"name": "store_literal_in_memory_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0",
												"nativeSrc": "18266:169:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "18364:6:10",
														"nodeType": "YulTypedName",
														"src": "18364:6:10",
														"type": ""
													}
												],
												"src": "18266:169:10"
											},
											{
												"body": {
													"nativeSrc": "18587:220:10",
													"nodeType": "YulBlock",
													"src": "18587:220:10",
													"statements": [
														{
															"nativeSrc": "18597:74:10",
															"nodeType": "YulAssignment",
															"src": "18597:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18663:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "18663:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18668:2:10",
																		"nodeType": "YulLiteral",
																		"src": "18668:2:10",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18604:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "18604:58:10"
																},
																"nativeSrc": "18604:67:10",
																"nodeType": "YulFunctionCall",
																"src": "18604:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "18597:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "18597:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18769:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "18769:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0",
																	"nativeSrc": "18680:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "18680:88:10"
																},
																"nativeSrc": "18680:93:10",
																"nodeType": "YulFunctionCall",
																"src": "18680:93:10"
															},
															"nativeSrc": "18680:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "18680:93:10"
														},
														{
															"nativeSrc": "18782:19:10",
															"nodeType": "YulAssignment",
															"src": "18782:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18793:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "18793:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18798:2:10",
																		"nodeType": "YulLiteral",
																		"src": "18798:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18789:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "18789:3:10"
																},
																"nativeSrc": "18789:12:10",
																"nodeType": "YulFunctionCall",
																"src": "18789:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "18782:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "18782:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "18441:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "18575:3:10",
														"nodeType": "YulTypedName",
														"src": "18575:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "18583:3:10",
														"nodeType": "YulTypedName",
														"src": "18583:3:10",
														"type": ""
													}
												],
												"src": "18441:366:10"
											},
											{
												"body": {
													"nativeSrc": "18984:248:10",
													"nodeType": "YulBlock",
													"src": "18984:248:10",
													"statements": [
														{
															"nativeSrc": "18994:26:10",
															"nodeType": "YulAssignment",
															"src": "18994:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19006:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "19006:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19017:2:10",
																		"nodeType": "YulLiteral",
																		"src": "19017:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19002:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "19002:3:10"
																},
																"nativeSrc": "19002:18:10",
																"nodeType": "YulFunctionCall",
																"src": "19002:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18994:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "18994:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19041:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "19041:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19052:1:10",
																				"nodeType": "YulLiteral",
																				"src": "19052:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19037:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "19037:3:10"
																		},
																		"nativeSrc": "19037:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "19037:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "19060:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "19060:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "19066:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "19066:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "19056:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "19056:3:10"
																		},
																		"nativeSrc": "19056:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "19056:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19030:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "19030:6:10"
																},
																"nativeSrc": "19030:47:10",
																"nodeType": "YulFunctionCall",
																"src": "19030:47:10"
															},
															"nativeSrc": "19030:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "19030:47:10"
														},
														{
															"nativeSrc": "19086:139:10",
															"nodeType": "YulAssignment",
															"src": "19086:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "19220:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "19220:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19094:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "19094:124:10"
																},
																"nativeSrc": "19094:131:10",
																"nodeType": "YulFunctionCall",
																"src": "19094:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19086:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "19086:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "18813:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18964:9:10",
														"nodeType": "YulTypedName",
														"src": "18964:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18979:4:10",
														"nodeType": "YulTypedName",
														"src": "18979:4:10",
														"type": ""
													}
												],
												"src": "18813:419:10"
											},
											{
												"body": {
													"nativeSrc": "19344:57:10",
													"nodeType": "YulBlock",
													"src": "19344:57:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "19366:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "19366:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19374:1:10",
																				"nodeType": "YulLiteral",
																				"src": "19374:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19362:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "19362:3:10"
																		},
																		"nativeSrc": "19362:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "19362:14:10"
																	},
																	{
																		"hexValue": "496e76616c6964206e6f6e6365",
																		"kind": "string",
																		"nativeSrc": "19378:15:10",
																		"nodeType": "YulLiteral",
																		"src": "19378:15:10",
																		"type": "",
																		"value": "Invalid nonce"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19355:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "19355:6:10"
																},
																"nativeSrc": "19355:39:10",
																"nodeType": "YulFunctionCall",
																"src": "19355:39:10"
															},
															"nativeSrc": "19355:39:10",
															"nodeType": "YulExpressionStatement",
															"src": "19355:39:10"
														}
													]
												},
												"name": "store_literal_in_memory_19a9c5fdfc984667e300523283171e2aca8bb9e593f19eef41052fcdbfdb1568",
												"nativeSrc": "19238:163:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "19336:6:10",
														"nodeType": "YulTypedName",
														"src": "19336:6:10",
														"type": ""
													}
												],
												"src": "19238:163:10"
											},
											{
												"body": {
													"nativeSrc": "19553:220:10",
													"nodeType": "YulBlock",
													"src": "19553:220:10",
													"statements": [
														{
															"nativeSrc": "19563:74:10",
															"nodeType": "YulAssignment",
															"src": "19563:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19629:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "19629:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19634:2:10",
																		"nodeType": "YulLiteral",
																		"src": "19634:2:10",
																		"type": "",
																		"value": "13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19570:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "19570:58:10"
																},
																"nativeSrc": "19570:67:10",
																"nodeType": "YulFunctionCall",
																"src": "19570:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "19563:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "19563:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19735:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "19735:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_19a9c5fdfc984667e300523283171e2aca8bb9e593f19eef41052fcdbfdb1568",
																	"nativeSrc": "19646:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "19646:88:10"
																},
																"nativeSrc": "19646:93:10",
																"nodeType": "YulFunctionCall",
																"src": "19646:93:10"
															},
															"nativeSrc": "19646:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "19646:93:10"
														},
														{
															"nativeSrc": "19748:19:10",
															"nodeType": "YulAssignment",
															"src": "19748:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19759:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "19759:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19764:2:10",
																		"nodeType": "YulLiteral",
																		"src": "19764:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19755:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "19755:3:10"
																},
																"nativeSrc": "19755:12:10",
																"nodeType": "YulFunctionCall",
																"src": "19755:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "19748:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "19748:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_19a9c5fdfc984667e300523283171e2aca8bb9e593f19eef41052fcdbfdb1568_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "19407:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "19541:3:10",
														"nodeType": "YulTypedName",
														"src": "19541:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "19549:3:10",
														"nodeType": "YulTypedName",
														"src": "19549:3:10",
														"type": ""
													}
												],
												"src": "19407:366:10"
											},
											{
												"body": {
													"nativeSrc": "19950:248:10",
													"nodeType": "YulBlock",
													"src": "19950:248:10",
													"statements": [
														{
															"nativeSrc": "19960:26:10",
															"nodeType": "YulAssignment",
															"src": "19960:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19972:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "19972:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19983:2:10",
																		"nodeType": "YulLiteral",
																		"src": "19983:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19968:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "19968:3:10"
																},
																"nativeSrc": "19968:18:10",
																"nodeType": "YulFunctionCall",
																"src": "19968:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19960:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "19960:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20007:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "20007:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20018:1:10",
																				"nodeType": "YulLiteral",
																				"src": "20018:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20003:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "20003:3:10"
																		},
																		"nativeSrc": "20003:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "20003:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "20026:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "20026:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "20032:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "20032:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "20022:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "20022:3:10"
																		},
																		"nativeSrc": "20022:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "20022:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19996:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "19996:6:10"
																},
																"nativeSrc": "19996:47:10",
																"nodeType": "YulFunctionCall",
																"src": "19996:47:10"
															},
															"nativeSrc": "19996:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "19996:47:10"
														},
														{
															"nativeSrc": "20052:139:10",
															"nodeType": "YulAssignment",
															"src": "20052:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "20186:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "20186:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_19a9c5fdfc984667e300523283171e2aca8bb9e593f19eef41052fcdbfdb1568_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20060:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "20060:124:10"
																},
																"nativeSrc": "20060:131:10",
																"nodeType": "YulFunctionCall",
																"src": "20060:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20052:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "20052:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_19a9c5fdfc984667e300523283171e2aca8bb9e593f19eef41052fcdbfdb1568__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "19779:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19930:9:10",
														"nodeType": "YulTypedName",
														"src": "19930:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19945:4:10",
														"nodeType": "YulTypedName",
														"src": "19945:4:10",
														"type": ""
													}
												],
												"src": "19779:419:10"
											},
											{
												"body": {
													"nativeSrc": "20247:190:10",
													"nodeType": "YulBlock",
													"src": "20247:190:10",
													"statements": [
														{
															"nativeSrc": "20257:33:10",
															"nodeType": "YulAssignment",
															"src": "20257:33:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "20284:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "20284:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "20266:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "20266:17:10"
																},
																"nativeSrc": "20266:24:10",
																"nodeType": "YulFunctionCall",
																"src": "20266:24:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "20257:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "20257:5:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "20380:22:10",
																"nodeType": "YulBlock",
																"src": "20380:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "20382:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "20382:16:10"
																			},
																			"nativeSrc": "20382:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "20382:18:10"
																		},
																		"nativeSrc": "20382:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "20382:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "20305:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "20305:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20312:66:10",
																		"nodeType": "YulLiteral",
																		"src": "20312:66:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "20302:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "20302:2:10"
																},
																"nativeSrc": "20302:77:10",
																"nodeType": "YulFunctionCall",
																"src": "20302:77:10"
															},
															"nativeSrc": "20299:103:10",
															"nodeType": "YulIf",
															"src": "20299:103:10"
														},
														{
															"nativeSrc": "20411:20:10",
															"nodeType": "YulAssignment",
															"src": "20411:20:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "20422:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "20422:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20429:1:10",
																		"nodeType": "YulLiteral",
																		"src": "20429:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20418:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "20418:3:10"
																},
																"nativeSrc": "20418:13:10",
																"nodeType": "YulFunctionCall",
																"src": "20418:13:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "20411:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "20411:3:10"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nativeSrc": "20204:233:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "20233:5:10",
														"nodeType": "YulTypedName",
														"src": "20233:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "20243:3:10",
														"nodeType": "YulTypedName",
														"src": "20243:3:10",
														"type": ""
													}
												],
												"src": "20204:233:10"
											},
											{
												"body": {
													"nativeSrc": "20549:58:10",
													"nodeType": "YulBlock",
													"src": "20549:58:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "20571:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "20571:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20579:1:10",
																				"nodeType": "YulLiteral",
																				"src": "20579:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20567:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "20567:3:10"
																		},
																		"nativeSrc": "20567:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "20567:14:10"
																	},
																	{
																		"hexValue": "4e6f207374616b6520666f756e64",
																		"kind": "string",
																		"nativeSrc": "20583:16:10",
																		"nodeType": "YulLiteral",
																		"src": "20583:16:10",
																		"type": "",
																		"value": "No stake found"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20560:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "20560:6:10"
																},
																"nativeSrc": "20560:40:10",
																"nodeType": "YulFunctionCall",
																"src": "20560:40:10"
															},
															"nativeSrc": "20560:40:10",
															"nodeType": "YulExpressionStatement",
															"src": "20560:40:10"
														}
													]
												},
												"name": "store_literal_in_memory_8495ddd36ba9b32a0cb09aa87f940a1af6e06f502729a7774df9db0ac3d8e45a",
												"nativeSrc": "20443:164:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "20541:6:10",
														"nodeType": "YulTypedName",
														"src": "20541:6:10",
														"type": ""
													}
												],
												"src": "20443:164:10"
											},
											{
												"body": {
													"nativeSrc": "20759:220:10",
													"nodeType": "YulBlock",
													"src": "20759:220:10",
													"statements": [
														{
															"nativeSrc": "20769:74:10",
															"nodeType": "YulAssignment",
															"src": "20769:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20835:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "20835:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20840:2:10",
																		"nodeType": "YulLiteral",
																		"src": "20840:2:10",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20776:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "20776:58:10"
																},
																"nativeSrc": "20776:67:10",
																"nodeType": "YulFunctionCall",
																"src": "20776:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "20769:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "20769:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20941:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "20941:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_8495ddd36ba9b32a0cb09aa87f940a1af6e06f502729a7774df9db0ac3d8e45a",
																	"nativeSrc": "20852:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "20852:88:10"
																},
																"nativeSrc": "20852:93:10",
																"nodeType": "YulFunctionCall",
																"src": "20852:93:10"
															},
															"nativeSrc": "20852:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "20852:93:10"
														},
														{
															"nativeSrc": "20954:19:10",
															"nodeType": "YulAssignment",
															"src": "20954:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20965:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "20965:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20970:2:10",
																		"nodeType": "YulLiteral",
																		"src": "20970:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20961:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "20961:3:10"
																},
																"nativeSrc": "20961:12:10",
																"nodeType": "YulFunctionCall",
																"src": "20961:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "20954:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "20954:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_8495ddd36ba9b32a0cb09aa87f940a1af6e06f502729a7774df9db0ac3d8e45a_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "20613:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "20747:3:10",
														"nodeType": "YulTypedName",
														"src": "20747:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "20755:3:10",
														"nodeType": "YulTypedName",
														"src": "20755:3:10",
														"type": ""
													}
												],
												"src": "20613:366:10"
											},
											{
												"body": {
													"nativeSrc": "21156:248:10",
													"nodeType": "YulBlock",
													"src": "21156:248:10",
													"statements": [
														{
															"nativeSrc": "21166:26:10",
															"nodeType": "YulAssignment",
															"src": "21166:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "21178:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "21178:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21189:2:10",
																		"nodeType": "YulLiteral",
																		"src": "21189:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21174:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "21174:3:10"
																},
																"nativeSrc": "21174:18:10",
																"nodeType": "YulFunctionCall",
																"src": "21174:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21166:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "21166:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21213:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "21213:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21224:1:10",
																				"nodeType": "YulLiteral",
																				"src": "21224:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21209:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "21209:3:10"
																		},
																		"nativeSrc": "21209:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "21209:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "21232:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "21232:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "21238:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "21238:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "21228:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "21228:3:10"
																		},
																		"nativeSrc": "21228:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "21228:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21202:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "21202:6:10"
																},
																"nativeSrc": "21202:47:10",
																"nodeType": "YulFunctionCall",
																"src": "21202:47:10"
															},
															"nativeSrc": "21202:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "21202:47:10"
														},
														{
															"nativeSrc": "21258:139:10",
															"nodeType": "YulAssignment",
															"src": "21258:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "21392:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "21392:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_8495ddd36ba9b32a0cb09aa87f940a1af6e06f502729a7774df9db0ac3d8e45a_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "21266:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "21266:124:10"
																},
																"nativeSrc": "21266:131:10",
																"nodeType": "YulFunctionCall",
																"src": "21266:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21258:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "21258:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8495ddd36ba9b32a0cb09aa87f940a1af6e06f502729a7774df9db0ac3d8e45a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "20985:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "21136:9:10",
														"nodeType": "YulTypedName",
														"src": "21136:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "21151:4:10",
														"nodeType": "YulTypedName",
														"src": "21151:4:10",
														"type": ""
													}
												],
												"src": "20985:419:10"
											},
											{
												"body": {
													"nativeSrc": "21516:59:10",
													"nodeType": "YulBlock",
													"src": "21516:59:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "21538:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "21538:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21546:1:10",
																				"nodeType": "YulLiteral",
																				"src": "21546:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21534:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "21534:3:10"
																		},
																		"nativeSrc": "21534:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "21534:14:10"
																	},
																	{
																		"hexValue": "4e6f2074696d6520656c6170736564",
																		"kind": "string",
																		"nativeSrc": "21550:17:10",
																		"nodeType": "YulLiteral",
																		"src": "21550:17:10",
																		"type": "",
																		"value": "No time elapsed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21527:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "21527:6:10"
																},
																"nativeSrc": "21527:41:10",
																"nodeType": "YulFunctionCall",
																"src": "21527:41:10"
															},
															"nativeSrc": "21527:41:10",
															"nodeType": "YulExpressionStatement",
															"src": "21527:41:10"
														}
													]
												},
												"name": "store_literal_in_memory_3b595757d501f3a780236362fb65cac1873bab94376c90d08bc706e4116d8674",
												"nativeSrc": "21410:165:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "21508:6:10",
														"nodeType": "YulTypedName",
														"src": "21508:6:10",
														"type": ""
													}
												],
												"src": "21410:165:10"
											},
											{
												"body": {
													"nativeSrc": "21727:220:10",
													"nodeType": "YulBlock",
													"src": "21727:220:10",
													"statements": [
														{
															"nativeSrc": "21737:74:10",
															"nodeType": "YulAssignment",
															"src": "21737:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21803:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "21803:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21808:2:10",
																		"nodeType": "YulLiteral",
																		"src": "21808:2:10",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "21744:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "21744:58:10"
																},
																"nativeSrc": "21744:67:10",
																"nodeType": "YulFunctionCall",
																"src": "21744:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "21737:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "21737:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21909:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "21909:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_3b595757d501f3a780236362fb65cac1873bab94376c90d08bc706e4116d8674",
																	"nativeSrc": "21820:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "21820:88:10"
																},
																"nativeSrc": "21820:93:10",
																"nodeType": "YulFunctionCall",
																"src": "21820:93:10"
															},
															"nativeSrc": "21820:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "21820:93:10"
														},
														{
															"nativeSrc": "21922:19:10",
															"nodeType": "YulAssignment",
															"src": "21922:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21933:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "21933:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21938:2:10",
																		"nodeType": "YulLiteral",
																		"src": "21938:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21929:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "21929:3:10"
																},
																"nativeSrc": "21929:12:10",
																"nodeType": "YulFunctionCall",
																"src": "21929:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "21922:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "21922:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_3b595757d501f3a780236362fb65cac1873bab94376c90d08bc706e4116d8674_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "21581:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "21715:3:10",
														"nodeType": "YulTypedName",
														"src": "21715:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "21723:3:10",
														"nodeType": "YulTypedName",
														"src": "21723:3:10",
														"type": ""
													}
												],
												"src": "21581:366:10"
											},
											{
												"body": {
													"nativeSrc": "22124:248:10",
													"nodeType": "YulBlock",
													"src": "22124:248:10",
													"statements": [
														{
															"nativeSrc": "22134:26:10",
															"nodeType": "YulAssignment",
															"src": "22134:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "22146:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "22146:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22157:2:10",
																		"nodeType": "YulLiteral",
																		"src": "22157:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22142:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "22142:3:10"
																},
																"nativeSrc": "22142:18:10",
																"nodeType": "YulFunctionCall",
																"src": "22142:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22134:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "22134:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22181:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "22181:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22192:1:10",
																				"nodeType": "YulLiteral",
																				"src": "22192:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22177:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "22177:3:10"
																		},
																		"nativeSrc": "22177:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "22177:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "22200:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "22200:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "22206:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "22206:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "22196:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "22196:3:10"
																		},
																		"nativeSrc": "22196:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "22196:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22170:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "22170:6:10"
																},
																"nativeSrc": "22170:47:10",
																"nodeType": "YulFunctionCall",
																"src": "22170:47:10"
															},
															"nativeSrc": "22170:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "22170:47:10"
														},
														{
															"nativeSrc": "22226:139:10",
															"nodeType": "YulAssignment",
															"src": "22226:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "22360:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "22360:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_3b595757d501f3a780236362fb65cac1873bab94376c90d08bc706e4116d8674_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "22234:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "22234:124:10"
																},
																"nativeSrc": "22234:131:10",
																"nodeType": "YulFunctionCall",
																"src": "22234:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22226:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "22226:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3b595757d501f3a780236362fb65cac1873bab94376c90d08bc706e4116d8674__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "21953:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "22104:9:10",
														"nodeType": "YulTypedName",
														"src": "22104:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "22119:4:10",
														"nodeType": "YulTypedName",
														"src": "22119:4:10",
														"type": ""
													}
												],
												"src": "21953:419:10"
											},
											{
												"body": {
													"nativeSrc": "22484:61:10",
													"nodeType": "YulBlock",
													"src": "22484:61:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "22506:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "22506:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22514:1:10",
																				"nodeType": "YulLiteral",
																				"src": "22514:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22502:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "22502:3:10"
																		},
																		"nativeSrc": "22502:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "22502:14:10"
																	},
																	{
																		"hexValue": "496e76616c6964207369676e6174757265",
																		"kind": "string",
																		"nativeSrc": "22518:19:10",
																		"nodeType": "YulLiteral",
																		"src": "22518:19:10",
																		"type": "",
																		"value": "Invalid signature"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22495:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "22495:6:10"
																},
																"nativeSrc": "22495:43:10",
																"nodeType": "YulFunctionCall",
																"src": "22495:43:10"
															},
															"nativeSrc": "22495:43:10",
															"nodeType": "YulExpressionStatement",
															"src": "22495:43:10"
														}
													]
												},
												"name": "store_literal_in_memory_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7",
												"nativeSrc": "22378:167:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "22476:6:10",
														"nodeType": "YulTypedName",
														"src": "22476:6:10",
														"type": ""
													}
												],
												"src": "22378:167:10"
											},
											{
												"body": {
													"nativeSrc": "22697:220:10",
													"nodeType": "YulBlock",
													"src": "22697:220:10",
													"statements": [
														{
															"nativeSrc": "22707:74:10",
															"nodeType": "YulAssignment",
															"src": "22707:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22773:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "22773:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22778:2:10",
																		"nodeType": "YulLiteral",
																		"src": "22778:2:10",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "22714:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "22714:58:10"
																},
																"nativeSrc": "22714:67:10",
																"nodeType": "YulFunctionCall",
																"src": "22714:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "22707:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "22707:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22879:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "22879:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7",
																	"nativeSrc": "22790:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "22790:88:10"
																},
																"nativeSrc": "22790:93:10",
																"nodeType": "YulFunctionCall",
																"src": "22790:93:10"
															},
															"nativeSrc": "22790:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "22790:93:10"
														},
														{
															"nativeSrc": "22892:19:10",
															"nodeType": "YulAssignment",
															"src": "22892:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22903:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "22903:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22908:2:10",
																		"nodeType": "YulLiteral",
																		"src": "22908:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22899:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "22899:3:10"
																},
																"nativeSrc": "22899:12:10",
																"nodeType": "YulFunctionCall",
																"src": "22899:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "22892:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "22892:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "22551:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "22685:3:10",
														"nodeType": "YulTypedName",
														"src": "22685:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "22693:3:10",
														"nodeType": "YulTypedName",
														"src": "22693:3:10",
														"type": ""
													}
												],
												"src": "22551:366:10"
											},
											{
												"body": {
													"nativeSrc": "23094:248:10",
													"nodeType": "YulBlock",
													"src": "23094:248:10",
													"statements": [
														{
															"nativeSrc": "23104:26:10",
															"nodeType": "YulAssignment",
															"src": "23104:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "23116:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "23116:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23127:2:10",
																		"nodeType": "YulLiteral",
																		"src": "23127:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "23112:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "23112:3:10"
																},
																"nativeSrc": "23112:18:10",
																"nodeType": "YulFunctionCall",
																"src": "23112:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "23104:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "23104:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23151:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "23151:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23162:1:10",
																				"nodeType": "YulLiteral",
																				"src": "23162:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23147:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "23147:3:10"
																		},
																		"nativeSrc": "23147:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "23147:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "23170:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "23170:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "23176:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "23176:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "23166:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "23166:3:10"
																		},
																		"nativeSrc": "23166:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "23166:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23140:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "23140:6:10"
																},
																"nativeSrc": "23140:47:10",
																"nodeType": "YulFunctionCall",
																"src": "23140:47:10"
															},
															"nativeSrc": "23140:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "23140:47:10"
														},
														{
															"nativeSrc": "23196:139:10",
															"nodeType": "YulAssignment",
															"src": "23196:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "23330:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "23330:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "23204:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "23204:124:10"
																},
																"nativeSrc": "23204:131:10",
																"nodeType": "YulFunctionCall",
																"src": "23204:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "23196:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "23196:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "22923:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "23074:9:10",
														"nodeType": "YulTypedName",
														"src": "23074:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "23089:4:10",
														"nodeType": "YulTypedName",
														"src": "23089:4:10",
														"type": ""
													}
												],
												"src": "22923:419:10"
											},
											{
												"body": {
													"nativeSrc": "23454:68:10",
													"nodeType": "YulBlock",
													"src": "23454:68:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "23476:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "23476:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23484:1:10",
																				"nodeType": "YulLiteral",
																				"src": "23484:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23472:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "23472:3:10"
																		},
																		"nativeSrc": "23472:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "23472:14:10"
																	},
																	{
																		"hexValue": "45706f6368206475726174696f6e206e6f7420656e646564",
																		"kind": "string",
																		"nativeSrc": "23488:26:10",
																		"nodeType": "YulLiteral",
																		"src": "23488:26:10",
																		"type": "",
																		"value": "Epoch duration not ended"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23465:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "23465:6:10"
																},
																"nativeSrc": "23465:50:10",
																"nodeType": "YulFunctionCall",
																"src": "23465:50:10"
															},
															"nativeSrc": "23465:50:10",
															"nodeType": "YulExpressionStatement",
															"src": "23465:50:10"
														}
													]
												},
												"name": "store_literal_in_memory_173f724573e03b30b01a0c9de192b085764dd4bd6eb36c485bbfc55c18287d76",
												"nativeSrc": "23348:174:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "23446:6:10",
														"nodeType": "YulTypedName",
														"src": "23446:6:10",
														"type": ""
													}
												],
												"src": "23348:174:10"
											},
											{
												"body": {
													"nativeSrc": "23674:220:10",
													"nodeType": "YulBlock",
													"src": "23674:220:10",
													"statements": [
														{
															"nativeSrc": "23684:74:10",
															"nodeType": "YulAssignment",
															"src": "23684:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "23750:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "23750:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23755:2:10",
																		"nodeType": "YulLiteral",
																		"src": "23755:2:10",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "23691:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "23691:58:10"
																},
																"nativeSrc": "23691:67:10",
																"nodeType": "YulFunctionCall",
																"src": "23691:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "23684:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "23684:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "23856:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "23856:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_173f724573e03b30b01a0c9de192b085764dd4bd6eb36c485bbfc55c18287d76",
																	"nativeSrc": "23767:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "23767:88:10"
																},
																"nativeSrc": "23767:93:10",
																"nodeType": "YulFunctionCall",
																"src": "23767:93:10"
															},
															"nativeSrc": "23767:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "23767:93:10"
														},
														{
															"nativeSrc": "23869:19:10",
															"nodeType": "YulAssignment",
															"src": "23869:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "23880:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "23880:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23885:2:10",
																		"nodeType": "YulLiteral",
																		"src": "23885:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "23876:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "23876:3:10"
																},
																"nativeSrc": "23876:12:10",
																"nodeType": "YulFunctionCall",
																"src": "23876:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "23869:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "23869:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_173f724573e03b30b01a0c9de192b085764dd4bd6eb36c485bbfc55c18287d76_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "23528:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "23662:3:10",
														"nodeType": "YulTypedName",
														"src": "23662:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "23670:3:10",
														"nodeType": "YulTypedName",
														"src": "23670:3:10",
														"type": ""
													}
												],
												"src": "23528:366:10"
											},
											{
												"body": {
													"nativeSrc": "24071:248:10",
													"nodeType": "YulBlock",
													"src": "24071:248:10",
													"statements": [
														{
															"nativeSrc": "24081:26:10",
															"nodeType": "YulAssignment",
															"src": "24081:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "24093:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "24093:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24104:2:10",
																		"nodeType": "YulLiteral",
																		"src": "24104:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "24089:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "24089:3:10"
																},
																"nativeSrc": "24089:18:10",
																"nodeType": "YulFunctionCall",
																"src": "24089:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "24081:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "24081:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "24128:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "24128:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24139:1:10",
																				"nodeType": "YulLiteral",
																				"src": "24139:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24124:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "24124:3:10"
																		},
																		"nativeSrc": "24124:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "24124:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "24147:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "24147:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "24153:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "24153:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "24143:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "24143:3:10"
																		},
																		"nativeSrc": "24143:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "24143:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "24117:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "24117:6:10"
																},
																"nativeSrc": "24117:47:10",
																"nodeType": "YulFunctionCall",
																"src": "24117:47:10"
															},
															"nativeSrc": "24117:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "24117:47:10"
														},
														{
															"nativeSrc": "24173:139:10",
															"nodeType": "YulAssignment",
															"src": "24173:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "24307:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "24307:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_173f724573e03b30b01a0c9de192b085764dd4bd6eb36c485bbfc55c18287d76_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "24181:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "24181:124:10"
																},
																"nativeSrc": "24181:131:10",
																"nodeType": "YulFunctionCall",
																"src": "24181:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "24173:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "24173:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_173f724573e03b30b01a0c9de192b085764dd4bd6eb36c485bbfc55c18287d76__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "23900:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "24051:9:10",
														"nodeType": "YulTypedName",
														"src": "24051:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "24066:4:10",
														"nodeType": "YulTypedName",
														"src": "24066:4:10",
														"type": ""
													}
												],
												"src": "23900:419:10"
											},
											{
												"body": {
													"nativeSrc": "24431:62:10",
													"nodeType": "YulBlock",
													"src": "24431:62:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "24453:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "24453:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24461:1:10",
																				"nodeType": "YulLiteral",
																				"src": "24461:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24449:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "24449:3:10"
																		},
																		"nativeSrc": "24449:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "24449:14:10"
																	},
																	{
																		"hexValue": "4e6f2070656e64696e672072657761726473",
																		"kind": "string",
																		"nativeSrc": "24465:20:10",
																		"nodeType": "YulLiteral",
																		"src": "24465:20:10",
																		"type": "",
																		"value": "No pending rewards"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "24442:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "24442:6:10"
																},
																"nativeSrc": "24442:44:10",
																"nodeType": "YulFunctionCall",
																"src": "24442:44:10"
															},
															"nativeSrc": "24442:44:10",
															"nodeType": "YulExpressionStatement",
															"src": "24442:44:10"
														}
													]
												},
												"name": "store_literal_in_memory_8114dcf72780e60e19572e2c60a0c1f9869923f8566298d433960bbbf02ee9bd",
												"nativeSrc": "24325:168:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "24423:6:10",
														"nodeType": "YulTypedName",
														"src": "24423:6:10",
														"type": ""
													}
												],
												"src": "24325:168:10"
											},
											{
												"body": {
													"nativeSrc": "24645:220:10",
													"nodeType": "YulBlock",
													"src": "24645:220:10",
													"statements": [
														{
															"nativeSrc": "24655:74:10",
															"nodeType": "YulAssignment",
															"src": "24655:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "24721:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "24721:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24726:2:10",
																		"nodeType": "YulLiteral",
																		"src": "24726:2:10",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "24662:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "24662:58:10"
																},
																"nativeSrc": "24662:67:10",
																"nodeType": "YulFunctionCall",
																"src": "24662:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "24655:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "24655:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "24827:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "24827:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_8114dcf72780e60e19572e2c60a0c1f9869923f8566298d433960bbbf02ee9bd",
																	"nativeSrc": "24738:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "24738:88:10"
																},
																"nativeSrc": "24738:93:10",
																"nodeType": "YulFunctionCall",
																"src": "24738:93:10"
															},
															"nativeSrc": "24738:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "24738:93:10"
														},
														{
															"nativeSrc": "24840:19:10",
															"nodeType": "YulAssignment",
															"src": "24840:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "24851:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "24851:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24856:2:10",
																		"nodeType": "YulLiteral",
																		"src": "24856:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "24847:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "24847:3:10"
																},
																"nativeSrc": "24847:12:10",
																"nodeType": "YulFunctionCall",
																"src": "24847:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "24840:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "24840:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_8114dcf72780e60e19572e2c60a0c1f9869923f8566298d433960bbbf02ee9bd_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "24499:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "24633:3:10",
														"nodeType": "YulTypedName",
														"src": "24633:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "24641:3:10",
														"nodeType": "YulTypedName",
														"src": "24641:3:10",
														"type": ""
													}
												],
												"src": "24499:366:10"
											},
											{
												"body": {
													"nativeSrc": "25042:248:10",
													"nodeType": "YulBlock",
													"src": "25042:248:10",
													"statements": [
														{
															"nativeSrc": "25052:26:10",
															"nodeType": "YulAssignment",
															"src": "25052:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "25064:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "25064:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25075:2:10",
																		"nodeType": "YulLiteral",
																		"src": "25075:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "25060:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "25060:3:10"
																},
																"nativeSrc": "25060:18:10",
																"nodeType": "YulFunctionCall",
																"src": "25060:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "25052:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "25052:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "25099:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "25099:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "25110:1:10",
																				"nodeType": "YulLiteral",
																				"src": "25110:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25095:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "25095:3:10"
																		},
																		"nativeSrc": "25095:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "25095:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "25118:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "25118:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "25124:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "25124:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "25114:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "25114:3:10"
																		},
																		"nativeSrc": "25114:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "25114:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "25088:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "25088:6:10"
																},
																"nativeSrc": "25088:47:10",
																"nodeType": "YulFunctionCall",
																"src": "25088:47:10"
															},
															"nativeSrc": "25088:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "25088:47:10"
														},
														{
															"nativeSrc": "25144:139:10",
															"nodeType": "YulAssignment",
															"src": "25144:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "25278:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "25278:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_8114dcf72780e60e19572e2c60a0c1f9869923f8566298d433960bbbf02ee9bd_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "25152:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "25152:124:10"
																},
																"nativeSrc": "25152:131:10",
																"nodeType": "YulFunctionCall",
																"src": "25152:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "25144:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "25144:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8114dcf72780e60e19572e2c60a0c1f9869923f8566298d433960bbbf02ee9bd__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "24871:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "25022:9:10",
														"nodeType": "YulTypedName",
														"src": "25022:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "25037:4:10",
														"nodeType": "YulTypedName",
														"src": "25037:4:10",
														"type": ""
													}
												],
												"src": "24871:419:10"
											},
											{
												"body": {
													"nativeSrc": "25402:72:10",
													"nodeType": "YulBlock",
													"src": "25402:72:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "25424:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "25424:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "25432:1:10",
																				"nodeType": "YulLiteral",
																				"src": "25432:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25420:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "25420:3:10"
																		},
																		"nativeSrc": "25420:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "25420:14:10"
																	},
																	{
																		"hexValue": "5265776172642065786365656473206d617820636c61696d61626c65",
																		"kind": "string",
																		"nativeSrc": "25436:30:10",
																		"nodeType": "YulLiteral",
																		"src": "25436:30:10",
																		"type": "",
																		"value": "Reward exceeds max claimable"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "25413:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "25413:6:10"
																},
																"nativeSrc": "25413:54:10",
																"nodeType": "YulFunctionCall",
																"src": "25413:54:10"
															},
															"nativeSrc": "25413:54:10",
															"nodeType": "YulExpressionStatement",
															"src": "25413:54:10"
														}
													]
												},
												"name": "store_literal_in_memory_6de2a2be9ca38ada1b84a026463e7b712a73f0cb3c748e36f625c3a785b75809",
												"nativeSrc": "25296:178:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "25394:6:10",
														"nodeType": "YulTypedName",
														"src": "25394:6:10",
														"type": ""
													}
												],
												"src": "25296:178:10"
											},
											{
												"body": {
													"nativeSrc": "25626:220:10",
													"nodeType": "YulBlock",
													"src": "25626:220:10",
													"statements": [
														{
															"nativeSrc": "25636:74:10",
															"nodeType": "YulAssignment",
															"src": "25636:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "25702:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "25702:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25707:2:10",
																		"nodeType": "YulLiteral",
																		"src": "25707:2:10",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "25643:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "25643:58:10"
																},
																"nativeSrc": "25643:67:10",
																"nodeType": "YulFunctionCall",
																"src": "25643:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "25636:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "25636:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "25808:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "25808:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_6de2a2be9ca38ada1b84a026463e7b712a73f0cb3c748e36f625c3a785b75809",
																	"nativeSrc": "25719:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "25719:88:10"
																},
																"nativeSrc": "25719:93:10",
																"nodeType": "YulFunctionCall",
																"src": "25719:93:10"
															},
															"nativeSrc": "25719:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "25719:93:10"
														},
														{
															"nativeSrc": "25821:19:10",
															"nodeType": "YulAssignment",
															"src": "25821:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "25832:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "25832:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25837:2:10",
																		"nodeType": "YulLiteral",
																		"src": "25837:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "25828:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "25828:3:10"
																},
																"nativeSrc": "25828:12:10",
																"nodeType": "YulFunctionCall",
																"src": "25828:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "25821:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "25821:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_6de2a2be9ca38ada1b84a026463e7b712a73f0cb3c748e36f625c3a785b75809_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "25480:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "25614:3:10",
														"nodeType": "YulTypedName",
														"src": "25614:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "25622:3:10",
														"nodeType": "YulTypedName",
														"src": "25622:3:10",
														"type": ""
													}
												],
												"src": "25480:366:10"
											},
											{
												"body": {
													"nativeSrc": "26023:248:10",
													"nodeType": "YulBlock",
													"src": "26023:248:10",
													"statements": [
														{
															"nativeSrc": "26033:26:10",
															"nodeType": "YulAssignment",
															"src": "26033:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "26045:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "26045:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "26056:2:10",
																		"nodeType": "YulLiteral",
																		"src": "26056:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "26041:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "26041:3:10"
																},
																"nativeSrc": "26041:18:10",
																"nodeType": "YulFunctionCall",
																"src": "26041:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "26033:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "26033:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "26080:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "26080:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "26091:1:10",
																				"nodeType": "YulLiteral",
																				"src": "26091:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "26076:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "26076:3:10"
																		},
																		"nativeSrc": "26076:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "26076:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "26099:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "26099:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "26105:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "26105:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "26095:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "26095:3:10"
																		},
																		"nativeSrc": "26095:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "26095:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "26069:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "26069:6:10"
																},
																"nativeSrc": "26069:47:10",
																"nodeType": "YulFunctionCall",
																"src": "26069:47:10"
															},
															"nativeSrc": "26069:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "26069:47:10"
														},
														{
															"nativeSrc": "26125:139:10",
															"nodeType": "YulAssignment",
															"src": "26125:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "26259:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "26259:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_6de2a2be9ca38ada1b84a026463e7b712a73f0cb3c748e36f625c3a785b75809_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "26133:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "26133:124:10"
																},
																"nativeSrc": "26133:131:10",
																"nodeType": "YulFunctionCall",
																"src": "26133:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "26125:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "26125:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6de2a2be9ca38ada1b84a026463e7b712a73f0cb3c748e36f625c3a785b75809__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "25852:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "26003:9:10",
														"nodeType": "YulTypedName",
														"src": "26003:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "26018:4:10",
														"nodeType": "YulTypedName",
														"src": "26018:4:10",
														"type": ""
													}
												],
												"src": "25852:419:10"
											},
											{
												"body": {
													"nativeSrc": "26397:200:10",
													"nodeType": "YulBlock",
													"src": "26397:200:10",
													"statements": [
														{
															"nativeSrc": "26407:26:10",
															"nodeType": "YulAssignment",
															"src": "26407:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "26419:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "26419:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "26430:2:10",
																		"nodeType": "YulLiteral",
																		"src": "26430:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "26415:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "26415:3:10"
																},
																"nativeSrc": "26415:18:10",
																"nodeType": "YulFunctionCall",
																"src": "26415:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "26407:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "26407:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "26487:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "26487:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "26500:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "26500:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "26511:1:10",
																				"nodeType": "YulLiteral",
																				"src": "26511:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "26496:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "26496:3:10"
																		},
																		"nativeSrc": "26496:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "26496:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "26443:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "26443:43:10"
																},
																"nativeSrc": "26443:71:10",
																"nodeType": "YulFunctionCall",
																"src": "26443:71:10"
															},
															"nativeSrc": "26443:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "26443:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "26562:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "26562:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "26575:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "26575:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "26586:2:10",
																				"nodeType": "YulLiteral",
																				"src": "26586:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "26571:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "26571:3:10"
																		},
																		"nativeSrc": "26571:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "26571:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "26524:37:10",
																	"nodeType": "YulIdentifier",
																	"src": "26524:37:10"
																},
																"nativeSrc": "26524:66:10",
																"nodeType": "YulFunctionCall",
																"src": "26524:66:10"
															},
															"nativeSrc": "26524:66:10",
															"nodeType": "YulExpressionStatement",
															"src": "26524:66:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_bool__to_t_uint256_t_bool__fromStack_reversed",
												"nativeSrc": "26277:320:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "26361:9:10",
														"nodeType": "YulTypedName",
														"src": "26361:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "26373:6:10",
														"nodeType": "YulTypedName",
														"src": "26373:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "26381:6:10",
														"nodeType": "YulTypedName",
														"src": "26381:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "26392:4:10",
														"nodeType": "YulTypedName",
														"src": "26392:4:10",
														"type": ""
													}
												],
												"src": "26277:320:10"
											},
											{
												"body": {
													"nativeSrc": "26709:75:10",
													"nodeType": "YulBlock",
													"src": "26709:75:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "26731:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "26731:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "26739:1:10",
																				"nodeType": "YulLiteral",
																				"src": "26739:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "26727:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "26727:3:10"
																		},
																		"nativeSrc": "26727:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "26727:14:10"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nativeSrc": "26743:33:10",
																		"nodeType": "YulLiteral",
																		"src": "26743:33:10",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "26720:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "26720:6:10"
																},
																"nativeSrc": "26720:57:10",
																"nodeType": "YulFunctionCall",
																"src": "26720:57:10"
															},
															"nativeSrc": "26720:57:10",
															"nodeType": "YulExpressionStatement",
															"src": "26720:57:10"
														}
													]
												},
												"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
												"nativeSrc": "26603:181:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "26701:6:10",
														"nodeType": "YulTypedName",
														"src": "26701:6:10",
														"type": ""
													}
												],
												"src": "26603:181:10"
											},
											{
												"body": {
													"nativeSrc": "26936:220:10",
													"nodeType": "YulBlock",
													"src": "26936:220:10",
													"statements": [
														{
															"nativeSrc": "26946:74:10",
															"nodeType": "YulAssignment",
															"src": "26946:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "27012:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "27012:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "27017:2:10",
																		"nodeType": "YulLiteral",
																		"src": "27017:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "26953:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "26953:58:10"
																},
																"nativeSrc": "26953:67:10",
																"nodeType": "YulFunctionCall",
																"src": "26953:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "26946:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "26946:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "27118:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "27118:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																	"nativeSrc": "27029:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "27029:88:10"
																},
																"nativeSrc": "27029:93:10",
																"nodeType": "YulFunctionCall",
																"src": "27029:93:10"
															},
															"nativeSrc": "27029:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "27029:93:10"
														},
														{
															"nativeSrc": "27131:19:10",
															"nodeType": "YulAssignment",
															"src": "27131:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "27142:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "27142:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "27147:2:10",
																		"nodeType": "YulLiteral",
																		"src": "27147:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "27138:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "27138:3:10"
																},
																"nativeSrc": "27138:12:10",
																"nodeType": "YulFunctionCall",
																"src": "27138:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "27131:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "27131:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "26790:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "26924:3:10",
														"nodeType": "YulTypedName",
														"src": "26924:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "26932:3:10",
														"nodeType": "YulTypedName",
														"src": "26932:3:10",
														"type": ""
													}
												],
												"src": "26790:366:10"
											},
											{
												"body": {
													"nativeSrc": "27333:248:10",
													"nodeType": "YulBlock",
													"src": "27333:248:10",
													"statements": [
														{
															"nativeSrc": "27343:26:10",
															"nodeType": "YulAssignment",
															"src": "27343:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "27355:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "27355:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "27366:2:10",
																		"nodeType": "YulLiteral",
																		"src": "27366:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "27351:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "27351:3:10"
																},
																"nativeSrc": "27351:18:10",
																"nodeType": "YulFunctionCall",
																"src": "27351:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "27343:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "27343:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "27390:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "27390:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "27401:1:10",
																				"nodeType": "YulLiteral",
																				"src": "27401:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "27386:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "27386:3:10"
																		},
																		"nativeSrc": "27386:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "27386:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "27409:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "27409:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "27415:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "27415:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "27405:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "27405:3:10"
																		},
																		"nativeSrc": "27405:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "27405:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "27379:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "27379:6:10"
																},
																"nativeSrc": "27379:47:10",
																"nodeType": "YulFunctionCall",
																"src": "27379:47:10"
															},
															"nativeSrc": "27379:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "27379:47:10"
														},
														{
															"nativeSrc": "27435:139:10",
															"nodeType": "YulAssignment",
															"src": "27435:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "27569:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "27569:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "27443:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "27443:124:10"
																},
																"nativeSrc": "27443:131:10",
																"nodeType": "YulFunctionCall",
																"src": "27443:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "27435:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "27435:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "27162:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "27313:9:10",
														"nodeType": "YulTypedName",
														"src": "27313:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "27328:4:10",
														"nodeType": "YulTypedName",
														"src": "27328:4:10",
														"type": ""
													}
												],
												"src": "27162:419:10"
											},
											{
												"body": {
													"nativeSrc": "27629:52:10",
													"nodeType": "YulBlock",
													"src": "27629:52:10",
													"statements": [
														{
															"nativeSrc": "27639:35:10",
															"nodeType": "YulAssignment",
															"src": "27639:35:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "27664:2:10",
																		"nodeType": "YulLiteral",
																		"src": "27664:2:10",
																		"type": "",
																		"value": "96"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "27668:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "27668:5:10"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "27660:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "27660:3:10"
																},
																"nativeSrc": "27660:14:10",
																"nodeType": "YulFunctionCall",
																"src": "27660:14:10"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "27639:8:10",
																	"nodeType": "YulIdentifier",
																	"src": "27639:8:10"
																}
															]
														}
													]
												},
												"name": "shift_left_96",
												"nativeSrc": "27587:94:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "27610:5:10",
														"nodeType": "YulTypedName",
														"src": "27610:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "27620:8:10",
														"nodeType": "YulTypedName",
														"src": "27620:8:10",
														"type": ""
													}
												],
												"src": "27587:94:10"
											},
											{
												"body": {
													"nativeSrc": "27734:47:10",
													"nodeType": "YulBlock",
													"src": "27734:47:10",
													"statements": [
														{
															"nativeSrc": "27744:31:10",
															"nodeType": "YulAssignment",
															"src": "27744:31:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "27769:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "27769:5:10"
																	}
																],
																"functionName": {
																	"name": "shift_left_96",
																	"nativeSrc": "27755:13:10",
																	"nodeType": "YulIdentifier",
																	"src": "27755:13:10"
																},
																"nativeSrc": "27755:20:10",
																"nodeType": "YulFunctionCall",
																"src": "27755:20:10"
															},
															"variableNames": [
																{
																	"name": "aligned",
																	"nativeSrc": "27744:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "27744:7:10"
																}
															]
														}
													]
												},
												"name": "leftAlign_t_uint160",
												"nativeSrc": "27687:94:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "27716:5:10",
														"nodeType": "YulTypedName",
														"src": "27716:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "aligned",
														"nativeSrc": "27726:7:10",
														"nodeType": "YulTypedName",
														"src": "27726:7:10",
														"type": ""
													}
												],
												"src": "27687:94:10"
											},
											{
												"body": {
													"nativeSrc": "27834:53:10",
													"nodeType": "YulBlock",
													"src": "27834:53:10",
													"statements": [
														{
															"nativeSrc": "27844:37:10",
															"nodeType": "YulAssignment",
															"src": "27844:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "27875:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "27875:5:10"
																	}
																],
																"functionName": {
																	"name": "leftAlign_t_uint160",
																	"nativeSrc": "27855:19:10",
																	"nodeType": "YulIdentifier",
																	"src": "27855:19:10"
																},
																"nativeSrc": "27855:26:10",
																"nodeType": "YulFunctionCall",
																"src": "27855:26:10"
															},
															"variableNames": [
																{
																	"name": "aligned",
																	"nativeSrc": "27844:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "27844:7:10"
																}
															]
														}
													]
												},
												"name": "leftAlign_t_address",
												"nativeSrc": "27787:100:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "27816:5:10",
														"nodeType": "YulTypedName",
														"src": "27816:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "aligned",
														"nativeSrc": "27826:7:10",
														"nodeType": "YulTypedName",
														"src": "27826:7:10",
														"type": ""
													}
												],
												"src": "27787:100:10"
											},
											{
												"body": {
													"nativeSrc": "27976:74:10",
													"nodeType": "YulBlock",
													"src": "27976:74:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "27993:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "27993:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "28036:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "28036:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "28018:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "28018:17:10"
																				},
																				"nativeSrc": "28018:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "28018:24:10"
																			}
																		],
																		"functionName": {
																			"name": "leftAlign_t_address",
																			"nativeSrc": "27998:19:10",
																			"nodeType": "YulIdentifier",
																			"src": "27998:19:10"
																		},
																		"nativeSrc": "27998:45:10",
																		"nodeType": "YulFunctionCall",
																		"src": "27998:45:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "27986:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "27986:6:10"
																},
																"nativeSrc": "27986:58:10",
																"nodeType": "YulFunctionCall",
																"src": "27986:58:10"
															},
															"nativeSrc": "27986:58:10",
															"nodeType": "YulExpressionStatement",
															"src": "27986:58:10"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack",
												"nativeSrc": "27893:157:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "27964:5:10",
														"nodeType": "YulTypedName",
														"src": "27964:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "27971:3:10",
														"nodeType": "YulTypedName",
														"src": "27971:3:10",
														"type": ""
													}
												],
												"src": "27893:157:10"
											},
											{
												"body": {
													"nativeSrc": "28103:32:10",
													"nodeType": "YulBlock",
													"src": "28103:32:10",
													"statements": [
														{
															"nativeSrc": "28113:16:10",
															"nodeType": "YulAssignment",
															"src": "28113:16:10",
															"value": {
																"name": "value",
																"nativeSrc": "28124:5:10",
																"nodeType": "YulIdentifier",
																"src": "28124:5:10"
															},
															"variableNames": [
																{
																	"name": "aligned",
																	"nativeSrc": "28113:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "28113:7:10"
																}
															]
														}
													]
												},
												"name": "leftAlign_t_uint256",
												"nativeSrc": "28056:79:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "28085:5:10",
														"nodeType": "YulTypedName",
														"src": "28085:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "aligned",
														"nativeSrc": "28095:7:10",
														"nodeType": "YulTypedName",
														"src": "28095:7:10",
														"type": ""
													}
												],
												"src": "28056:79:10"
											},
											{
												"body": {
													"nativeSrc": "28224:74:10",
													"nodeType": "YulBlock",
													"src": "28224:74:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "28241:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "28241:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "28284:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "28284:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "28266:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "28266:17:10"
																				},
																				"nativeSrc": "28266:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "28266:24:10"
																			}
																		],
																		"functionName": {
																			"name": "leftAlign_t_uint256",
																			"nativeSrc": "28246:19:10",
																			"nodeType": "YulIdentifier",
																			"src": "28246:19:10"
																		},
																		"nativeSrc": "28246:45:10",
																		"nodeType": "YulFunctionCall",
																		"src": "28246:45:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "28234:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "28234:6:10"
																},
																"nativeSrc": "28234:58:10",
																"nodeType": "YulFunctionCall",
																"src": "28234:58:10"
															},
															"nativeSrc": "28234:58:10",
															"nodeType": "YulExpressionStatement",
															"src": "28234:58:10"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack",
												"nativeSrc": "28141:157:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "28212:5:10",
														"nodeType": "YulTypedName",
														"src": "28212:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "28219:3:10",
														"nodeType": "YulTypedName",
														"src": "28219:3:10",
														"type": ""
													}
												],
												"src": "28141:157:10"
											},
											{
												"body": {
													"nativeSrc": "28448:253:10",
													"nodeType": "YulBlock",
													"src": "28448:253:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "28521:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "28521:6:10"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "28530:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "28530:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack",
																	"nativeSrc": "28459:61:10",
																	"nodeType": "YulIdentifier",
																	"src": "28459:61:10"
																},
																"nativeSrc": "28459:75:10",
																"nodeType": "YulFunctionCall",
																"src": "28459:75:10"
															},
															"nativeSrc": "28459:75:10",
															"nodeType": "YulExpressionStatement",
															"src": "28459:75:10"
														},
														{
															"nativeSrc": "28543:19:10",
															"nodeType": "YulAssignment",
															"src": "28543:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "28554:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "28554:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "28559:2:10",
																		"nodeType": "YulLiteral",
																		"src": "28559:2:10",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "28550:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "28550:3:10"
																},
																"nativeSrc": "28550:12:10",
																"nodeType": "YulFunctionCall",
																"src": "28550:12:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "28543:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "28543:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "28634:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "28634:6:10"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "28643:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "28643:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack",
																	"nativeSrc": "28572:61:10",
																	"nodeType": "YulIdentifier",
																	"src": "28572:61:10"
																},
																"nativeSrc": "28572:75:10",
																"nodeType": "YulFunctionCall",
																"src": "28572:75:10"
															},
															"nativeSrc": "28572:75:10",
															"nodeType": "YulExpressionStatement",
															"src": "28572:75:10"
														},
														{
															"nativeSrc": "28656:19:10",
															"nodeType": "YulAssignment",
															"src": "28656:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "28667:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "28667:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "28672:2:10",
																		"nodeType": "YulLiteral",
																		"src": "28672:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "28663:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "28663:3:10"
																},
																"nativeSrc": "28663:12:10",
																"nodeType": "YulFunctionCall",
																"src": "28663:12:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "28656:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "28656:3:10"
																}
															]
														},
														{
															"nativeSrc": "28685:10:10",
															"nodeType": "YulAssignment",
															"src": "28685:10:10",
															"value": {
																"name": "pos",
																"nativeSrc": "28692:3:10",
																"nodeType": "YulIdentifier",
																"src": "28692:3:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "28685:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "28685:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_address_t_uint256__to_t_address_t_uint256__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "28304:397:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "28419:3:10",
														"nodeType": "YulTypedName",
														"src": "28419:3:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "28425:6:10",
														"nodeType": "YulTypedName",
														"src": "28425:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "28433:6:10",
														"nodeType": "YulTypedName",
														"src": "28433:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "28444:3:10",
														"nodeType": "YulTypedName",
														"src": "28444:3:10",
														"type": ""
													}
												],
												"src": "28304:397:10"
											},
											{
												"body": {
													"nativeSrc": "28821:34:10",
													"nodeType": "YulBlock",
													"src": "28821:34:10",
													"statements": [
														{
															"nativeSrc": "28831:18:10",
															"nodeType": "YulAssignment",
															"src": "28831:18:10",
															"value": {
																"name": "pos",
																"nativeSrc": "28846:3:10",
																"nodeType": "YulIdentifier",
																"src": "28846:3:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "28831:11:10",
																	"nodeType": "YulIdentifier",
																	"src": "28831:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "28707:148:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "28793:3:10",
														"nodeType": "YulTypedName",
														"src": "28793:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "28798:6:10",
														"nodeType": "YulTypedName",
														"src": "28798:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "28809:11:10",
														"nodeType": "YulTypedName",
														"src": "28809:11:10",
														"type": ""
													}
												],
												"src": "28707:148:10"
											},
											{
												"body": {
													"nativeSrc": "28967:108:10",
													"nodeType": "YulBlock",
													"src": "28967:108:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "28989:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "28989:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "28997:1:10",
																				"nodeType": "YulLiteral",
																				"src": "28997:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "28985:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "28985:3:10"
																		},
																		"nativeSrc": "28985:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "28985:14:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "29001:66:10",
																		"nodeType": "YulLiteral",
																		"src": "29001:66:10",
																		"type": "",
																		"value": "0x19457468657265756d205369676e6564204d6573736167653a0a333200000000"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "28978:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "28978:6:10"
																},
																"nativeSrc": "28978:90:10",
																"nodeType": "YulFunctionCall",
																"src": "28978:90:10"
															},
															"nativeSrc": "28978:90:10",
															"nodeType": "YulExpressionStatement",
															"src": "28978:90:10"
														}
													]
												},
												"name": "store_literal_in_memory_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73",
												"nativeSrc": "28861:214:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "28959:6:10",
														"nodeType": "YulTypedName",
														"src": "28959:6:10",
														"type": ""
													}
												],
												"src": "28861:214:10"
											},
											{
												"body": {
													"nativeSrc": "29245:238:10",
													"nodeType": "YulBlock",
													"src": "29245:238:10",
													"statements": [
														{
															"nativeSrc": "29255:92:10",
															"nodeType": "YulAssignment",
															"src": "29255:92:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "29339:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "29339:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "29344:2:10",
																		"nodeType": "YulLiteral",
																		"src": "29344:2:10",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "29262:76:10",
																	"nodeType": "YulIdentifier",
																	"src": "29262:76:10"
																},
																"nativeSrc": "29262:85:10",
																"nodeType": "YulFunctionCall",
																"src": "29262:85:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "29255:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "29255:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "29445:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "29445:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73",
																	"nativeSrc": "29356:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "29356:88:10"
																},
																"nativeSrc": "29356:93:10",
																"nodeType": "YulFunctionCall",
																"src": "29356:93:10"
															},
															"nativeSrc": "29356:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "29356:93:10"
														},
														{
															"nativeSrc": "29458:19:10",
															"nodeType": "YulAssignment",
															"src": "29458:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "29469:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "29469:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "29474:2:10",
																		"nodeType": "YulLiteral",
																		"src": "29474:2:10",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "29465:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "29465:3:10"
																},
																"nativeSrc": "29465:12:10",
																"nodeType": "YulFunctionCall",
																"src": "29465:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "29458:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "29458:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "29081:402:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "29233:3:10",
														"nodeType": "YulTypedName",
														"src": "29233:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "29241:3:10",
														"nodeType": "YulTypedName",
														"src": "29241:3:10",
														"type": ""
													}
												],
												"src": "29081:402:10"
											},
											{
												"body": {
													"nativeSrc": "29534:32:10",
													"nodeType": "YulBlock",
													"src": "29534:32:10",
													"statements": [
														{
															"nativeSrc": "29544:16:10",
															"nodeType": "YulAssignment",
															"src": "29544:16:10",
															"value": {
																"name": "value",
																"nativeSrc": "29555:5:10",
																"nodeType": "YulIdentifier",
																"src": "29555:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "29544:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "29544:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nativeSrc": "29489:77:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "29516:5:10",
														"nodeType": "YulTypedName",
														"src": "29516:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "29526:7:10",
														"nodeType": "YulTypedName",
														"src": "29526:7:10",
														"type": ""
													}
												],
												"src": "29489:77:10"
											},
											{
												"body": {
													"nativeSrc": "29619:32:10",
													"nodeType": "YulBlock",
													"src": "29619:32:10",
													"statements": [
														{
															"nativeSrc": "29629:16:10",
															"nodeType": "YulAssignment",
															"src": "29629:16:10",
															"value": {
																"name": "value",
																"nativeSrc": "29640:5:10",
																"nodeType": "YulIdentifier",
																"src": "29640:5:10"
															},
															"variableNames": [
																{
																	"name": "aligned",
																	"nativeSrc": "29629:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "29629:7:10"
																}
															]
														}
													]
												},
												"name": "leftAlign_t_bytes32",
												"nativeSrc": "29572:79:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "29601:5:10",
														"nodeType": "YulTypedName",
														"src": "29601:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "aligned",
														"nativeSrc": "29611:7:10",
														"nodeType": "YulTypedName",
														"src": "29611:7:10",
														"type": ""
													}
												],
												"src": "29572:79:10"
											},
											{
												"body": {
													"nativeSrc": "29740:74:10",
													"nodeType": "YulBlock",
													"src": "29740:74:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "29757:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "29757:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "29800:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "29800:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nativeSrc": "29782:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "29782:17:10"
																				},
																				"nativeSrc": "29782:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "29782:24:10"
																			}
																		],
																		"functionName": {
																			"name": "leftAlign_t_bytes32",
																			"nativeSrc": "29762:19:10",
																			"nodeType": "YulIdentifier",
																			"src": "29762:19:10"
																		},
																		"nativeSrc": "29762:45:10",
																		"nodeType": "YulFunctionCall",
																		"src": "29762:45:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "29750:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "29750:6:10"
																},
																"nativeSrc": "29750:58:10",
																"nodeType": "YulFunctionCall",
																"src": "29750:58:10"
															},
															"nativeSrc": "29750:58:10",
															"nodeType": "YulExpressionStatement",
															"src": "29750:58:10"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack",
												"nativeSrc": "29657:157:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "29728:5:10",
														"nodeType": "YulTypedName",
														"src": "29728:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "29735:3:10",
														"nodeType": "YulTypedName",
														"src": "29735:3:10",
														"type": ""
													}
												],
												"src": "29657:157:10"
											},
											{
												"body": {
													"nativeSrc": "30037:305:10",
													"nodeType": "YulBlock",
													"src": "30037:305:10",
													"statements": [
														{
															"nativeSrc": "30048:155:10",
															"nodeType": "YulAssignment",
															"src": "30048:155:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "30199:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "30199:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "30055:142:10",
																	"nodeType": "YulIdentifier",
																	"src": "30055:142:10"
																},
																"nativeSrc": "30055:148:10",
																"nodeType": "YulFunctionCall",
																"src": "30055:148:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "30048:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "30048:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "30275:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "30275:6:10"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "30284:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "30284:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack",
																	"nativeSrc": "30213:61:10",
																	"nodeType": "YulIdentifier",
																	"src": "30213:61:10"
																},
																"nativeSrc": "30213:75:10",
																"nodeType": "YulFunctionCall",
																"src": "30213:75:10"
															},
															"nativeSrc": "30213:75:10",
															"nodeType": "YulExpressionStatement",
															"src": "30213:75:10"
														},
														{
															"nativeSrc": "30297:19:10",
															"nodeType": "YulAssignment",
															"src": "30297:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "30308:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "30308:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "30313:2:10",
																		"nodeType": "YulLiteral",
																		"src": "30313:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "30304:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "30304:3:10"
																},
																"nativeSrc": "30304:12:10",
																"nodeType": "YulFunctionCall",
																"src": "30304:12:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "30297:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "30297:3:10"
																}
															]
														},
														{
															"nativeSrc": "30326:10:10",
															"nodeType": "YulAssignment",
															"src": "30326:10:10",
															"value": {
																"name": "pos",
																"nativeSrc": "30333:3:10",
																"nodeType": "YulIdentifier",
																"src": "30333:3:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "30326:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "30326:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73_t_bytes32__to_t_string_memory_ptr_t_bytes32__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "29820:522:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "30016:3:10",
														"nodeType": "YulTypedName",
														"src": "30016:3:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "30022:6:10",
														"nodeType": "YulTypedName",
														"src": "30022:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "30033:3:10",
														"nodeType": "YulTypedName",
														"src": "30033:3:10",
														"type": ""
													}
												],
												"src": "29820:522:10"
											},
											{
												"body": {
													"nativeSrc": "30376:152:10",
													"nodeType": "YulBlock",
													"src": "30376:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "30393:1:10",
																		"nodeType": "YulLiteral",
																		"src": "30393:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "30396:77:10",
																		"nodeType": "YulLiteral",
																		"src": "30396:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "30386:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "30386:6:10"
																},
																"nativeSrc": "30386:88:10",
																"nodeType": "YulFunctionCall",
																"src": "30386:88:10"
															},
															"nativeSrc": "30386:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "30386:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "30490:1:10",
																		"nodeType": "YulLiteral",
																		"src": "30490:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "30493:4:10",
																		"nodeType": "YulLiteral",
																		"src": "30493:4:10",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "30483:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "30483:6:10"
																},
																"nativeSrc": "30483:15:10",
																"nodeType": "YulFunctionCall",
																"src": "30483:15:10"
															},
															"nativeSrc": "30483:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "30483:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "30514:1:10",
																		"nodeType": "YulLiteral",
																		"src": "30514:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "30517:4:10",
																		"nodeType": "YulLiteral",
																		"src": "30517:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "30507:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "30507:6:10"
																},
																"nativeSrc": "30507:15:10",
																"nodeType": "YulFunctionCall",
																"src": "30507:15:10"
															},
															"nativeSrc": "30507:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "30507:15:10"
														}
													]
												},
												"name": "panic_error_0x21",
												"nativeSrc": "30348:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "30348:180:10"
											},
											{
												"body": {
													"nativeSrc": "30599:53:10",
													"nodeType": "YulBlock",
													"src": "30599:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "30616:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "30616:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "30639:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "30639:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nativeSrc": "30621:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "30621:17:10"
																		},
																		"nativeSrc": "30621:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "30621:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "30609:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "30609:6:10"
																},
																"nativeSrc": "30609:37:10",
																"nodeType": "YulFunctionCall",
																"src": "30609:37:10"
															},
															"nativeSrc": "30609:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "30609:37:10"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nativeSrc": "30534:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "30587:5:10",
														"nodeType": "YulTypedName",
														"src": "30587:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "30594:3:10",
														"nodeType": "YulTypedName",
														"src": "30594:3:10",
														"type": ""
													}
												],
												"src": "30534:118:10"
											},
											{
												"body": {
													"nativeSrc": "30756:124:10",
													"nodeType": "YulBlock",
													"src": "30756:124:10",
													"statements": [
														{
															"nativeSrc": "30766:26:10",
															"nodeType": "YulAssignment",
															"src": "30766:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "30778:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "30778:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "30789:2:10",
																		"nodeType": "YulLiteral",
																		"src": "30789:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "30774:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "30774:3:10"
																},
																"nativeSrc": "30774:18:10",
																"nodeType": "YulFunctionCall",
																"src": "30774:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "30766:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "30766:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "30846:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "30846:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "30859:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "30859:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "30870:1:10",
																				"nodeType": "YulLiteral",
																				"src": "30870:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "30855:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "30855:3:10"
																		},
																		"nativeSrc": "30855:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "30855:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "30802:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "30802:43:10"
																},
																"nativeSrc": "30802:71:10",
																"nodeType": "YulFunctionCall",
																"src": "30802:71:10"
															},
															"nativeSrc": "30802:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "30802:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "30658:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "30728:9:10",
														"nodeType": "YulTypedName",
														"src": "30728:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "30740:6:10",
														"nodeType": "YulTypedName",
														"src": "30740:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "30751:4:10",
														"nodeType": "YulTypedName",
														"src": "30751:4:10",
														"type": ""
													}
												],
												"src": "30658:222:10"
											},
											{
												"body": {
													"nativeSrc": "30929:43:10",
													"nodeType": "YulBlock",
													"src": "30929:43:10",
													"statements": [
														{
															"nativeSrc": "30939:27:10",
															"nodeType": "YulAssignment",
															"src": "30939:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "30954:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "30954:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "30961:4:10",
																		"nodeType": "YulLiteral",
																		"src": "30961:4:10",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "30950:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "30950:3:10"
																},
																"nativeSrc": "30950:16:10",
																"nodeType": "YulFunctionCall",
																"src": "30950:16:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "30939:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "30939:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "30886:86:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "30911:5:10",
														"nodeType": "YulTypedName",
														"src": "30911:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "30921:7:10",
														"nodeType": "YulTypedName",
														"src": "30921:7:10",
														"type": ""
													}
												],
												"src": "30886:86:10"
											},
											{
												"body": {
													"nativeSrc": "31039:51:10",
													"nodeType": "YulBlock",
													"src": "31039:51:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "31056:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "31056:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "31077:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "31077:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "31061:15:10",
																			"nodeType": "YulIdentifier",
																			"src": "31061:15:10"
																		},
																		"nativeSrc": "31061:22:10",
																		"nodeType": "YulFunctionCall",
																		"src": "31061:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "31049:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "31049:6:10"
																},
																"nativeSrc": "31049:35:10",
																"nodeType": "YulFunctionCall",
																"src": "31049:35:10"
															},
															"nativeSrc": "31049:35:10",
															"nodeType": "YulExpressionStatement",
															"src": "31049:35:10"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "30978:112:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "31027:5:10",
														"nodeType": "YulTypedName",
														"src": "31027:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "31034:3:10",
														"nodeType": "YulTypedName",
														"src": "31034:3:10",
														"type": ""
													}
												],
												"src": "30978:112:10"
											},
											{
												"body": {
													"nativeSrc": "31274:367:10",
													"nodeType": "YulBlock",
													"src": "31274:367:10",
													"statements": [
														{
															"nativeSrc": "31284:27:10",
															"nodeType": "YulAssignment",
															"src": "31284:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "31296:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "31296:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "31307:3:10",
																		"nodeType": "YulLiteral",
																		"src": "31307:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "31292:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "31292:3:10"
																},
																"nativeSrc": "31292:19:10",
																"nodeType": "YulFunctionCall",
																"src": "31292:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "31284:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "31284:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "31365:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "31365:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "31378:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "31378:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "31389:1:10",
																				"nodeType": "YulLiteral",
																				"src": "31389:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "31374:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "31374:3:10"
																		},
																		"nativeSrc": "31374:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "31374:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "31321:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "31321:43:10"
																},
																"nativeSrc": "31321:71:10",
																"nodeType": "YulFunctionCall",
																"src": "31321:71:10"
															},
															"nativeSrc": "31321:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "31321:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "31442:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "31442:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "31455:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "31455:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "31466:2:10",
																				"nodeType": "YulLiteral",
																				"src": "31466:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "31451:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "31451:3:10"
																		},
																		"nativeSrc": "31451:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "31451:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "31402:39:10",
																	"nodeType": "YulIdentifier",
																	"src": "31402:39:10"
																},
																"nativeSrc": "31402:68:10",
																"nodeType": "YulFunctionCall",
																"src": "31402:68:10"
															},
															"nativeSrc": "31402:68:10",
															"nodeType": "YulExpressionStatement",
															"src": "31402:68:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "31524:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "31524:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "31537:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "31537:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "31548:2:10",
																				"nodeType": "YulLiteral",
																				"src": "31548:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "31533:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "31533:3:10"
																		},
																		"nativeSrc": "31533:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "31533:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "31480:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "31480:43:10"
																},
																"nativeSrc": "31480:72:10",
																"nodeType": "YulFunctionCall",
																"src": "31480:72:10"
															},
															"nativeSrc": "31480:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "31480:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "31606:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "31606:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "31619:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "31619:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "31630:2:10",
																				"nodeType": "YulLiteral",
																				"src": "31630:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "31615:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "31615:3:10"
																		},
																		"nativeSrc": "31615:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "31615:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "31562:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "31562:43:10"
																},
																"nativeSrc": "31562:72:10",
																"nodeType": "YulFunctionCall",
																"src": "31562:72:10"
															},
															"nativeSrc": "31562:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "31562:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed",
												"nativeSrc": "31096:545:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "31222:9:10",
														"nodeType": "YulTypedName",
														"src": "31222:9:10",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "31234:6:10",
														"nodeType": "YulTypedName",
														"src": "31234:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "31242:6:10",
														"nodeType": "YulTypedName",
														"src": "31242:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "31250:6:10",
														"nodeType": "YulTypedName",
														"src": "31250:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "31258:6:10",
														"nodeType": "YulTypedName",
														"src": "31258:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "31269:4:10",
														"nodeType": "YulTypedName",
														"src": "31269:4:10",
														"type": ""
													}
												],
												"src": "31096:545:10"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_ILatToken_$1410_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_ILatToken_$1410_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_ILatToken_$1410_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_ILatToken_$1410__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_ILatToken_$1410_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_contract$_ILatToken_$1410(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_ILatToken_$1410(value) {\n        if iszero(eq(value, cleanup_t_contract$_ILatToken_$1410(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_ILatToken_$1410(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_ILatToken_$1410(value)\n    }\n\n    function abi_decode_tuple_t_contract$_ILatToken_$1410t_uint256t_uint256t_uint256t_uint256t_uint256t_uint256t_address(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7 {\n        if slt(sub(dataEnd, headStart), 256) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_ILatToken_$1410(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 192\n\n            value6 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 224\n\n            value7 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_e55600974a468a5baf1f1454a24481ec68f787ee02cd9f1d97c35ce2a8d2093d(memPtr) {\n\n        mstore(add(memPtr, 0), \"Contract is paused\")\n\n    }\n\n    function abi_encode_t_stringliteral_e55600974a468a5baf1f1454a24481ec68f787ee02cd9f1d97c35ce2a8d2093d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_e55600974a468a5baf1f1454a24481ec68f787ee02cd9f1d97c35ce2a8d2093d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e55600974a468a5baf1f1454a24481ec68f787ee02cd9f1d97c35ce2a8d2093d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e55600974a468a5baf1f1454a24481ec68f787ee02cd9f1d97c35ce2a8d2093d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_6ae2314e839d4d9cfe442dd3a2386a5c83b76bbc48be45cca60d84c71c4359b2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not initialized\")\n\n    }\n\n    function abi_encode_t_stringliteral_6ae2314e839d4d9cfe442dd3a2386a5c83b76bbc48be45cca60d84c71c4359b2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_6ae2314e839d4d9cfe442dd3a2386a5c83b76bbc48be45cca60d84c71c4359b2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6ae2314e839d4d9cfe442dd3a2386a5c83b76bbc48be45cca60d84c71c4359b2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6ae2314e839d4d9cfe442dd3a2386a5c83b76bbc48be45cca60d84c71c4359b2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51(memPtr) {\n\n        mstore(add(memPtr, 0), \"Transfer failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_0dd13570e20c96a9bfc56c79d1eb9235438d62a04250ac67a0d9f423a83cdc16(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient staked amount\")\n\n    }\n\n    function abi_encode_t_stringliteral_0dd13570e20c96a9bfc56c79d1eb9235438d62a04250ac67a0d9f423a83cdc16_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_0dd13570e20c96a9bfc56c79d1eb9235438d62a04250ac67a0d9f423a83cdc16(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0dd13570e20c96a9bfc56c79d1eb9235438d62a04250ac67a0d9f423a83cdc16__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0dd13570e20c96a9bfc56c79d1eb9235438d62a04250ac67a0d9f423a83cdc16_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0(memPtr) {\n\n        mstore(add(memPtr, 0), \"Already initialized\")\n\n    }\n\n    function abi_encode_t_stringliteral_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_19a9c5fdfc984667e300523283171e2aca8bb9e593f19eef41052fcdbfdb1568(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid nonce\")\n\n    }\n\n    function abi_encode_t_stringliteral_19a9c5fdfc984667e300523283171e2aca8bb9e593f19eef41052fcdbfdb1568_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 13)\n        store_literal_in_memory_19a9c5fdfc984667e300523283171e2aca8bb9e593f19eef41052fcdbfdb1568(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_19a9c5fdfc984667e300523283171e2aca8bb9e593f19eef41052fcdbfdb1568__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_19a9c5fdfc984667e300523283171e2aca8bb9e593f19eef41052fcdbfdb1568_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function store_literal_in_memory_8495ddd36ba9b32a0cb09aa87f940a1af6e06f502729a7774df9db0ac3d8e45a(memPtr) {\n\n        mstore(add(memPtr, 0), \"No stake found\")\n\n    }\n\n    function abi_encode_t_stringliteral_8495ddd36ba9b32a0cb09aa87f940a1af6e06f502729a7774df9db0ac3d8e45a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_8495ddd36ba9b32a0cb09aa87f940a1af6e06f502729a7774df9db0ac3d8e45a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8495ddd36ba9b32a0cb09aa87f940a1af6e06f502729a7774df9db0ac3d8e45a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8495ddd36ba9b32a0cb09aa87f940a1af6e06f502729a7774df9db0ac3d8e45a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3b595757d501f3a780236362fb65cac1873bab94376c90d08bc706e4116d8674(memPtr) {\n\n        mstore(add(memPtr, 0), \"No time elapsed\")\n\n    }\n\n    function abi_encode_t_stringliteral_3b595757d501f3a780236362fb65cac1873bab94376c90d08bc706e4116d8674_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_3b595757d501f3a780236362fb65cac1873bab94376c90d08bc706e4116d8674(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3b595757d501f3a780236362fb65cac1873bab94376c90d08bc706e4116d8674__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3b595757d501f3a780236362fb65cac1873bab94376c90d08bc706e4116d8674_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid signature\")\n\n    }\n\n    function abi_encode_t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_173f724573e03b30b01a0c9de192b085764dd4bd6eb36c485bbfc55c18287d76(memPtr) {\n\n        mstore(add(memPtr, 0), \"Epoch duration not ended\")\n\n    }\n\n    function abi_encode_t_stringliteral_173f724573e03b30b01a0c9de192b085764dd4bd6eb36c485bbfc55c18287d76_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_173f724573e03b30b01a0c9de192b085764dd4bd6eb36c485bbfc55c18287d76(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_173f724573e03b30b01a0c9de192b085764dd4bd6eb36c485bbfc55c18287d76__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_173f724573e03b30b01a0c9de192b085764dd4bd6eb36c485bbfc55c18287d76_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_8114dcf72780e60e19572e2c60a0c1f9869923f8566298d433960bbbf02ee9bd(memPtr) {\n\n        mstore(add(memPtr, 0), \"No pending rewards\")\n\n    }\n\n    function abi_encode_t_stringliteral_8114dcf72780e60e19572e2c60a0c1f9869923f8566298d433960bbbf02ee9bd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_8114dcf72780e60e19572e2c60a0c1f9869923f8566298d433960bbbf02ee9bd(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8114dcf72780e60e19572e2c60a0c1f9869923f8566298d433960bbbf02ee9bd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8114dcf72780e60e19572e2c60a0c1f9869923f8566298d433960bbbf02ee9bd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_6de2a2be9ca38ada1b84a026463e7b712a73f0cb3c748e36f625c3a785b75809(memPtr) {\n\n        mstore(add(memPtr, 0), \"Reward exceeds max claimable\")\n\n    }\n\n    function abi_encode_t_stringliteral_6de2a2be9ca38ada1b84a026463e7b712a73f0cb3c748e36f625c3a785b75809_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_6de2a2be9ca38ada1b84a026463e7b712a73f0cb3c748e36f625c3a785b75809(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6de2a2be9ca38ada1b84a026463e7b712a73f0cb3c748e36f625c3a785b75809__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6de2a2be9ca38ada1b84a026463e7b712a73f0cb3c748e36f625c3a785b75809_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_bool__to_t_uint256_t_bool__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function shift_left_96(value) -> newValue {\n        newValue :=\n\n        shl(96, value)\n\n    }\n\n    function leftAlign_t_uint160(value) -> aligned {\n        aligned := shift_left_96(value)\n    }\n\n    function leftAlign_t_address(value) -> aligned {\n        aligned := leftAlign_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_address(cleanup_t_address(value)))\n    }\n\n    function leftAlign_t_uint256(value) -> aligned {\n        aligned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_uint256(cleanup_t_uint256(value)))\n    }\n\n    function abi_encode_tuple_packed_t_address_t_uint256__to_t_address_t_uint256__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 20)\n\n        abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value1,  pos)\n        pos := add(pos, 32)\n\n        end := pos\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73(memPtr) {\n\n        mstore(add(memPtr, 0), 0x19457468657265756d205369676e6564204d6573736167653a0a333200000000)\n\n    }\n\n    function abi_encode_t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 28)\n        store_literal_in_memory_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73(pos)\n        end := add(pos, 28)\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function leftAlign_t_bytes32(value) -> aligned {\n        aligned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_bytes32(cleanup_t_bytes32(value)))\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73_t_bytes32__to_t_string_memory_ptr_t_bytes32__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 32)\n\n        end := pos\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value3,  add(headStart, 96))\n\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b5060043610610230575f3560e01c806364cb61421161012e578063dd69becd116100b6578063f03f80c31161007a578063f03f80c314610686578063f1ea7692146106a4578063f2fde38b146106c2578063f3482650146106de578063f6cc51571461070e57610230565b8063dd69becd146105f6578063e275c99714610612578063e90b0d7614610630578063e927e7c01461064c578063eab35b771461066857610230565b8063848ff684116100fd578063848ff684146105625780638da5cb5b1461057e57806394d9b2351461059c578063c2362dd5146105ba578063ccc8362c146105d857610230565b806364cb6142146104ec578063715018a61461050a5780637ecebe00146105145780638119185b1461054457610230565b806325d5971f116101bc578063519445e211610180578063519445e2146104205780635829b3c71461043e57806358ba9d271461046e5780635c975abb1461049e5780635e2a9fa2146104bc57610230565b806325d5971f1461037957806331fdc2ba14610395578063430bf08a146103b157806345626bd6146103cf5780634ff0876a1461040257610230565b8063158ef93e11610203578063158ef93e146102d157806316330d40146102ef57806316934fc41461030d57806316c38b3c1461033f5780631bff38cd1461035b57610230565b8063011a4568146102345780630524fb7e1461026457806305c50a35146102805780630fd7bf50146102b3575b5f5ffd5b61024e600480360381019061024991906123b3565b61072c565b60405161025b91906123f6565b60405180910390f35b61027e60048036038101906102799190612439565b610741565b005b61029a600480360381019061029591906123b3565b610a52565b6040516102aa9493929190612464565b60405180910390f35b6102bb610a7e565b6040516102c89190612502565b60405180910390f35b6102d9610aa3565b6040516102e69190612535565b60405180910390f35b6102f7610ab6565b60405161030491906123f6565b60405180910390f35b610327600480360381019061032291906123b3565b610abc565b6040516103369392919061254e565b60405180910390f35b610359600480360381019061035491906125ad565b610ae2565b005b610363610b3d565b60405161037091906123f6565b60405180910390f35b610393600480360381019061038e9190612439565b610b43565b005b6103af60048036038101906103aa91906125d8565b610e52565b005b6103b9610f3e565b6040516103c69190612625565b60405180910390f35b6103e960048036038101906103e491906125d8565b610f63565b6040516103f99493929190612464565b60405180910390f35b61040a610fa9565b60405161041791906123f6565b60405180910390f35b610428610faf565b60405161043591906123f6565b60405180910390f35b610458600480360381019061045391906123b3565b610fb5565b60405161046591906123f6565b60405180910390f35b610488600480360381019061048391906123b3565b610fca565b60405161049591906123f6565b60405180910390f35b6104a6610fdf565b6040516104b39190612535565b60405180910390f35b6104d660048036038101906104d191906123b3565b610ff1565b6040516104e391906123f6565b60405180910390f35b6104f4611006565b60405161050191906123f6565b60405180910390f35b61051261100c565b005b61052e600480360381019061052991906123b3565b61101f565b60405161053b91906123f6565b60405180910390f35b61054c611034565b60405161055991906123f6565b60405180910390f35b61057c60048036038101906105779190612679565b61103a565b005b61058661117d565b6040516105939190612625565b60405180910390f35b6105a46111a4565b6040516105b191906123f6565b60405180910390f35b6105c26111aa565b6040516105cf91906123f6565b60405180910390f35b6105e06111b0565b6040516105ed91906123f6565b60405180910390f35b610610600480360381019061060b9190612439565b6111b6565b005b61061a61168a565b60405161062791906123f6565b60405180910390f35b61064a60048036038101906106459190612866565b611690565b005b610666600480360381019061066191906128c0565b611a6b565b005b610670611d8e565b60405161067d91906123f6565b60405180910390f35b61068e611d94565b60405161069b91906123f6565b60405180910390f35b6106ac611d9a565b6040516106b991906123f6565b60405180910390f35b6106dc60048036038101906106d791906123b3565b611da0565b005b6106f860048036038101906106f391906123b3565b611e24565b60405161070591906123f6565b60405180910390f35b610716611e39565b60405161072391906123f6565b60405180910390f35b6015602052805f5260405f205f915090505481565b60115f9054906101000a900460ff1615610790576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161078790612958565b60405180910390fd5b610798611e3f565b601160019054906101000a900460ff166107e7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107de906129c0565b60405180910390fd5b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd33601b5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16846040518463ffffffff1660e01b8152600401610866939291906129de565b6020604051808303815f875af1158015610882573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108a69190612a27565b6108e5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108dc90612a9c565b60405180910390fd5b5f60185f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2090505f81600201540361098157428160020181905550606460195f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055506109d6565b600a60195f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546109ce9190612ae7565b925050819055505b81815f015f8282546109e89190612ae7565b925050819055504281600101819055503373ffffffffffffffffffffffffffffffffffffffff167f6afd9b8c734cbfeda8ba55afbdd1ac413bf617456b50196186371d2cc95b857283604051610a3e91906123f6565b60405180910390a250610a4f611e8e565b50565b6017602052805f5260405f205f91509050805f0154908060010154908060020154908060030154905084565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b601160019054906101000a900460ff1681565b600b5481565b6018602052805f5260405f205f91509050805f0154908060010154908060020154905083565b610aea611e97565b8060115f6101000a81548160ff0219169083151502179055507f0e2fb031ee032dc02d8011dc50b816eb450cf856abd8261680dac74f72165bd281604051610b329190612535565b60405180910390a150565b600a5481565b60115f9054906101000a900460ff1615610b92576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b8990612958565b60405180910390fd5b610b9a611e3f565b601160019054906101000a900460ff16610be9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610be0906129c0565b60405180910390fd5b5f60185f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f209050805f0154821115610c6f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c6690612b64565b60405180910390fd5b5f5f905062093a808260020154610c869190612ae7565b421015610caa576064600b5484610c9d9190612b82565b610ca79190612bf0565b90505b5f8184610cb79190612c20565b905083835f015f828254610ccb9190612c20565b92505081905550601b5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f3fef3a333836040518363ffffffff1660e01b8152600401610d2e929190612c53565b5f604051808303815f87803b158015610d45575f5ffd5b505af1158015610d57573d5f5f3e3d5ffd5b505050505f821115610df457601b5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f3fef3a3610da861117d565b846040518363ffffffff1660e01b8152600401610dc6929190612c53565b5f604051808303815f87803b158015610ddd575f5ffd5b505af1158015610def573d5f5f3e3d5ffd5b505050505b3373ffffffffffffffffffffffffffffffffffffffff167f933735aa8de6d7547d0126171b2f31b9c34dd00f3ecd4be85a0ba047db4fafef8284604051610e3c929190612c7a565b60405180910390a2505050610e4f611e8e565b50565b610e5a611e97565b5f8111610e68576064610e6b565b60785b60ff1660165f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508173ffffffffffffffffffffffffffffffffffffffff167fabcc9b515858a553f53609bb223669708665910a51030d923c842de23f09991360165f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054604051610f3291906123f6565b60405180910390a25050565b601b5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b601a602052815f5260405f208181548110610f7c575f80fd5b905f5260205f2090600402015f9150915050805f0154908060010154908060020154908060030154905084565b600d5481565b60065481565b6016602052805f5260405f205f915090505481565b6019602052805f5260405f205f915090505481565b60115f9054906101000a900460ff1681565b6014602052805f5260405f205f915090505481565b60095481565b611014611e97565b61101d5f611f1e565b565b6012602052805f5260405f205f915090505481565b600e5481565b611042611e97565b601160019054906101000a900460ff1615611092576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161108990612ceb565b60405180910390fd5b8760025f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555086600381905550856004819055505f6005819055505f600681905550846007819055505f6008819055508360098190555082600a8190555081600d8190555043600c8190555080601b5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001601160016101000a81548160ff0219169083151502179055505050505050505050565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600f5481565b600c5481565b60045481565b60115f9054906101000a900460ff1615611205576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111fc90612958565b60405180910390fd5b61120d611e3f565b601160019054906101000a900460ff1661125c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611253906129c0565b60405180910390fd5b8060125f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054146112db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112d290612d53565b60405180910390fd5b60125f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f81548092919061132890612d71565b91905055505f60185f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2090505f8160020154036113b3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113aa90612e02565b60405180910390fd5b5f8160010154426113c49190612c20565b90505f8111611408576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113ff90612e6a565b60405180910390fd5b5f60045490506009546008541115611439576064600a5460045461142c9190612b82565b6114369190612bf0565b90505b5f5f60165f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054146114c15760165f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20546114c4565b60645b9050606481836114d49190612b82565b6114de9190612bf0565b91505f8383865f01546114f19190612b82565b6114fb9190612b82565b9050606460195f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054826115489190612b82565b6115529190612bf0565b9050600e5485600101546115669190612ae7565b42111561159a575f6064600f548361157e9190612b82565b6115889190612bf0565b905080826115969190612c20565b9150505b42856001018190555060025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1933836040518363ffffffff1660e01b81526004016115ff929190612c53565b5f604051808303815f87803b158015611616575f5ffd5b505af1158015611628573d5f5f3e3d5ffd5b505050503373ffffffffffffffffffffffffffffffffffffffff167f4dd465eb9d4bf90caf3400cc334c731b4cef0aa7f013e5d72f20b0cec2e30ea98260405161167291906123f6565b60405180910390a25050505050611687611e8e565b50565b60055481565b60115f9054906101000a900460ff16156116df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116d690612958565b60405180910390fd5b6116e7611e3f565b601160019054906101000a900460ff16611736576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161172d906129c0565b60405180910390fd5b8160125f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054146117b5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117ac90612d53565b60405180910390fd5b6117c0338383611fdf565b6117ff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117f690612ed2565b60405180910390fd5b60125f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f81548092919061184c90612d71565b91905055505f60175f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20905060075481600301546118a39190612ae7565b4210156118e5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118dc90612f3a565b60405180910390fd5b5f816002015490505f811161192f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161192690612fa2565b60405180910390fd5b601054811115611974576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161196b9061300a565b60405180910390fd5b5f826002018190555042826003018190555060025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1933836040518363ffffffff1660e01b81526004016119e2929190612c53565b5f604051808303815f87803b1580156119f9575f5ffd5b505af1158015611a0b573d5f5f3e3d5ffd5b505050503373ffffffffffffffffffffffffffffffffffffffff167fb127973bf29d1dae6424fef4f7461e0b9c444636ab23a8392d9969500034a13d82604051611a5591906123f6565b60405180910390a25050611a67611e8e565b5050565b60115f9054906101000a900460ff1615611aba576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ab190612958565b60405180910390fd5b611ac2611e3f565b601160019054906101000a900460ff16611b11576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b08906129c0565b60405180910390fd5b600d54600c54611b219190612ae7565b4310611b36575f60068190555043600c819055505b600160055f828254611b489190612ae7565b925050819055508160065f828254611b609190612ae7565b925050819055508160085f828254611b789190612ae7565b925050819055505f60175f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2090506001815f015f828254611bd29190612ae7565b9250508190555082816001015f828254611bec9190612ae7565b925050819055505f60095460065410611c06576064611c09565b60965b60ff1690505f60648260035487611c209190612b82565b611c2a9190612b82565b611c349190612bf0565b905080836002015f828254611c499190612ae7565b925050819055508315611cba57606485611c639190612bf0565b60145f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254611cae9190612ae7565b92505081905550611d1a565b606485611cc79190612bf0565b60155f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254611d129190612ae7565b925050819055505b5f836003015403611d2f574283600301819055505b3373ffffffffffffffffffffffffffffffffffffffff167f4b85156045f2844cf6b638ff8a8ddb82c940ccdbe3c46e6e67d2583722c7dc718686604051611d77929190613028565b60405180910390a2505050611d8a611e8e565b5050565b60085481565b60105481565b60075481565b611da8611e97565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611e18575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401611e0f9190612625565b60405180910390fd5b611e2181611f1e565b50565b6013602052805f5260405f205f915090505481565b60035481565b600260015403611e84576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e7b90613099565b60405180910390fd5b6002600181905550565b60018081905550565b611e9f612079565b73ffffffffffffffffffffffffffffffffffffffff16611ebd61117d565b73ffffffffffffffffffffffffffffffffffffffff1614611f1c57611ee0612079565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401611f139190612625565b60405180910390fd5b565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f5f8484604051602001611ff492919061311c565b6040516020818303038152906040528051906020012090505f8160405160200161201e91906131c4565b6040516020818303038152906040528051906020012090508573ffffffffffffffffffffffffffffffffffffffff166120578286612080565b73ffffffffffffffffffffffffffffffffffffffff1614925050509392505050565b5f33905090565b5f5f5f5f61208e86866120aa565b92509250925061209e82826120ff565b82935050505092915050565b5f5f5f60418451036120ea575f5f5f602087015192506040870151915060608701515f1a90506120dc88828585612261565b9550955095505050506120f8565b5f600285515f1b9250925092505b9250925092565b5f6003811115612112576121116131e9565b5b826003811115612125576121246131e9565b5b031561225d576001600381111561213f5761213e6131e9565b5b826003811115612152576121516131e9565b5b03612189576040517ff645eedf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600381111561219d5761219c6131e9565b5b8260038111156121b0576121af6131e9565b5b036121f457805f1c6040517ffce698f70000000000000000000000000000000000000000000000000000000081526004016121eb91906123f6565b60405180910390fd5b600380811115612207576122066131e9565b5b82600381111561221a576122196131e9565b5b0361225c57806040517fd78bce0c0000000000000000000000000000000000000000000000000000000081526004016122539190613225565b60405180910390fd5b5b5050565b5f5f5f7f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0845f1c111561229d575f60038592509250925061233e565b5f6001888888886040515f81526020016040526040516122c09493929190613259565b6020604051602081039080840390855afa1580156122e0573d5f5f3e3d5ffd5b5050506020604051035190505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603612331575f60015f5f1b9350935093505061233e565b805f5f5f1b935093509350505b9450945094915050565b5f604051905090565b5f5ffd5b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61238282612359565b9050919050565b61239281612378565b811461239c575f5ffd5b50565b5f813590506123ad81612389565b92915050565b5f602082840312156123c8576123c7612351565b5b5f6123d58482850161239f565b91505092915050565b5f819050919050565b6123f0816123de565b82525050565b5f6020820190506124095f8301846123e7565b92915050565b612418816123de565b8114612422575f5ffd5b50565b5f813590506124338161240f565b92915050565b5f6020828403121561244e5761244d612351565b5b5f61245b84828501612425565b91505092915050565b5f6080820190506124775f8301876123e7565b61248460208301866123e7565b61249160408301856123e7565b61249e60608301846123e7565b95945050505050565b5f819050919050565b5f6124ca6124c56124c084612359565b6124a7565b612359565b9050919050565b5f6124db826124b0565b9050919050565b5f6124ec826124d1565b9050919050565b6124fc816124e2565b82525050565b5f6020820190506125155f8301846124f3565b92915050565b5f8115159050919050565b61252f8161251b565b82525050565b5f6020820190506125485f830184612526565b92915050565b5f6060820190506125615f8301866123e7565b61256e60208301856123e7565b61257b60408301846123e7565b949350505050565b61258c8161251b565b8114612596575f5ffd5b50565b5f813590506125a781612583565b92915050565b5f602082840312156125c2576125c1612351565b5b5f6125cf84828501612599565b91505092915050565b5f5f604083850312156125ee576125ed612351565b5b5f6125fb8582860161239f565b925050602061260c85828601612425565b9150509250929050565b61261f81612378565b82525050565b5f6020820190506126385f830184612616565b92915050565b5f61264882612378565b9050919050565b6126588161263e565b8114612662575f5ffd5b50565b5f813590506126738161264f565b92915050565b5f5f5f5f5f5f5f5f610100898b03121561269657612695612351565b5b5f6126a38b828c01612665565b98505060206126b48b828c01612425565b97505060406126c58b828c01612425565b96505060606126d68b828c01612425565b95505060806126e78b828c01612425565b94505060a06126f88b828c01612425565b93505060c06127098b828c01612425565b92505060e061271a8b828c0161239f565b9150509295985092959890939650565b5f5ffd5b5f5ffd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b61277882612732565b810181811067ffffffffffffffff8211171561279757612796612742565b5b80604052505050565b5f6127a9612348565b90506127b5828261276f565b919050565b5f67ffffffffffffffff8211156127d4576127d3612742565b5b6127dd82612732565b9050602081019050919050565b828183375f83830152505050565b5f61280a612805846127ba565b6127a0565b9050828152602081018484840111156128265761282561272e565b5b6128318482856127ea565b509392505050565b5f82601f83011261284d5761284c61272a565b5b813561285d8482602086016127f8565b91505092915050565b5f5f6040838503121561287c5761287b612351565b5b5f61288985828601612425565b925050602083013567ffffffffffffffff8111156128aa576128a9612355565b5b6128b685828601612839565b9150509250929050565b5f5f604083850312156128d6576128d5612351565b5b5f6128e385828601612425565b92505060206128f485828601612599565b9150509250929050565b5f82825260208201905092915050565b7f436f6e74726163742069732070617573656400000000000000000000000000005f82015250565b5f6129426012836128fe565b915061294d8261290e565b602082019050919050565b5f6020820190508181035f83015261296f81612936565b9050919050565b7f4e6f7420696e697469616c697a656400000000000000000000000000000000005f82015250565b5f6129aa600f836128fe565b91506129b582612976565b602082019050919050565b5f6020820190508181035f8301526129d78161299e565b9050919050565b5f6060820190506129f15f830186612616565b6129fe6020830185612616565b612a0b60408301846123e7565b949350505050565b5f81519050612a2181612583565b92915050565b5f60208284031215612a3c57612a3b612351565b5b5f612a4984828501612a13565b91505092915050565b7f5472616e73666572206661696c656400000000000000000000000000000000005f82015250565b5f612a86600f836128fe565b9150612a9182612a52565b602082019050919050565b5f6020820190508181035f830152612ab381612a7a565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f612af1826123de565b9150612afc836123de565b9250828201905080821115612b1457612b13612aba565b5b92915050565b7f496e73756666696369656e74207374616b656420616d6f756e740000000000005f82015250565b5f612b4e601a836128fe565b9150612b5982612b1a565b602082019050919050565b5f6020820190508181035f830152612b7b81612b42565b9050919050565b5f612b8c826123de565b9150612b97836123de565b9250828202612ba5816123de565b91508282048414831517612bbc57612bbb612aba565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f612bfa826123de565b9150612c05836123de565b925082612c1557612c14612bc3565b5b828204905092915050565b5f612c2a826123de565b9150612c35836123de565b9250828203905081811115612c4d57612c4c612aba565b5b92915050565b5f604082019050612c665f830185612616565b612c7360208301846123e7565b9392505050565b5f604082019050612c8d5f8301856123e7565b612c9a60208301846123e7565b9392505050565b7f416c726561647920696e697469616c697a6564000000000000000000000000005f82015250565b5f612cd56013836128fe565b9150612ce082612ca1565b602082019050919050565b5f6020820190508181035f830152612d0281612cc9565b9050919050565b7f496e76616c6964206e6f6e6365000000000000000000000000000000000000005f82015250565b5f612d3d600d836128fe565b9150612d4882612d09565b602082019050919050565b5f6020820190508181035f830152612d6a81612d31565b9050919050565b5f612d7b826123de565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612dad57612dac612aba565b5b600182019050919050565b7f4e6f207374616b6520666f756e640000000000000000000000000000000000005f82015250565b5f612dec600e836128fe565b9150612df782612db8565b602082019050919050565b5f6020820190508181035f830152612e1981612de0565b9050919050565b7f4e6f2074696d6520656c617073656400000000000000000000000000000000005f82015250565b5f612e54600f836128fe565b9150612e5f82612e20565b602082019050919050565b5f6020820190508181035f830152612e8181612e48565b9050919050565b7f496e76616c6964207369676e61747572650000000000000000000000000000005f82015250565b5f612ebc6011836128fe565b9150612ec782612e88565b602082019050919050565b5f6020820190508181035f830152612ee981612eb0565b9050919050565b7f45706f6368206475726174696f6e206e6f7420656e64656400000000000000005f82015250565b5f612f246018836128fe565b9150612f2f82612ef0565b602082019050919050565b5f6020820190508181035f830152612f5181612f18565b9050919050565b7f4e6f2070656e64696e67207265776172647300000000000000000000000000005f82015250565b5f612f8c6012836128fe565b9150612f9782612f58565b602082019050919050565b5f6020820190508181035f830152612fb981612f80565b9050919050565b7f5265776172642065786365656473206d617820636c61696d61626c65000000005f82015250565b5f612ff4601c836128fe565b9150612fff82612fc0565b602082019050919050565b5f6020820190508181035f83015261302181612fe8565b9050919050565b5f60408201905061303b5f8301856123e7565b6130486020830184612526565b9392505050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f613083601f836128fe565b915061308e8261304f565b602082019050919050565b5f6020820190508181035f8301526130b081613077565b9050919050565b5f8160601b9050919050565b5f6130cd826130b7565b9050919050565b5f6130de826130c3565b9050919050565b6130f66130f182612378565b6130d4565b82525050565b5f819050919050565b613116613111826123de565b6130fc565b82525050565b5f61312782856130e5565b6014820191506131378284613105565b6020820191508190509392505050565b5f81905092915050565b7f19457468657265756d205369676e6564204d6573736167653a0a3332000000005f82015250565b5f613185601c83613147565b915061319082613151565b601c82019050919050565b5f819050919050565b5f819050919050565b6131be6131b98261319b565b6131a4565b82525050565b5f6131ce82613179565b91506131da82846131ad565b60208201915081905092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b61321f8161319b565b82525050565b5f6020820190506132385f830184613216565b92915050565b5f60ff82169050919050565b6132538161323e565b82525050565b5f60808201905061326c5f830187613216565b613279602083018661324a565b6132866040830185613216565b6132936060830184613216565b9594505050505056fea26469706673582212206a87094f0f185b690d1d9958d3f3862b780c5f9a998921fdb10d239be1937c3264736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x230 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x64CB6142 GT PUSH2 0x12E JUMPI DUP1 PUSH4 0xDD69BECD GT PUSH2 0xB6 JUMPI DUP1 PUSH4 0xF03F80C3 GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xF03F80C3 EQ PUSH2 0x686 JUMPI DUP1 PUSH4 0xF1EA7692 EQ PUSH2 0x6A4 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x6C2 JUMPI DUP1 PUSH4 0xF3482650 EQ PUSH2 0x6DE JUMPI DUP1 PUSH4 0xF6CC5157 EQ PUSH2 0x70E JUMPI PUSH2 0x230 JUMP JUMPDEST DUP1 PUSH4 0xDD69BECD EQ PUSH2 0x5F6 JUMPI DUP1 PUSH4 0xE275C997 EQ PUSH2 0x612 JUMPI DUP1 PUSH4 0xE90B0D76 EQ PUSH2 0x630 JUMPI DUP1 PUSH4 0xE927E7C0 EQ PUSH2 0x64C JUMPI DUP1 PUSH4 0xEAB35B77 EQ PUSH2 0x668 JUMPI PUSH2 0x230 JUMP JUMPDEST DUP1 PUSH4 0x848FF684 GT PUSH2 0xFD JUMPI DUP1 PUSH4 0x848FF684 EQ PUSH2 0x562 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x57E JUMPI DUP1 PUSH4 0x94D9B235 EQ PUSH2 0x59C JUMPI DUP1 PUSH4 0xC2362DD5 EQ PUSH2 0x5BA JUMPI DUP1 PUSH4 0xCCC8362C EQ PUSH2 0x5D8 JUMPI PUSH2 0x230 JUMP JUMPDEST DUP1 PUSH4 0x64CB6142 EQ PUSH2 0x4EC JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x50A JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x514 JUMPI DUP1 PUSH4 0x8119185B EQ PUSH2 0x544 JUMPI PUSH2 0x230 JUMP JUMPDEST DUP1 PUSH4 0x25D5971F GT PUSH2 0x1BC JUMPI DUP1 PUSH4 0x519445E2 GT PUSH2 0x180 JUMPI DUP1 PUSH4 0x519445E2 EQ PUSH2 0x420 JUMPI DUP1 PUSH4 0x5829B3C7 EQ PUSH2 0x43E JUMPI DUP1 PUSH4 0x58BA9D27 EQ PUSH2 0x46E JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x49E JUMPI DUP1 PUSH4 0x5E2A9FA2 EQ PUSH2 0x4BC JUMPI PUSH2 0x230 JUMP JUMPDEST DUP1 PUSH4 0x25D5971F EQ PUSH2 0x379 JUMPI DUP1 PUSH4 0x31FDC2BA EQ PUSH2 0x395 JUMPI DUP1 PUSH4 0x430BF08A EQ PUSH2 0x3B1 JUMPI DUP1 PUSH4 0x45626BD6 EQ PUSH2 0x3CF JUMPI DUP1 PUSH4 0x4FF0876A EQ PUSH2 0x402 JUMPI PUSH2 0x230 JUMP JUMPDEST DUP1 PUSH4 0x158EF93E GT PUSH2 0x203 JUMPI DUP1 PUSH4 0x158EF93E EQ PUSH2 0x2D1 JUMPI DUP1 PUSH4 0x16330D40 EQ PUSH2 0x2EF JUMPI DUP1 PUSH4 0x16934FC4 EQ PUSH2 0x30D JUMPI DUP1 PUSH4 0x16C38B3C EQ PUSH2 0x33F JUMPI DUP1 PUSH4 0x1BFF38CD EQ PUSH2 0x35B JUMPI PUSH2 0x230 JUMP JUMPDEST DUP1 PUSH4 0x11A4568 EQ PUSH2 0x234 JUMPI DUP1 PUSH4 0x524FB7E EQ PUSH2 0x264 JUMPI DUP1 PUSH4 0x5C50A35 EQ PUSH2 0x280 JUMPI DUP1 PUSH4 0xFD7BF50 EQ PUSH2 0x2B3 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x24E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x249 SWAP2 SWAP1 PUSH2 0x23B3 JUMP JUMPDEST PUSH2 0x72C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25B SWAP2 SWAP1 PUSH2 0x23F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x27E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x279 SWAP2 SWAP1 PUSH2 0x2439 JUMP JUMPDEST PUSH2 0x741 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x29A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x295 SWAP2 SWAP1 PUSH2 0x23B3 JUMP JUMPDEST PUSH2 0xA52 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AA SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2464 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BB PUSH2 0xA7E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C8 SWAP2 SWAP1 PUSH2 0x2502 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D9 PUSH2 0xAA3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E6 SWAP2 SWAP1 PUSH2 0x2535 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F7 PUSH2 0xAB6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x304 SWAP2 SWAP1 PUSH2 0x23F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x327 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x322 SWAP2 SWAP1 PUSH2 0x23B3 JUMP JUMPDEST PUSH2 0xABC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x336 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x254E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x359 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x354 SWAP2 SWAP1 PUSH2 0x25AD JUMP JUMPDEST PUSH2 0xAE2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x363 PUSH2 0xB3D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x370 SWAP2 SWAP1 PUSH2 0x23F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x393 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x38E SWAP2 SWAP1 PUSH2 0x2439 JUMP JUMPDEST PUSH2 0xB43 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3AF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3AA SWAP2 SWAP1 PUSH2 0x25D8 JUMP JUMPDEST PUSH2 0xE52 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3B9 PUSH2 0xF3E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C6 SWAP2 SWAP1 PUSH2 0x2625 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3E4 SWAP2 SWAP1 PUSH2 0x25D8 JUMP JUMPDEST PUSH2 0xF63 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F9 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2464 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x40A PUSH2 0xFA9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x417 SWAP2 SWAP1 PUSH2 0x23F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x428 PUSH2 0xFAF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x435 SWAP2 SWAP1 PUSH2 0x23F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x458 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x453 SWAP2 SWAP1 PUSH2 0x23B3 JUMP JUMPDEST PUSH2 0xFB5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x465 SWAP2 SWAP1 PUSH2 0x23F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x488 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x483 SWAP2 SWAP1 PUSH2 0x23B3 JUMP JUMPDEST PUSH2 0xFCA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x495 SWAP2 SWAP1 PUSH2 0x23F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4A6 PUSH2 0xFDF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4B3 SWAP2 SWAP1 PUSH2 0x2535 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4D6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4D1 SWAP2 SWAP1 PUSH2 0x23B3 JUMP JUMPDEST PUSH2 0xFF1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4E3 SWAP2 SWAP1 PUSH2 0x23F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4F4 PUSH2 0x1006 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x501 SWAP2 SWAP1 PUSH2 0x23F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x512 PUSH2 0x100C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x52E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x529 SWAP2 SWAP1 PUSH2 0x23B3 JUMP JUMPDEST PUSH2 0x101F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x53B SWAP2 SWAP1 PUSH2 0x23F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x54C PUSH2 0x1034 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x559 SWAP2 SWAP1 PUSH2 0x23F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x57C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x577 SWAP2 SWAP1 PUSH2 0x2679 JUMP JUMPDEST PUSH2 0x103A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x586 PUSH2 0x117D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x593 SWAP2 SWAP1 PUSH2 0x2625 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5A4 PUSH2 0x11A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B1 SWAP2 SWAP1 PUSH2 0x23F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5C2 PUSH2 0x11AA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5CF SWAP2 SWAP1 PUSH2 0x23F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5E0 PUSH2 0x11B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5ED SWAP2 SWAP1 PUSH2 0x23F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x610 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x60B SWAP2 SWAP1 PUSH2 0x2439 JUMP JUMPDEST PUSH2 0x11B6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x61A PUSH2 0x168A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x627 SWAP2 SWAP1 PUSH2 0x23F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x64A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x645 SWAP2 SWAP1 PUSH2 0x2866 JUMP JUMPDEST PUSH2 0x1690 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x666 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x661 SWAP2 SWAP1 PUSH2 0x28C0 JUMP JUMPDEST PUSH2 0x1A6B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x670 PUSH2 0x1D8E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x67D SWAP2 SWAP1 PUSH2 0x23F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x68E PUSH2 0x1D94 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x69B SWAP2 SWAP1 PUSH2 0x23F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6AC PUSH2 0x1D9A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6B9 SWAP2 SWAP1 PUSH2 0x23F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6DC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6D7 SWAP2 SWAP1 PUSH2 0x23B3 JUMP JUMPDEST PUSH2 0x1DA0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6F8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6F3 SWAP2 SWAP1 PUSH2 0x23B3 JUMP JUMPDEST PUSH2 0x1E24 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x705 SWAP2 SWAP1 PUSH2 0x23F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x716 PUSH2 0x1E39 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x723 SWAP2 SWAP1 PUSH2 0x23F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x15 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x11 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x790 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x787 SWAP1 PUSH2 0x2958 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x798 PUSH2 0x1E3F JUMP JUMPDEST PUSH1 0x11 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x7E7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7DE SWAP1 PUSH2 0x29C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER PUSH1 0x1B PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x866 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x29DE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x882 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8A6 SWAP2 SWAP1 PUSH2 0x2A27 JUMP JUMPDEST PUSH2 0x8E5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8DC SWAP1 PUSH2 0x2A9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x18 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 DUP2 PUSH1 0x2 ADD SLOAD SUB PUSH2 0x981 JUMPI TIMESTAMP DUP2 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x64 PUSH1 0x19 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x9D6 JUMP JUMPDEST PUSH1 0xA PUSH1 0x19 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x9CE SWAP2 SWAP1 PUSH2 0x2AE7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 DUP2 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x9E8 SWAP2 SWAP1 PUSH2 0x2AE7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP TIMESTAMP DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x6AFD9B8C734CBFEDA8BA55AFBDD1AC413BF617456B50196186371D2CC95B8572 DUP4 PUSH1 0x40 MLOAD PUSH2 0xA3E SWAP2 SWAP1 PUSH2 0x23F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH2 0xA4F PUSH2 0x1E8E JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x17 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 POP DUP5 JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x11 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH1 0x18 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH2 0xAEA PUSH2 0x1E97 JUMP JUMPDEST DUP1 PUSH1 0x11 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xE2FB031EE032DC02D8011DC50B816EB450CF856ABD8261680DAC74F72165BD2 DUP2 PUSH1 0x40 MLOAD PUSH2 0xB32 SWAP2 SWAP1 PUSH2 0x2535 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x11 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xB92 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB89 SWAP1 PUSH2 0x2958 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB9A PUSH2 0x1E3F JUMP JUMPDEST PUSH1 0x11 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xBE9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBE0 SWAP1 PUSH2 0x29C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x18 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP DUP1 PUSH0 ADD SLOAD DUP3 GT ISZERO PUSH2 0xC6F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC66 SWAP1 PUSH2 0x2B64 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH0 SWAP1 POP PUSH3 0x93A80 DUP3 PUSH1 0x2 ADD SLOAD PUSH2 0xC86 SWAP2 SWAP1 PUSH2 0x2AE7 JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0xCAA JUMPI PUSH1 0x64 PUSH1 0xB SLOAD DUP5 PUSH2 0xC9D SWAP2 SWAP1 PUSH2 0x2B82 JUMP JUMPDEST PUSH2 0xCA7 SWAP2 SWAP1 PUSH2 0x2BF0 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH0 DUP2 DUP5 PUSH2 0xCB7 SWAP2 SWAP1 PUSH2 0x2C20 JUMP JUMPDEST SWAP1 POP DUP4 DUP4 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0xCCB SWAP2 SWAP1 PUSH2 0x2C20 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1B PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF3FEF3A3 CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD2E SWAP3 SWAP2 SWAP1 PUSH2 0x2C53 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD45 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD57 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH0 DUP3 GT ISZERO PUSH2 0xDF4 JUMPI PUSH1 0x1B PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF3FEF3A3 PUSH2 0xDA8 PUSH2 0x117D JUMP JUMPDEST DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDC6 SWAP3 SWAP2 SWAP1 PUSH2 0x2C53 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDDD JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xDEF JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x933735AA8DE6D7547D0126171B2F31B9C34DD00F3ECD4BE85A0BA047DB4FAFEF DUP3 DUP5 PUSH1 0x40 MLOAD PUSH2 0xE3C SWAP3 SWAP2 SWAP1 PUSH2 0x2C7A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP PUSH2 0xE4F PUSH2 0x1E8E JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xE5A PUSH2 0x1E97 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0xE68 JUMPI PUSH1 0x64 PUSH2 0xE6B JUMP JUMPDEST PUSH1 0x78 JUMPDEST PUSH1 0xFF AND PUSH1 0x16 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xABCC9B515858A553F53609BB223669708665910A51030D923C842DE23F099913 PUSH1 0x16 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH1 0x40 MLOAD PUSH2 0xF32 SWAP2 SWAP1 PUSH2 0x23F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x1B PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1A PUSH1 0x20 MSTORE DUP2 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xF7C JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH0 SWAP2 POP SWAP2 POP POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 POP DUP5 JUMP JUMPDEST PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x16 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x19 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x11 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x14 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1014 PUSH2 0x1E97 JUMP JUMPDEST PUSH2 0x101D PUSH0 PUSH2 0x1F1E JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x12 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0xE SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1042 PUSH2 0x1E97 JUMP JUMPDEST PUSH1 0x11 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1092 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1089 SWAP1 PUSH2 0x2CEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP8 PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP7 PUSH1 0x3 DUP2 SWAP1 SSTORE POP DUP6 PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x5 DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x6 DUP2 SWAP1 SSTORE POP DUP5 PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x8 DUP2 SWAP1 SSTORE POP DUP4 PUSH1 0x9 DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0xA DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0xD DUP2 SWAP1 SSTORE POP NUMBER PUSH1 0xC DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x1B PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x11 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xF SLOAD DUP2 JUMP JUMPDEST PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x11 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1205 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11FC SWAP1 PUSH2 0x2958 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x120D PUSH2 0x1E3F JUMP JUMPDEST PUSH1 0x11 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x125C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1253 SWAP1 PUSH2 0x29C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x12 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD EQ PUSH2 0x12DB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12D2 SWAP1 PUSH2 0x2D53 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x12 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x1328 SWAP1 PUSH2 0x2D71 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH0 PUSH1 0x18 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 DUP2 PUSH1 0x2 ADD SLOAD SUB PUSH2 0x13B3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13AA SWAP1 PUSH2 0x2E02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x1 ADD SLOAD TIMESTAMP PUSH2 0x13C4 SWAP2 SWAP1 PUSH2 0x2C20 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT PUSH2 0x1408 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13FF SWAP1 PUSH2 0x2E6A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x4 SLOAD SWAP1 POP PUSH1 0x9 SLOAD PUSH1 0x8 SLOAD GT ISZERO PUSH2 0x1439 JUMPI PUSH1 0x64 PUSH1 0xA SLOAD PUSH1 0x4 SLOAD PUSH2 0x142C SWAP2 SWAP1 PUSH2 0x2B82 JUMP JUMPDEST PUSH2 0x1436 SWAP2 SWAP1 PUSH2 0x2BF0 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH0 PUSH0 PUSH1 0x16 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD EQ PUSH2 0x14C1 JUMPI PUSH1 0x16 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x14C4 JUMP JUMPDEST PUSH1 0x64 JUMPDEST SWAP1 POP PUSH1 0x64 DUP2 DUP4 PUSH2 0x14D4 SWAP2 SWAP1 PUSH2 0x2B82 JUMP JUMPDEST PUSH2 0x14DE SWAP2 SWAP1 PUSH2 0x2BF0 JUMP JUMPDEST SWAP2 POP PUSH0 DUP4 DUP4 DUP7 PUSH0 ADD SLOAD PUSH2 0x14F1 SWAP2 SWAP1 PUSH2 0x2B82 JUMP JUMPDEST PUSH2 0x14FB SWAP2 SWAP1 PUSH2 0x2B82 JUMP JUMPDEST SWAP1 POP PUSH1 0x64 PUSH1 0x19 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD DUP3 PUSH2 0x1548 SWAP2 SWAP1 PUSH2 0x2B82 JUMP JUMPDEST PUSH2 0x1552 SWAP2 SWAP1 PUSH2 0x2BF0 JUMP JUMPDEST SWAP1 POP PUSH1 0xE SLOAD DUP6 PUSH1 0x1 ADD SLOAD PUSH2 0x1566 SWAP2 SWAP1 PUSH2 0x2AE7 JUMP JUMPDEST TIMESTAMP GT ISZERO PUSH2 0x159A JUMPI PUSH0 PUSH1 0x64 PUSH1 0xF SLOAD DUP4 PUSH2 0x157E SWAP2 SWAP1 PUSH2 0x2B82 JUMP JUMPDEST PUSH2 0x1588 SWAP2 SWAP1 PUSH2 0x2BF0 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 PUSH2 0x1596 SWAP2 SWAP1 PUSH2 0x2C20 JUMP JUMPDEST SWAP2 POP POP JUMPDEST TIMESTAMP DUP6 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x40C10F19 CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15FF SWAP3 SWAP2 SWAP1 PUSH2 0x2C53 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1616 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1628 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4DD465EB9D4BF90CAF3400CC334C731B4CEF0AA7F013E5D72F20B0CEC2E30EA9 DUP3 PUSH1 0x40 MLOAD PUSH2 0x1672 SWAP2 SWAP1 PUSH2 0x23F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP PUSH2 0x1687 PUSH2 0x1E8E JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x11 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x16DF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16D6 SWAP1 PUSH2 0x2958 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x16E7 PUSH2 0x1E3F JUMP JUMPDEST PUSH1 0x11 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1736 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x172D SWAP1 PUSH2 0x29C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x12 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD EQ PUSH2 0x17B5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17AC SWAP1 PUSH2 0x2D53 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x17C0 CALLER DUP4 DUP4 PUSH2 0x1FDF JUMP JUMPDEST PUSH2 0x17FF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17F6 SWAP1 PUSH2 0x2ED2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x12 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x184C SWAP1 PUSH2 0x2D71 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH0 PUSH1 0x17 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH1 0x7 SLOAD DUP2 PUSH1 0x3 ADD SLOAD PUSH2 0x18A3 SWAP2 SWAP1 PUSH2 0x2AE7 JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x18E5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18DC SWAP1 PUSH2 0x2F3A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x2 ADD SLOAD SWAP1 POP PUSH0 DUP2 GT PUSH2 0x192F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1926 SWAP1 PUSH2 0x2FA2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x10 SLOAD DUP2 GT ISZERO PUSH2 0x1974 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x196B SWAP1 PUSH2 0x300A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP TIMESTAMP DUP3 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x40C10F19 CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19E2 SWAP3 SWAP2 SWAP1 PUSH2 0x2C53 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x19F9 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1A0B JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xB127973BF29D1DAE6424FEF4F7461E0B9C444636AB23A8392D9969500034A13D DUP3 PUSH1 0x40 MLOAD PUSH2 0x1A55 SWAP2 SWAP1 PUSH2 0x23F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH2 0x1A67 PUSH2 0x1E8E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x11 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1ABA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AB1 SWAP1 PUSH2 0x2958 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1AC2 PUSH2 0x1E3F JUMP JUMPDEST PUSH1 0x11 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1B11 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B08 SWAP1 PUSH2 0x29C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xD SLOAD PUSH1 0xC SLOAD PUSH2 0x1B21 SWAP2 SWAP1 PUSH2 0x2AE7 JUMP JUMPDEST NUMBER LT PUSH2 0x1B36 JUMPI PUSH0 PUSH1 0x6 DUP2 SWAP1 SSTORE POP NUMBER PUSH1 0xC DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x5 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1B48 SWAP2 SWAP1 PUSH2 0x2AE7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x6 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1B60 SWAP2 SWAP1 PUSH2 0x2AE7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x8 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1B78 SWAP2 SWAP1 PUSH2 0x2AE7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x17 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH1 0x1 DUP2 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1BD2 SWAP2 SWAP1 PUSH2 0x2AE7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 DUP2 PUSH1 0x1 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1BEC SWAP2 SWAP1 PUSH2 0x2AE7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x9 SLOAD PUSH1 0x6 SLOAD LT PUSH2 0x1C06 JUMPI PUSH1 0x64 PUSH2 0x1C09 JUMP JUMPDEST PUSH1 0x96 JUMPDEST PUSH1 0xFF AND SWAP1 POP PUSH0 PUSH1 0x64 DUP3 PUSH1 0x3 SLOAD DUP8 PUSH2 0x1C20 SWAP2 SWAP1 PUSH2 0x2B82 JUMP JUMPDEST PUSH2 0x1C2A SWAP2 SWAP1 PUSH2 0x2B82 JUMP JUMPDEST PUSH2 0x1C34 SWAP2 SWAP1 PUSH2 0x2BF0 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1C49 SWAP2 SWAP1 PUSH2 0x2AE7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x1CBA JUMPI PUSH1 0x64 DUP6 PUSH2 0x1C63 SWAP2 SWAP1 PUSH2 0x2BF0 JUMP JUMPDEST PUSH1 0x14 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1CAE SWAP2 SWAP1 PUSH2 0x2AE7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1D1A JUMP JUMPDEST PUSH1 0x64 DUP6 PUSH2 0x1CC7 SWAP2 SWAP1 PUSH2 0x2BF0 JUMP JUMPDEST PUSH1 0x15 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1D12 SWAP2 SWAP1 PUSH2 0x2AE7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH0 DUP4 PUSH1 0x3 ADD SLOAD SUB PUSH2 0x1D2F JUMPI TIMESTAMP DUP4 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4B85156045F2844CF6B638FF8A8DDB82C940CCDBE3C46E6E67D2583722C7DC71 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x1D77 SWAP3 SWAP2 SWAP1 PUSH2 0x3028 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP PUSH2 0x1D8A PUSH2 0x1E8E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x10 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1DA8 PUSH2 0x1E97 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1E18 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E0F SWAP2 SWAP1 PUSH2 0x2625 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1E21 DUP2 PUSH2 0x1F1E JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x13 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x1E84 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E7B SWAP1 PUSH2 0x3099 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x1E9F PUSH2 0x2079 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1EBD PUSH2 0x117D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1F1C JUMPI PUSH2 0x1EE0 PUSH2 0x2079 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F13 SWAP2 SWAP1 PUSH2 0x2625 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH0 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1FF4 SWAP3 SWAP2 SWAP1 PUSH2 0x311C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH0 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x201E SWAP2 SWAP1 PUSH2 0x31C4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2057 DUP3 DUP7 PUSH2 0x2080 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH2 0x208E DUP7 DUP7 PUSH2 0x20AA JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x209E DUP3 DUP3 PUSH2 0x20FF JUMP JUMPDEST DUP3 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x41 DUP5 MLOAD SUB PUSH2 0x20EA JUMPI PUSH0 PUSH0 PUSH0 PUSH1 0x20 DUP8 ADD MLOAD SWAP3 POP PUSH1 0x40 DUP8 ADD MLOAD SWAP2 POP PUSH1 0x60 DUP8 ADD MLOAD PUSH0 BYTE SWAP1 POP PUSH2 0x20DC DUP9 DUP3 DUP6 DUP6 PUSH2 0x2261 JUMP JUMPDEST SWAP6 POP SWAP6 POP SWAP6 POP POP POP POP PUSH2 0x20F8 JUMP JUMPDEST PUSH0 PUSH1 0x2 DUP6 MLOAD PUSH0 SHL SWAP3 POP SWAP3 POP SWAP3 POP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2112 JUMPI PUSH2 0x2111 PUSH2 0x31E9 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2125 JUMPI PUSH2 0x2124 PUSH2 0x31E9 JUMP JUMPDEST JUMPDEST SUB ISZERO PUSH2 0x225D JUMPI PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x213F JUMPI PUSH2 0x213E PUSH2 0x31E9 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2152 JUMPI PUSH2 0x2151 PUSH2 0x31E9 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x2189 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF645EEDF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x219D JUMPI PUSH2 0x219C PUSH2 0x31E9 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x21B0 JUMPI PUSH2 0x21AF PUSH2 0x31E9 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x21F4 JUMPI DUP1 PUSH0 SHR PUSH1 0x40 MLOAD PUSH32 0xFCE698F700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x21EB SWAP2 SWAP1 PUSH2 0x23F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x2207 JUMPI PUSH2 0x2206 PUSH2 0x31E9 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x221A JUMPI PUSH2 0x2219 PUSH2 0x31E9 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x225C JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD78BCE0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2253 SWAP2 SWAP1 PUSH2 0x3225 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 PUSH0 SHR GT ISZERO PUSH2 0x229D JUMPI PUSH0 PUSH1 0x3 DUP6 SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x233E JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x22C0 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3259 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x22E0 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2331 JUMPI PUSH0 PUSH1 0x1 PUSH0 PUSH0 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP PUSH2 0x233E JUMP JUMPDEST DUP1 PUSH0 PUSH0 PUSH0 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2382 DUP3 PUSH2 0x2359 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2392 DUP2 PUSH2 0x2378 JUMP JUMPDEST DUP2 EQ PUSH2 0x239C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x23AD DUP2 PUSH2 0x2389 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x23C8 JUMPI PUSH2 0x23C7 PUSH2 0x2351 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x23D5 DUP5 DUP3 DUP6 ADD PUSH2 0x239F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x23F0 DUP2 PUSH2 0x23DE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2409 PUSH0 DUP4 ADD DUP5 PUSH2 0x23E7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2418 DUP2 PUSH2 0x23DE JUMP JUMPDEST DUP2 EQ PUSH2 0x2422 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2433 DUP2 PUSH2 0x240F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x244E JUMPI PUSH2 0x244D PUSH2 0x2351 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x245B DUP5 DUP3 DUP6 ADD PUSH2 0x2425 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2477 PUSH0 DUP4 ADD DUP8 PUSH2 0x23E7 JUMP JUMPDEST PUSH2 0x2484 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x23E7 JUMP JUMPDEST PUSH2 0x2491 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x23E7 JUMP JUMPDEST PUSH2 0x249E PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x23E7 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x24CA PUSH2 0x24C5 PUSH2 0x24C0 DUP5 PUSH2 0x2359 JUMP JUMPDEST PUSH2 0x24A7 JUMP JUMPDEST PUSH2 0x2359 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x24DB DUP3 PUSH2 0x24B0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x24EC DUP3 PUSH2 0x24D1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x24FC DUP2 PUSH2 0x24E2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2515 PUSH0 DUP4 ADD DUP5 PUSH2 0x24F3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x252F DUP2 PUSH2 0x251B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2548 PUSH0 DUP4 ADD DUP5 PUSH2 0x2526 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2561 PUSH0 DUP4 ADD DUP7 PUSH2 0x23E7 JUMP JUMPDEST PUSH2 0x256E PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x23E7 JUMP JUMPDEST PUSH2 0x257B PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x23E7 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x258C DUP2 PUSH2 0x251B JUMP JUMPDEST DUP2 EQ PUSH2 0x2596 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x25A7 DUP2 PUSH2 0x2583 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x25C2 JUMPI PUSH2 0x25C1 PUSH2 0x2351 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x25CF DUP5 DUP3 DUP6 ADD PUSH2 0x2599 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x25EE JUMPI PUSH2 0x25ED PUSH2 0x2351 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x25FB DUP6 DUP3 DUP7 ADD PUSH2 0x239F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x260C DUP6 DUP3 DUP7 ADD PUSH2 0x2425 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x261F DUP2 PUSH2 0x2378 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2638 PUSH0 DUP4 ADD DUP5 PUSH2 0x2616 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2648 DUP3 PUSH2 0x2378 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2658 DUP2 PUSH2 0x263E JUMP JUMPDEST DUP2 EQ PUSH2 0x2662 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2673 DUP2 PUSH2 0x264F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH2 0x100 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x2696 JUMPI PUSH2 0x2695 PUSH2 0x2351 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x26A3 DUP12 DUP3 DUP13 ADD PUSH2 0x2665 JUMP JUMPDEST SWAP9 POP POP PUSH1 0x20 PUSH2 0x26B4 DUP12 DUP3 DUP13 ADD PUSH2 0x2425 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x40 PUSH2 0x26C5 DUP12 DUP3 DUP13 ADD PUSH2 0x2425 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x60 PUSH2 0x26D6 DUP12 DUP3 DUP13 ADD PUSH2 0x2425 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x80 PUSH2 0x26E7 DUP12 DUP3 DUP13 ADD PUSH2 0x2425 JUMP JUMPDEST SWAP5 POP POP PUSH1 0xA0 PUSH2 0x26F8 DUP12 DUP3 DUP13 ADD PUSH2 0x2425 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xC0 PUSH2 0x2709 DUP12 DUP3 DUP13 ADD PUSH2 0x2425 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xE0 PUSH2 0x271A DUP12 DUP3 DUP13 ADD PUSH2 0x239F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 SWAP1 SWAP4 SWAP7 POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x2778 DUP3 PUSH2 0x2732 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2797 JUMPI PUSH2 0x2796 PUSH2 0x2742 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x27A9 PUSH2 0x2348 JUMP JUMPDEST SWAP1 POP PUSH2 0x27B5 DUP3 DUP3 PUSH2 0x276F JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x27D4 JUMPI PUSH2 0x27D3 PUSH2 0x2742 JUMP JUMPDEST JUMPDEST PUSH2 0x27DD DUP3 PUSH2 0x2732 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x280A PUSH2 0x2805 DUP5 PUSH2 0x27BA JUMP JUMPDEST PUSH2 0x27A0 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2826 JUMPI PUSH2 0x2825 PUSH2 0x272E JUMP JUMPDEST JUMPDEST PUSH2 0x2831 DUP5 DUP3 DUP6 PUSH2 0x27EA JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x284D JUMPI PUSH2 0x284C PUSH2 0x272A JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x285D DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x27F8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x287C JUMPI PUSH2 0x287B PUSH2 0x2351 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2889 DUP6 DUP3 DUP7 ADD PUSH2 0x2425 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x28AA JUMPI PUSH2 0x28A9 PUSH2 0x2355 JUMP JUMPDEST JUMPDEST PUSH2 0x28B6 DUP6 DUP3 DUP7 ADD PUSH2 0x2839 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x28D6 JUMPI PUSH2 0x28D5 PUSH2 0x2351 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x28E3 DUP6 DUP3 DUP7 ADD PUSH2 0x2425 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x28F4 DUP6 DUP3 DUP7 ADD PUSH2 0x2599 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x436F6E7472616374206973207061757365640000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2942 PUSH1 0x12 DUP4 PUSH2 0x28FE JUMP JUMPDEST SWAP2 POP PUSH2 0x294D DUP3 PUSH2 0x290E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x296F DUP2 PUSH2 0x2936 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F7420696E697469616C697A65640000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x29AA PUSH1 0xF DUP4 PUSH2 0x28FE JUMP JUMPDEST SWAP2 POP PUSH2 0x29B5 DUP3 PUSH2 0x2976 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x29D7 DUP2 PUSH2 0x299E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x29F1 PUSH0 DUP4 ADD DUP7 PUSH2 0x2616 JUMP JUMPDEST PUSH2 0x29FE PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2616 JUMP JUMPDEST PUSH2 0x2A0B PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x23E7 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2A21 DUP2 PUSH2 0x2583 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2A3C JUMPI PUSH2 0x2A3B PUSH2 0x2351 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2A49 DUP5 DUP3 DUP6 ADD PUSH2 0x2A13 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5472616E73666572206661696C65640000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2A86 PUSH1 0xF DUP4 PUSH2 0x28FE JUMP JUMPDEST SWAP2 POP PUSH2 0x2A91 DUP3 PUSH2 0x2A52 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2AB3 DUP2 PUSH2 0x2A7A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2AF1 DUP3 PUSH2 0x23DE JUMP JUMPDEST SWAP2 POP PUSH2 0x2AFC DUP4 PUSH2 0x23DE JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2B14 JUMPI PUSH2 0x2B13 PUSH2 0x2ABA JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E74207374616B656420616D6F756E74000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2B4E PUSH1 0x1A DUP4 PUSH2 0x28FE JUMP JUMPDEST SWAP2 POP PUSH2 0x2B59 DUP3 PUSH2 0x2B1A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2B7B DUP2 PUSH2 0x2B42 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2B8C DUP3 PUSH2 0x23DE JUMP JUMPDEST SWAP2 POP PUSH2 0x2B97 DUP4 PUSH2 0x23DE JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x2BA5 DUP2 PUSH2 0x23DE JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x2BBC JUMPI PUSH2 0x2BBB PUSH2 0x2ABA JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2BFA DUP3 PUSH2 0x23DE JUMP JUMPDEST SWAP2 POP PUSH2 0x2C05 DUP4 PUSH2 0x23DE JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2C15 JUMPI PUSH2 0x2C14 PUSH2 0x2BC3 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2C2A DUP3 PUSH2 0x23DE JUMP JUMPDEST SWAP2 POP PUSH2 0x2C35 DUP4 PUSH2 0x23DE JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2C4D JUMPI PUSH2 0x2C4C PUSH2 0x2ABA JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2C66 PUSH0 DUP4 ADD DUP6 PUSH2 0x2616 JUMP JUMPDEST PUSH2 0x2C73 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x23E7 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2C8D PUSH0 DUP4 ADD DUP6 PUSH2 0x23E7 JUMP JUMPDEST PUSH2 0x2C9A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x23E7 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x416C726561647920696E697469616C697A656400000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2CD5 PUSH1 0x13 DUP4 PUSH2 0x28FE JUMP JUMPDEST SWAP2 POP PUSH2 0x2CE0 DUP3 PUSH2 0x2CA1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2D02 DUP2 PUSH2 0x2CC9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C6964206E6F6E636500000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2D3D PUSH1 0xD DUP4 PUSH2 0x28FE JUMP JUMPDEST SWAP2 POP PUSH2 0x2D48 DUP3 PUSH2 0x2D09 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2D6A DUP2 PUSH2 0x2D31 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2D7B DUP3 PUSH2 0x23DE JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x2DAD JUMPI PUSH2 0x2DAC PUSH2 0x2ABA JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F207374616B6520666F756E64000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2DEC PUSH1 0xE DUP4 PUSH2 0x28FE JUMP JUMPDEST SWAP2 POP PUSH2 0x2DF7 DUP3 PUSH2 0x2DB8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2E19 DUP2 PUSH2 0x2DE0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F2074696D6520656C61707365640000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2E54 PUSH1 0xF DUP4 PUSH2 0x28FE JUMP JUMPDEST SWAP2 POP PUSH2 0x2E5F DUP3 PUSH2 0x2E20 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2E81 DUP2 PUSH2 0x2E48 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C6964207369676E6174757265000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2EBC PUSH1 0x11 DUP4 PUSH2 0x28FE JUMP JUMPDEST SWAP2 POP PUSH2 0x2EC7 DUP3 PUSH2 0x2E88 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2EE9 DUP2 PUSH2 0x2EB0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45706F6368206475726174696F6E206E6F7420656E6465640000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2F24 PUSH1 0x18 DUP4 PUSH2 0x28FE JUMP JUMPDEST SWAP2 POP PUSH2 0x2F2F DUP3 PUSH2 0x2EF0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2F51 DUP2 PUSH2 0x2F18 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F2070656E64696E6720726577617264730000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2F8C PUSH1 0x12 DUP4 PUSH2 0x28FE JUMP JUMPDEST SWAP2 POP PUSH2 0x2F97 DUP3 PUSH2 0x2F58 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2FB9 DUP2 PUSH2 0x2F80 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265776172642065786365656473206D617820636C61696D61626C6500000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2FF4 PUSH1 0x1C DUP4 PUSH2 0x28FE JUMP JUMPDEST SWAP2 POP PUSH2 0x2FFF DUP3 PUSH2 0x2FC0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x3021 DUP2 PUSH2 0x2FE8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x303B PUSH0 DUP4 ADD DUP6 PUSH2 0x23E7 JUMP JUMPDEST PUSH2 0x3048 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2526 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x3083 PUSH1 0x1F DUP4 PUSH2 0x28FE JUMP JUMPDEST SWAP2 POP PUSH2 0x308E DUP3 PUSH2 0x304F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x30B0 DUP2 PUSH2 0x3077 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x60 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x30CD DUP3 PUSH2 0x30B7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x30DE DUP3 PUSH2 0x30C3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x30F6 PUSH2 0x30F1 DUP3 PUSH2 0x2378 JUMP JUMPDEST PUSH2 0x30D4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3116 PUSH2 0x3111 DUP3 PUSH2 0x23DE JUMP JUMPDEST PUSH2 0x30FC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x3127 DUP3 DUP6 PUSH2 0x30E5 JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP PUSH2 0x3137 DUP3 DUP5 PUSH2 0x3105 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x3185 PUSH1 0x1C DUP4 PUSH2 0x3147 JUMP JUMPDEST SWAP2 POP PUSH2 0x3190 DUP3 PUSH2 0x3151 JUMP JUMPDEST PUSH1 0x1C DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x31BE PUSH2 0x31B9 DUP3 PUSH2 0x319B JUMP JUMPDEST PUSH2 0x31A4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x31CE DUP3 PUSH2 0x3179 JUMP JUMPDEST SWAP2 POP PUSH2 0x31DA DUP3 DUP5 PUSH2 0x31AD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x321F DUP2 PUSH2 0x319B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3238 PUSH0 DUP4 ADD DUP5 PUSH2 0x3216 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3253 DUP2 PUSH2 0x323E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x326C PUSH0 DUP4 ADD DUP8 PUSH2 0x3216 JUMP JUMPDEST PUSH2 0x3279 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x324A JUMP JUMPDEST PUSH2 0x3286 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x3216 JUMP JUMPDEST PUSH2 0x3293 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x3216 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH11 0x87094F0F185B690D1D9958 0xD3 RETURN DUP7 0x2B PUSH25 0xC5F9A998921FDB10D239BE1937C3264736F6C634300081C00 CALLER ",
							"sourceMap": "1161:14380:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2763:44;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10151:705;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3134:50;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;1398:25;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2408:23;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1766:38;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3325:39;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;6563:115;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1726:34;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;13034:933;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;14337:247;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3817:27;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3692:58;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;1933:28;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1534:31;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2890:59;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3429:47;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2332:18;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2710:47;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1686:34;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;2494:41:9;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2047:47;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5603:882;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1638:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2100:41:9;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1898:29;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1466:30;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;11155:1656;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1502:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8805:943;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;7128:1356;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1648:32;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2243:48;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1571:33;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2589:50:9;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1430:30;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2763:44;;;;;;;;;;;;;;;;;:::o;10151:705::-;4612:6;;;;;;;;;;;4611:7;4603:38;;;;;;;;;;;;:::i;:::-;;;;;;;;;2261:21:2::1;:19;:21::i;:::-;10239:11:9::2;;;;;;;;;;;10231:39;;;;;;;;;;;;:::i;:::-;;;;;;;;;10352:8;;;;;;;;;;;:21;;;10374:10;10386:12;;;;;;;;;;;10400:6;10352:55;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10344:83;;;;;;;;;;;;:::i;:::-;;;;;;;;;10438:15;10456:6;:18;10463:10;10456:18;;;;;;;;;;;;;;;10438:36;;10504:1;10488;:12;;;:17:::0;10484:253:::2;;10536:15;10521:1;:12;;:30;;;;10592:3;10565:12;:24;10578:10;10565:24;;;;;;;;;;;;;;;:30;;;;10484:253;;;10724:2;10696:12;:24;10709:10;10696:24;;;;;;;;;;;;;;;;:30;;;;;;;:::i;:::-;;;;;;;;10484:253;10758:6;10746:1;:8;;;:18;;;;;;;:::i;:::-;;;;;;;;10790:15;10774:1;:13;;:31;;;;10830:10;10821:28;;;10842:6;10821:28;;;;;;:::i;:::-;;;;;;;;10221:635;2303:20:2::1;:18;:20::i;:::-;10151:705:9::0;:::o;3134:50::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1398:25::-;;;;;;;;;;;;;:::o;2408:23::-;;;;;;;;;;;;;:::o;1766:38::-;;;;:::o;3325:39::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;6563:115::-;1531:13:0;:11;:13::i;:::-;6634:7:9::1;6625:6;;:16;;;;;;;;;;;;;;;;;;6656:15;6663:7;6656:15;;;;;;:::i;:::-;;;;;;;;6563:115:::0;:::o;1726:34::-;;;;:::o;13034:933::-;4612:6;;;;;;;;;;;4611:7;4603:38;;;;;;;;;;;;:::i;:::-;;;;;;;;;2261:21:2::1;:19;:21::i;:::-;13127:11:9::2;;;;;;;;;;;13119:39;;;;;;;;;;;;:::i;:::-;;;;;;;;;13168:15;13186:6;:18;13193:10;13186:18;;;;;;;;;;;;;;;13168:36;;13232:1;:8;;;13222:6;:18;;13214:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;13282:15;13300:1;13282:19;;13430:6;13415:1;:12;;;:21;;;;:::i;:::-;13397:15;:39;13393:115;;;13494:3;13472:18;;13463:6;:27;;;;:::i;:::-;13462:35;;;;:::i;:::-;13452:45;;13393:115;13517:26;13555:7;13546:6;:16;;;;:::i;:::-;13517:45;;13584:6;13572:1;:8;;;:18;;;;;;;:::i;:::-;;;;;;;;13676:12;;;;;;;;;;;13661:37;;;13699:10;13711:18;13661:69;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13807:1;13797:7;:11;13793:97;;;13839:12;;;;;;;;;;;13824:37;;;13862:7;:5;:7::i;:::-;13871;13824:55;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13793:97;13920:10;13905:55;;;13932:18;13952:7;13905:55;;;;;;;:::i;:::-;;;;;;;;13109:858;;;2303:20:2::1;:18;:20::i;:::-;13034:933:9::0;:::o;14337:247::-;1531:13:0;:11;:13::i;:::-;14481:1:9::1;14470:8;:12;:24;;14491:3;14470:24;;;14485:3;14470:24;14435:59;;:24;:32;14460:6;14435:32;;;;;;;;;;;;;;;:59;;;;14536:6;14509:68;;;14544:24;:32;14569:6;14544:32;;;;;;;;;;;;;;;;14509:68;;;;;;:::i;:::-;;;;;;;;14337:247:::0;;:::o;3817:27::-;;;;;;;;;;;;;:::o;3692:58::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1933:28::-;;;;:::o;1534:31::-;;;;:::o;2890:59::-;;;;;;;;;;;;;;;;;:::o;3429:47::-;;;;;;;;;;;;;;;;;:::o;2332:18::-;;;;;;;;;;;;;:::o;2710:47::-;;;;;;;;;;;;;;;;;:::o;1686:34::-;;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;2494:41:9:-;;;;;;;;;;;;;;;;;:::o;2047:47::-;;;;:::o;5603:882::-;1531:13:0;:11;:13::i;:::-;5940:11:9::1;;;;;;;;;;;5939:12;5931:44;;;;;;;;;;;;:::i;:::-;;;;;;;;;5996:9;5985:8;;:20;;;;;;;;;;;;;;;;;;6033:16;6015:15;:34;;;;6077:16;6059:15;:34;;;;6117:1;6103:11;:15;;;;6147:1;6128:16;:20;;;;6179:19;6158:18;:40;;;;6228:1;6208:17;:21;;;;6261:20;6239:19;:42;;;;6313:20;6291:19;:42;;;;6359:14;6343:13;:30;;;;6400:12;6383:14;:29;;;;6437:13;6422:12;;:28;;;;;;;;;;;;;;;;;;6474:4;6460:11;;:18;;;;;;;;;;;;;;;;;;5603:882:::0;;;;;;;;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;2100:41:9:-;;;;:::o;1898:29::-;;;;:::o;1466:30::-;;;;:::o;11155:1656::-;4612:6;;;;;;;;;;;4611:7;4603:38;;;;;;;;;;;;:::i;:::-;;;;;;;;;2261:21:2::1;:19;:21::i;:::-;11259:11:9::2;;;;;;;;;;;11251:39;;;;;;;;;;;;:::i;:::-;;;;;;;;;11330:13;11308:6;:18;11315:10;11308:18;;;;;;;;;;;;;;;;:35;11300:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;11371:6;:18;11378:10;11371:18;;;;;;;;;;;;;;;;:20;;;;;;;;;:::i;:::-;;;;;;11402:15;11420:6;:18;11427:10;11420:18;;;;;;;;;;;;;;;11402:36;;11472:1;11456;:12;;;:17:::0;11448:44:::2;;;;;;;;;;;;:::i;:::-;;;;;;;;;11503:15;11539:1;:13;;;11521:15;:31;;;;:::i;:::-;11503:49;;11580:1;11570:7;:11;11562:39;;;;;;;;;;;;:::i;:::-;;;;;;;;;11662:32;11697:15;;11662:50;;11746:19;;11726:17;;:39;11722:142;;;11850:3;11827:19;;11809:15;;:37;;;;:::i;:::-;11808:45;;;;:::i;:::-;11781:72;;11722:142;11946:27;12016:1;11976:24;:36;12001:10;11976:36;;;;;;;;;;;;;;;;:41;:110;;12050:24;:36;12075:10;12050:36;;;;;;;;;;;;;;;;11976:110;;;12032:3;11976:110;11946:140;;12174:3;12151:19;12124:24;:46;;;;:::i;:::-;12123:54;;;;:::i;:::-;12096:81;;12224:14;12279:7;12252:24;12241:1;:8;;;:35;;;;:::i;:::-;:45;;;;:::i;:::-;12224:62;;12387:3;12359:12;:24;12372:10;12359:24;;;;;;;;;;;;;;;;12350:6;:33;;;;:::i;:::-;12349:41;;;;:::i;:::-;12340:50;;12522:22;;12506:1;:13;;;:38;;;;:::i;:::-;12488:15;:56;12484:182;;;12560:15;12613:3;12588:21;;12579:6;:30;;;;:::i;:::-;12578:38;;;;:::i;:::-;12560:56;;12648:7;12639:6;:16;;;;:::i;:::-;12630:25;;12546:120;12484:182;12692:15;12676:1;:13;;:31;;;;12717:8;;;;;;;;;;;:13;;;12731:10;12743:6;12717:33;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12785:10;12765:39;;;12797:6;12765:39;;;;;;:::i;:::-;;;;;;;;11241:1570;;;;;2303:20:2::1;:18;:20::i;:::-;11155:1656:9::0;:::o;1502:26::-;;;;:::o;8805:943::-;4612:6;;;;;;;;;;;4611:7;4603:38;;;;;;;;;;;;:::i;:::-;;;;;;;;;2261:21:2::1;:19;:21::i;:::-;8933:11:9::2;;;;;;;;;;;8925:39;;;;;;;;;;;;:::i;:::-;;;;;;;;;9004:13;8982:6;:18;8989:10;8982:18;;;;;;;;;;;;;;;;:35;8974:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;9053:53;9069:10;9081:13;9096:9;9053:15;:53::i;:::-;9045:83;;;;;;;;;;;;:::i;:::-;;;;;;;;;9139:6;:18;9146:10;9139:18;;;;;;;;;;;;;;;;:20;;;;;;;;;:::i;:::-;;;;;;9170:25;9198:11;:23;9210:10;9198:23;;;;;;;;;;;;;;;9170:51;;9276:18;;9258:5;:15;;;:36;;;;:::i;:::-;9239:15;:55;;9231:92;;;;;;;;;;;;:::i;:::-;;;;;;;;;9333:14;9350:5;:25;;;9333:42;;9402:1;9393:6;:10;9385:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;9454:12;;9444:6;:22;;9436:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;9599:1;9571:5;:25;;:29;;;;9628:15;9610:5;:15;;:33;;;;9654:8;;;;;;;;;;;:13;;;9668:10;9680:6;9654:33;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9722:10;9702:39;;;9734:6;9702:39;;;;;;:::i;:::-;;;;;;;;8915:833;;2303:20:2::1;:18;:20::i;:::-;8805:943:9::0;;:::o;7128:1356::-;4612:6;;;;;;;;;;;4611:7;4603:38;;;;;;;;;;;;:::i;:::-;;;;;;;;;2261:21:2::1;:19;:21::i;:::-;7238:11:9::2;;;;;;;;;;;7230:39;;;;;;;;;;;;:::i;:::-;;;;;;;;;7411:13;;7394:14;;:30;;;;:::i;:::-;7378:12;:46;7374:140;;7459:1;7440:16;:20;;;;7491:12;7474:14;:29;;;;7374:140;7539:1;7524:11;;:16;;;;;;;:::i;:::-;;;;;;;;7570:11;7550:16;;:31;;;;;;;:::i;:::-;;;;;;;;7612:11;7591:17;;:32;;;;;;;:::i;:::-;;;;;;;;7634:25;7662:11;:23;7674:10;7662:23;;;;;;;;;;;;;;;7634:51;;7715:1;7695:5;:16;;;:21;;;;;;;:::i;:::-;;;;;;;;7747:11;7726:5;:17;;;:32;;;;;;;:::i;:::-;;;;;;;;7848:18;7888:19;;7869:16;;:38;:50;;7916:3;7869:50;;;7910:3;7869:50;7848:71;;;;7929:14;7993:3;7979:10;7961:15;;7947:11;:29;;;;:::i;:::-;:42;;;;:::i;:::-;7946:50;;;;:::i;:::-;7929:67;;8035:6;8006:5;:25;;;:35;;;;;;;:::i;:::-;;;;;;;;8115:7;8111:156;;;8180:3;8166:11;:17;;;;:::i;:::-;8138:12;:24;8151:10;8138:24;;;;;;;;;;;;;;;;:45;;;;;;;:::i;:::-;;;;;;;;8111:156;;;8253:3;8239:11;:17;;;;:::i;:::-;8214:9;:21;8224:10;8214:21;;;;;;;;;;;;;;;;:42;;;;;;;:::i;:::-;;;;;;;;8111:156;8354:1;8335:5;:15;;;:20:::0;8331:84:::2;;8389:15;8371:5;:15;;:33;;;;8331:84;8444:10;8430:47;;;8456:11;8469:7;8430:47;;;;;;;:::i;:::-;;;;;;;;7220:1264;;;2303:20:2::1;:18;:20::i;:::-;7128:1356:9::0;;:::o;1648:32::-;;;;:::o;2243:48::-;;;;:::o;1571:33::-;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;2589:50:9:-;;;;;;;;;;;;;;;;;:::o;1430:30::-;;;;:::o;2336:287:2:-;1759:1;2468:7;;:19;2460:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1759:1;2598:7;:18;;;;2336:287::o;2629:209::-;1716:1;2809:7;:22;;;;2629:209::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;15124:415:9:-;15235:4;15256:19;15305:6;15313:13;15288:39;;;;;;;;;:::i;:::-;;;;;;;;;;;;;15278:50;;;;;;15256:72;;15343:28;15437:11;15384:65;;;;;;;;:::i;:::-;;;;;;;;;;;;;15374:76;;;;;;15343:107;;15522:6;15472:56;;:46;15486:20;15508:9;15472:13;:46::i;:::-;:56;;;15465:63;;;;15124:415;;;;;:::o;656:96:7:-;709:7;735:10;728:17;;656:96;:::o;3714:255:8:-;3792:7;3812:17;3831:18;3851:16;3871:27;3882:4;3888:9;3871:10;:27::i;:::-;3811:87;;;;;;3908:28;3920:5;3927:8;3908:11;:28::i;:::-;3953:9;3946:16;;;;;3714:255;;;;:::o;2129:778::-;2232:17;2251:16;2269:14;2319:2;2299:9;:16;:22;2295:606;;2337:9;2360;2383:7;2604:4;2593:9;2589:20;2583:27;2578:32;;2653:4;2642:9;2638:20;2632:27;2627:32;;2710:4;2699:9;2695:20;2689:27;2686:1;2681:36;2676:41;;2751:25;2762:4;2768:1;2771;2774;2751:10;:25::i;:::-;2744:32;;;;;;;;;;;2295:606;2823:1;2827:35;2872:9;:16;2864:25;;2807:83;;;;;;2129:778;;;;;;:::o;7280:532::-;7375:20;7366:29;;;;;;;;:::i;:::-;;:5;:29;;;;;;;;:::i;:::-;;;7362:444;7411:7;7362:444;7471:29;7462:38;;;;;;;;:::i;:::-;;:5;:38;;;;;;;;:::i;:::-;;;7458:348;;7523:23;;;;;;;;;;;;;;7458:348;7576:35;7567:44;;;;;;;;:::i;:::-;;:5;:44;;;;;;;;:::i;:::-;;;7563:243;;7670:8;7662:17;;7634:46;;;;;;;;;;;:::i;:::-;;;;;;;;7563:243;7710:30;7701:39;;;;;;;;:::i;:::-;;:5;:39;;;;;;;;:::i;:::-;;;7697:109;;7786:8;7763:32;;;;;;;;;;;:::i;:::-;;;;;;;;7697:109;7280:532;;;:::o;5203:1551::-;5329:17;5348:16;5366:14;6283:66;6278:1;6270:10;;:79;6266:164;;;6381:1;6385:30;6417:1;6365:54;;;;;;;;6266:164;6524:14;6541:24;6551:4;6557:1;6560;6563;6541:24;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6524:41;;6597:1;6579:20;;:6;:20;;;6575:113;;6631:1;6635:29;6674:1;6666:10;;6615:62;;;;;;;;;6575:113;6706:6;6714:20;6744:1;6736:10;;6698:49;;;;;;;5203:1551;;;;;;;;;:::o;7:75:10:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:77::-;1213:7;1242:5;1231:16;;1176:77;;;:::o;1259:118::-;1346:24;1364:5;1346:24;:::i;:::-;1341:3;1334:37;1259:118;;:::o;1383:222::-;1476:4;1514:2;1503:9;1499:18;1491:26;;1527:71;1595:1;1584:9;1580:17;1571:6;1527:71;:::i;:::-;1383:222;;;;:::o;1611:122::-;1684:24;1702:5;1684:24;:::i;:::-;1677:5;1674:35;1664:63;;1723:1;1720;1713:12;1664:63;1611:122;:::o;1739:139::-;1785:5;1823:6;1810:20;1801:29;;1839:33;1866:5;1839:33;:::i;:::-;1739:139;;;;:::o;1884:329::-;1943:6;1992:2;1980:9;1971:7;1967:23;1963:32;1960:119;;;1998:79;;:::i;:::-;1960:119;2118:1;2143:53;2188:7;2179:6;2168:9;2164:22;2143:53;:::i;:::-;2133:63;;2089:117;1884:329;;;;:::o;2219:553::-;2396:4;2434:3;2423:9;2419:19;2411:27;;2448:71;2516:1;2505:9;2501:17;2492:6;2448:71;:::i;:::-;2529:72;2597:2;2586:9;2582:18;2573:6;2529:72;:::i;:::-;2611;2679:2;2668:9;2664:18;2655:6;2611:72;:::i;:::-;2693;2761:2;2750:9;2746:18;2737:6;2693:72;:::i;:::-;2219:553;;;;;;;:::o;2778:60::-;2806:3;2827:5;2820:12;;2778:60;;;:::o;2844:142::-;2894:9;2927:53;2945:34;2954:24;2972:5;2954:24;:::i;:::-;2945:34;:::i;:::-;2927:53;:::i;:::-;2914:66;;2844:142;;;:::o;2992:126::-;3042:9;3075:37;3106:5;3075:37;:::i;:::-;3062:50;;2992:126;;;:::o;3124:144::-;3192:9;3225:37;3256:5;3225:37;:::i;:::-;3212:50;;3124:144;;;:::o;3274:167::-;3379:55;3428:5;3379:55;:::i;:::-;3374:3;3367:68;3274:167;;:::o;3447:258::-;3558:4;3596:2;3585:9;3581:18;3573:26;;3609:89;3695:1;3684:9;3680:17;3671:6;3609:89;:::i;:::-;3447:258;;;;:::o;3711:90::-;3745:7;3788:5;3781:13;3774:21;3763:32;;3711:90;;;:::o;3807:109::-;3888:21;3903:5;3888:21;:::i;:::-;3883:3;3876:34;3807:109;;:::o;3922:210::-;4009:4;4047:2;4036:9;4032:18;4024:26;;4060:65;4122:1;4111:9;4107:17;4098:6;4060:65;:::i;:::-;3922:210;;;;:::o;4138:442::-;4287:4;4325:2;4314:9;4310:18;4302:26;;4338:71;4406:1;4395:9;4391:17;4382:6;4338:71;:::i;:::-;4419:72;4487:2;4476:9;4472:18;4463:6;4419:72;:::i;:::-;4501;4569:2;4558:9;4554:18;4545:6;4501:72;:::i;:::-;4138:442;;;;;;:::o;4586:116::-;4656:21;4671:5;4656:21;:::i;:::-;4649:5;4646:32;4636:60;;4692:1;4689;4682:12;4636:60;4586:116;:::o;4708:133::-;4751:5;4789:6;4776:20;4767:29;;4805:30;4829:5;4805:30;:::i;:::-;4708:133;;;;:::o;4847:323::-;4903:6;4952:2;4940:9;4931:7;4927:23;4923:32;4920:119;;;4958:79;;:::i;:::-;4920:119;5078:1;5103:50;5145:7;5136:6;5125:9;5121:22;5103:50;:::i;:::-;5093:60;;5049:114;4847:323;;;;:::o;5176:474::-;5244:6;5252;5301:2;5289:9;5280:7;5276:23;5272:32;5269:119;;;5307:79;;:::i;:::-;5269:119;5427:1;5452:53;5497:7;5488:6;5477:9;5473:22;5452:53;:::i;:::-;5442:63;;5398:117;5554:2;5580:53;5625:7;5616:6;5605:9;5601:22;5580:53;:::i;:::-;5570:63;;5525:118;5176:474;;;;;:::o;5656:118::-;5743:24;5761:5;5743:24;:::i;:::-;5738:3;5731:37;5656:118;;:::o;5780:222::-;5873:4;5911:2;5900:9;5896:18;5888:26;;5924:71;5992:1;5981:9;5977:17;5968:6;5924:71;:::i;:::-;5780:222;;;;:::o;6008:114::-;6063:7;6092:24;6110:5;6092:24;:::i;:::-;6081:35;;6008:114;;;:::o;6128:158::-;6219:42;6255:5;6219:42;:::i;:::-;6212:5;6209:53;6199:81;;6276:1;6273;6266:12;6199:81;6128:158;:::o;6292:175::-;6356:5;6394:6;6381:20;6372:29;;6410:51;6455:5;6410:51;:::i;:::-;6292:175;;;;:::o;6473:1385::-;6613:6;6621;6629;6637;6645;6653;6661;6669;6718:3;6706:9;6697:7;6693:23;6689:33;6686:120;;;6725:79;;:::i;:::-;6686:120;6845:1;6870:71;6933:7;6924:6;6913:9;6909:22;6870:71;:::i;:::-;6860:81;;6816:135;6990:2;7016:53;7061:7;7052:6;7041:9;7037:22;7016:53;:::i;:::-;7006:63;;6961:118;7118:2;7144:53;7189:7;7180:6;7169:9;7165:22;7144:53;:::i;:::-;7134:63;;7089:118;7246:2;7272:53;7317:7;7308:6;7297:9;7293:22;7272:53;:::i;:::-;7262:63;;7217:118;7374:3;7401:53;7446:7;7437:6;7426:9;7422:22;7401:53;:::i;:::-;7391:63;;7345:119;7503:3;7530:53;7575:7;7566:6;7555:9;7551:22;7530:53;:::i;:::-;7520:63;;7474:119;7632:3;7659:53;7704:7;7695:6;7684:9;7680:22;7659:53;:::i;:::-;7649:63;;7603:119;7761:3;7788:53;7833:7;7824:6;7813:9;7809:22;7788:53;:::i;:::-;7778:63;;7732:119;6473:1385;;;;;;;;;;;:::o;7864:117::-;7973:1;7970;7963:12;7987:117;8096:1;8093;8086:12;8110:102;8151:6;8202:2;8198:7;8193:2;8186:5;8182:14;8178:28;8168:38;;8110:102;;;:::o;8218:180::-;8266:77;8263:1;8256:88;8363:4;8360:1;8353:15;8387:4;8384:1;8377:15;8404:281;8487:27;8509:4;8487:27;:::i;:::-;8479:6;8475:40;8617:6;8605:10;8602:22;8581:18;8569:10;8566:34;8563:62;8560:88;;;8628:18;;:::i;:::-;8560:88;8668:10;8664:2;8657:22;8447:238;8404:281;;:::o;8691:129::-;8725:6;8752:20;;:::i;:::-;8742:30;;8781:33;8809:4;8801:6;8781:33;:::i;:::-;8691:129;;;:::o;8826:307::-;8887:4;8977:18;8969:6;8966:30;8963:56;;;8999:18;;:::i;:::-;8963:56;9037:29;9059:6;9037:29;:::i;:::-;9029:37;;9121:4;9115;9111:15;9103:23;;8826:307;;;:::o;9139:148::-;9237:6;9232:3;9227;9214:30;9278:1;9269:6;9264:3;9260:16;9253:27;9139:148;;;:::o;9293:423::-;9370:5;9395:65;9411:48;9452:6;9411:48;:::i;:::-;9395:65;:::i;:::-;9386:74;;9483:6;9476:5;9469:21;9521:4;9514:5;9510:16;9559:3;9550:6;9545:3;9541:16;9538:25;9535:112;;;9566:79;;:::i;:::-;9535:112;9656:54;9703:6;9698:3;9693;9656:54;:::i;:::-;9376:340;9293:423;;;;;:::o;9735:338::-;9790:5;9839:3;9832:4;9824:6;9820:17;9816:27;9806:122;;9847:79;;:::i;:::-;9806:122;9964:6;9951:20;9989:78;10063:3;10055:6;10048:4;10040:6;10036:17;9989:78;:::i;:::-;9980:87;;9796:277;9735:338;;;;:::o;10079:652::-;10156:6;10164;10213:2;10201:9;10192:7;10188:23;10184:32;10181:119;;;10219:79;;:::i;:::-;10181:119;10339:1;10364:53;10409:7;10400:6;10389:9;10385:22;10364:53;:::i;:::-;10354:63;;10310:117;10494:2;10483:9;10479:18;10466:32;10525:18;10517:6;10514:30;10511:117;;;10547:79;;:::i;:::-;10511:117;10652:62;10706:7;10697:6;10686:9;10682:22;10652:62;:::i;:::-;10642:72;;10437:287;10079:652;;;;;:::o;10737:468::-;10802:6;10810;10859:2;10847:9;10838:7;10834:23;10830:32;10827:119;;;10865:79;;:::i;:::-;10827:119;10985:1;11010:53;11055:7;11046:6;11035:9;11031:22;11010:53;:::i;:::-;11000:63;;10956:117;11112:2;11138:50;11180:7;11171:6;11160:9;11156:22;11138:50;:::i;:::-;11128:60;;11083:115;10737:468;;;;;:::o;11211:169::-;11295:11;11329:6;11324:3;11317:19;11369:4;11364:3;11360:14;11345:29;;11211:169;;;;:::o;11386:168::-;11526:20;11522:1;11514:6;11510:14;11503:44;11386:168;:::o;11560:366::-;11702:3;11723:67;11787:2;11782:3;11723:67;:::i;:::-;11716:74;;11799:93;11888:3;11799:93;:::i;:::-;11917:2;11912:3;11908:12;11901:19;;11560:366;;;:::o;11932:419::-;12098:4;12136:2;12125:9;12121:18;12113:26;;12185:9;12179:4;12175:20;12171:1;12160:9;12156:17;12149:47;12213:131;12339:4;12213:131;:::i;:::-;12205:139;;11932:419;;;:::o;12357:165::-;12497:17;12493:1;12485:6;12481:14;12474:41;12357:165;:::o;12528:366::-;12670:3;12691:67;12755:2;12750:3;12691:67;:::i;:::-;12684:74;;12767:93;12856:3;12767:93;:::i;:::-;12885:2;12880:3;12876:12;12869:19;;12528:366;;;:::o;12900:419::-;13066:4;13104:2;13093:9;13089:18;13081:26;;13153:9;13147:4;13143:20;13139:1;13128:9;13124:17;13117:47;13181:131;13307:4;13181:131;:::i;:::-;13173:139;;12900:419;;;:::o;13325:442::-;13474:4;13512:2;13501:9;13497:18;13489:26;;13525:71;13593:1;13582:9;13578:17;13569:6;13525:71;:::i;:::-;13606:72;13674:2;13663:9;13659:18;13650:6;13606:72;:::i;:::-;13688;13756:2;13745:9;13741:18;13732:6;13688:72;:::i;:::-;13325:442;;;;;;:::o;13773:137::-;13827:5;13858:6;13852:13;13843:22;;13874:30;13898:5;13874:30;:::i;:::-;13773:137;;;;:::o;13916:345::-;13983:6;14032:2;14020:9;14011:7;14007:23;14003:32;14000:119;;;14038:79;;:::i;:::-;14000:119;14158:1;14183:61;14236:7;14227:6;14216:9;14212:22;14183:61;:::i;:::-;14173:71;;14129:125;13916:345;;;;:::o;14267:165::-;14407:17;14403:1;14395:6;14391:14;14384:41;14267:165;:::o;14438:366::-;14580:3;14601:67;14665:2;14660:3;14601:67;:::i;:::-;14594:74;;14677:93;14766:3;14677:93;:::i;:::-;14795:2;14790:3;14786:12;14779:19;;14438:366;;;:::o;14810:419::-;14976:4;15014:2;15003:9;14999:18;14991:26;;15063:9;15057:4;15053:20;15049:1;15038:9;15034:17;15027:47;15091:131;15217:4;15091:131;:::i;:::-;15083:139;;14810:419;;;:::o;15235:180::-;15283:77;15280:1;15273:88;15380:4;15377:1;15370:15;15404:4;15401:1;15394:15;15421:191;15461:3;15480:20;15498:1;15480:20;:::i;:::-;15475:25;;15514:20;15532:1;15514:20;:::i;:::-;15509:25;;15557:1;15554;15550:9;15543:16;;15578:3;15575:1;15572:10;15569:36;;;15585:18;;:::i;:::-;15569:36;15421:191;;;;:::o;15618:176::-;15758:28;15754:1;15746:6;15742:14;15735:52;15618:176;:::o;15800:366::-;15942:3;15963:67;16027:2;16022:3;15963:67;:::i;:::-;15956:74;;16039:93;16128:3;16039:93;:::i;:::-;16157:2;16152:3;16148:12;16141:19;;15800:366;;;:::o;16172:419::-;16338:4;16376:2;16365:9;16361:18;16353:26;;16425:9;16419:4;16415:20;16411:1;16400:9;16396:17;16389:47;16453:131;16579:4;16453:131;:::i;:::-;16445:139;;16172:419;;;:::o;16597:410::-;16637:7;16660:20;16678:1;16660:20;:::i;:::-;16655:25;;16694:20;16712:1;16694:20;:::i;:::-;16689:25;;16749:1;16746;16742:9;16771:30;16789:11;16771:30;:::i;:::-;16760:41;;16950:1;16941:7;16937:15;16934:1;16931:22;16911:1;16904:9;16884:83;16861:139;;16980:18;;:::i;:::-;16861:139;16645:362;16597:410;;;;:::o;17013:180::-;17061:77;17058:1;17051:88;17158:4;17155:1;17148:15;17182:4;17179:1;17172:15;17199:185;17239:1;17256:20;17274:1;17256:20;:::i;:::-;17251:25;;17290:20;17308:1;17290:20;:::i;:::-;17285:25;;17329:1;17319:35;;17334:18;;:::i;:::-;17319:35;17376:1;17373;17369:9;17364:14;;17199:185;;;;:::o;17390:194::-;17430:4;17450:20;17468:1;17450:20;:::i;:::-;17445:25;;17484:20;17502:1;17484:20;:::i;:::-;17479:25;;17528:1;17525;17521:9;17513:17;;17552:1;17546:4;17543:11;17540:37;;;17557:18;;:::i;:::-;17540:37;17390:194;;;;:::o;17590:332::-;17711:4;17749:2;17738:9;17734:18;17726:26;;17762:71;17830:1;17819:9;17815:17;17806:6;17762:71;:::i;:::-;17843:72;17911:2;17900:9;17896:18;17887:6;17843:72;:::i;:::-;17590:332;;;;;:::o;17928:::-;18049:4;18087:2;18076:9;18072:18;18064:26;;18100:71;18168:1;18157:9;18153:17;18144:6;18100:71;:::i;:::-;18181:72;18249:2;18238:9;18234:18;18225:6;18181:72;:::i;:::-;17928:332;;;;;:::o;18266:169::-;18406:21;18402:1;18394:6;18390:14;18383:45;18266:169;:::o;18441:366::-;18583:3;18604:67;18668:2;18663:3;18604:67;:::i;:::-;18597:74;;18680:93;18769:3;18680:93;:::i;:::-;18798:2;18793:3;18789:12;18782:19;;18441:366;;;:::o;18813:419::-;18979:4;19017:2;19006:9;19002:18;18994:26;;19066:9;19060:4;19056:20;19052:1;19041:9;19037:17;19030:47;19094:131;19220:4;19094:131;:::i;:::-;19086:139;;18813:419;;;:::o;19238:163::-;19378:15;19374:1;19366:6;19362:14;19355:39;19238:163;:::o;19407:366::-;19549:3;19570:67;19634:2;19629:3;19570:67;:::i;:::-;19563:74;;19646:93;19735:3;19646:93;:::i;:::-;19764:2;19759:3;19755:12;19748:19;;19407:366;;;:::o;19779:419::-;19945:4;19983:2;19972:9;19968:18;19960:26;;20032:9;20026:4;20022:20;20018:1;20007:9;20003:17;19996:47;20060:131;20186:4;20060:131;:::i;:::-;20052:139;;19779:419;;;:::o;20204:233::-;20243:3;20266:24;20284:5;20266:24;:::i;:::-;20257:33;;20312:66;20305:5;20302:77;20299:103;;20382:18;;:::i;:::-;20299:103;20429:1;20422:5;20418:13;20411:20;;20204:233;;;:::o;20443:164::-;20583:16;20579:1;20571:6;20567:14;20560:40;20443:164;:::o;20613:366::-;20755:3;20776:67;20840:2;20835:3;20776:67;:::i;:::-;20769:74;;20852:93;20941:3;20852:93;:::i;:::-;20970:2;20965:3;20961:12;20954:19;;20613:366;;;:::o;20985:419::-;21151:4;21189:2;21178:9;21174:18;21166:26;;21238:9;21232:4;21228:20;21224:1;21213:9;21209:17;21202:47;21266:131;21392:4;21266:131;:::i;:::-;21258:139;;20985:419;;;:::o;21410:165::-;21550:17;21546:1;21538:6;21534:14;21527:41;21410:165;:::o;21581:366::-;21723:3;21744:67;21808:2;21803:3;21744:67;:::i;:::-;21737:74;;21820:93;21909:3;21820:93;:::i;:::-;21938:2;21933:3;21929:12;21922:19;;21581:366;;;:::o;21953:419::-;22119:4;22157:2;22146:9;22142:18;22134:26;;22206:9;22200:4;22196:20;22192:1;22181:9;22177:17;22170:47;22234:131;22360:4;22234:131;:::i;:::-;22226:139;;21953:419;;;:::o;22378:167::-;22518:19;22514:1;22506:6;22502:14;22495:43;22378:167;:::o;22551:366::-;22693:3;22714:67;22778:2;22773:3;22714:67;:::i;:::-;22707:74;;22790:93;22879:3;22790:93;:::i;:::-;22908:2;22903:3;22899:12;22892:19;;22551:366;;;:::o;22923:419::-;23089:4;23127:2;23116:9;23112:18;23104:26;;23176:9;23170:4;23166:20;23162:1;23151:9;23147:17;23140:47;23204:131;23330:4;23204:131;:::i;:::-;23196:139;;22923:419;;;:::o;23348:174::-;23488:26;23484:1;23476:6;23472:14;23465:50;23348:174;:::o;23528:366::-;23670:3;23691:67;23755:2;23750:3;23691:67;:::i;:::-;23684:74;;23767:93;23856:3;23767:93;:::i;:::-;23885:2;23880:3;23876:12;23869:19;;23528:366;;;:::o;23900:419::-;24066:4;24104:2;24093:9;24089:18;24081:26;;24153:9;24147:4;24143:20;24139:1;24128:9;24124:17;24117:47;24181:131;24307:4;24181:131;:::i;:::-;24173:139;;23900:419;;;:::o;24325:168::-;24465:20;24461:1;24453:6;24449:14;24442:44;24325:168;:::o;24499:366::-;24641:3;24662:67;24726:2;24721:3;24662:67;:::i;:::-;24655:74;;24738:93;24827:3;24738:93;:::i;:::-;24856:2;24851:3;24847:12;24840:19;;24499:366;;;:::o;24871:419::-;25037:4;25075:2;25064:9;25060:18;25052:26;;25124:9;25118:4;25114:20;25110:1;25099:9;25095:17;25088:47;25152:131;25278:4;25152:131;:::i;:::-;25144:139;;24871:419;;;:::o;25296:178::-;25436:30;25432:1;25424:6;25420:14;25413:54;25296:178;:::o;25480:366::-;25622:3;25643:67;25707:2;25702:3;25643:67;:::i;:::-;25636:74;;25719:93;25808:3;25719:93;:::i;:::-;25837:2;25832:3;25828:12;25821:19;;25480:366;;;:::o;25852:419::-;26018:4;26056:2;26045:9;26041:18;26033:26;;26105:9;26099:4;26095:20;26091:1;26080:9;26076:17;26069:47;26133:131;26259:4;26133:131;:::i;:::-;26125:139;;25852:419;;;:::o;26277:320::-;26392:4;26430:2;26419:9;26415:18;26407:26;;26443:71;26511:1;26500:9;26496:17;26487:6;26443:71;:::i;:::-;26524:66;26586:2;26575:9;26571:18;26562:6;26524:66;:::i;:::-;26277:320;;;;;:::o;26603:181::-;26743:33;26739:1;26731:6;26727:14;26720:57;26603:181;:::o;26790:366::-;26932:3;26953:67;27017:2;27012:3;26953:67;:::i;:::-;26946:74;;27029:93;27118:3;27029:93;:::i;:::-;27147:2;27142:3;27138:12;27131:19;;26790:366;;;:::o;27162:419::-;27328:4;27366:2;27355:9;27351:18;27343:26;;27415:9;27409:4;27405:20;27401:1;27390:9;27386:17;27379:47;27443:131;27569:4;27443:131;:::i;:::-;27435:139;;27162:419;;;:::o;27587:94::-;27620:8;27668:5;27664:2;27660:14;27639:35;;27587:94;;;:::o;27687:::-;27726:7;27755:20;27769:5;27755:20;:::i;:::-;27744:31;;27687:94;;;:::o;27787:100::-;27826:7;27855:26;27875:5;27855:26;:::i;:::-;27844:37;;27787:100;;;:::o;27893:157::-;27998:45;28018:24;28036:5;28018:24;:::i;:::-;27998:45;:::i;:::-;27993:3;27986:58;27893:157;;:::o;28056:79::-;28095:7;28124:5;28113:16;;28056:79;;;:::o;28141:157::-;28246:45;28266:24;28284:5;28266:24;:::i;:::-;28246:45;:::i;:::-;28241:3;28234:58;28141:157;;:::o;28304:397::-;28444:3;28459:75;28530:3;28521:6;28459:75;:::i;:::-;28559:2;28554:3;28550:12;28543:19;;28572:75;28643:3;28634:6;28572:75;:::i;:::-;28672:2;28667:3;28663:12;28656:19;;28692:3;28685:10;;28304:397;;;;;:::o;28707:148::-;28809:11;28846:3;28831:18;;28707:148;;;;:::o;28861:214::-;29001:66;28997:1;28989:6;28985:14;28978:90;28861:214;:::o;29081:402::-;29241:3;29262:85;29344:2;29339:3;29262:85;:::i;:::-;29255:92;;29356:93;29445:3;29356:93;:::i;:::-;29474:2;29469:3;29465:12;29458:19;;29081:402;;;:::o;29489:77::-;29526:7;29555:5;29544:16;;29489:77;;;:::o;29572:79::-;29611:7;29640:5;29629:16;;29572:79;;;:::o;29657:157::-;29762:45;29782:24;29800:5;29782:24;:::i;:::-;29762:45;:::i;:::-;29757:3;29750:58;29657:157;;:::o;29820:522::-;30033:3;30055:148;30199:3;30055:148;:::i;:::-;30048:155;;30213:75;30284:3;30275:6;30213:75;:::i;:::-;30313:2;30308:3;30304:12;30297:19;;30333:3;30326:10;;29820:522;;;;:::o;30348:180::-;30396:77;30393:1;30386:88;30493:4;30490:1;30483:15;30517:4;30514:1;30507:15;30534:118;30621:24;30639:5;30621:24;:::i;:::-;30616:3;30609:37;30534:118;;:::o;30658:222::-;30751:4;30789:2;30778:9;30774:18;30766:26;;30802:71;30870:1;30859:9;30855:17;30846:6;30802:71;:::i;:::-;30658:222;;;;:::o;30886:86::-;30921:7;30961:4;30954:5;30950:16;30939:27;;30886:86;;;:::o;30978:112::-;31061:22;31077:5;31061:22;:::i;:::-;31056:3;31049:35;30978:112;;:::o;31096:545::-;31269:4;31307:3;31296:9;31292:19;31284:27;;31321:71;31389:1;31378:9;31374:17;31365:6;31321:71;:::i;:::-;31402:68;31466:2;31455:9;31451:18;31442:6;31402:68;:::i;:::-;31480:72;31548:2;31537:9;31533:18;31524:6;31480:72;:::i;:::-;31562;31630:2;31619:9;31615:18;31606:6;31562:72;:::i;:::-;31096:545;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2602000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"claimStakeRewards(uint256)": "infinite",
								"claimTradeRewards(uint256,bytes)": "infinite",
								"earlyWithdrawalFee()": "2493",
								"epochDuration()": "2559",
								"epochTradeVolume()": "2470",
								"inactivityPenaltyRate()": "2514",
								"inactivitySlashingTime()": "2537",
								"initialize(address,uint256,uint256,uint256,uint256,uint256,uint256,address)": "infinite",
								"initialized()": "2563",
								"lastEpochBlock()": "2536",
								"lastSignedClaim(address)": "2912",
								"latToken()": "infinite",
								"liquidityBoostMultiplier(address)": "2869",
								"makerRebates(address)": "2935",
								"maxClaimable()": "2469",
								"nonces(address)": "2892",
								"owner()": "2581",
								"paused()": "2577",
								"poolBoostMultiplier()": "2559",
								"poolTradingVolume()": "2558",
								"poolVolumeThreshold()": "2471",
								"recordTrade(uint256,bool)": "infinite",
								"renounceOwnership()": "infinite",
								"setPaused(bool)": "infinite",
								"stakeLat(uint256)": "infinite",
								"stakeRewardRate()": "2558",
								"stakedWeight(address)": "2891",
								"stakes(address)": "infinite",
								"takerFees(address)": "2849",
								"totalTrades()": "2492",
								"tradeEpochDuration()": "2491",
								"tradeRewardRate()": "2557",
								"traderStats(address)": "infinite",
								"transferOwnership(address)": "infinite",
								"updateLiquidityMultiplier(address,uint256)": "infinite",
								"vaultAddress()": "2598",
								"vestingSchedules(address,uint256)": "infinite",
								"withdrawStake(uint256)": "infinite"
							},
							"internal": {
								"verifySignature(address,uint256,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1161,
									"end": 15541,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 1161,
									"end": 15541,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1161,
									"end": 15541,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1802,
									"end": 1804,
									"name": "PUSH",
									"source": 9,
									"value": "A"
								},
								{
									"begin": 1766,
									"end": 1804,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 1766,
									"end": 1804,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 2087,
									"end": 2094,
									"name": "PUSH",
									"source": 9,
									"value": "278D00"
								},
								{
									"begin": 2047,
									"end": 2094,
									"name": "PUSH",
									"source": 9,
									"value": "E"
								},
								{
									"begin": 2047,
									"end": 2094,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 2139,
									"end": 2141,
									"name": "PUSH",
									"source": 9,
									"value": "14"
								},
								{
									"begin": 2100,
									"end": 2141,
									"name": "PUSH",
									"source": 9,
									"value": "F"
								},
								{
									"begin": 2100,
									"end": 2141,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 2273,
									"end": 2291,
									"name": "PUSH",
									"source": 9,
									"value": "D3C21BCECCEDA1000000"
								},
								{
									"begin": 2243,
									"end": 2291,
									"name": "PUSH",
									"source": 9,
									"value": "10"
								},
								{
									"begin": 2243,
									"end": 2291,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 4780,
									"end": 4816,
									"name": "CALLVALUE",
									"source": 9
								},
								{
									"begin": 4780,
									"end": 4816,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 4780,
									"end": 4816,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 4780,
									"end": 4816,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 4780,
									"end": 4816,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 4780,
									"end": 4816,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4780,
									"end": 4816,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4780,
									"end": 4816,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 4780,
									"end": 4816,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 4780,
									"end": 4816,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4780,
									"end": 4816,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4802,
									"end": 4812,
									"name": "CALLER",
									"source": 9
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1828,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1161,
									"end": 15541,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "13"
								},
								{
									"begin": 1161,
									"end": 15541,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 133,
									"name": "tag",
									"source": 10,
									"value": "15"
								},
								{
									"begin": 7,
									"end": 133,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 44,
									"end": 51,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 84,
									"end": 126,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 77,
									"end": 82,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 73,
									"end": 127,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 62,
									"end": 127,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 62,
									"end": 127,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7,
									"end": 133,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 7,
									"end": 133,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 7,
									"end": 133,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7,
									"end": 133,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 139,
									"end": 235,
									"name": "tag",
									"source": 10,
									"value": "16"
								},
								{
									"begin": 139,
									"end": 235,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 176,
									"end": 183,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 205,
									"end": 229,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "21"
								},
								{
									"begin": 223,
									"end": 228,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 205,
									"end": 229,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "15"
								},
								{
									"begin": 205,
									"end": 229,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 205,
									"end": 229,
									"name": "tag",
									"source": 10,
									"value": "21"
								},
								{
									"begin": 205,
									"end": 229,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 194,
									"end": 229,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 194,
									"end": 229,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 139,
									"end": 235,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 139,
									"end": 235,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 139,
									"end": 235,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 139,
									"end": 235,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 241,
									"end": 359,
									"name": "tag",
									"source": 10,
									"value": "17"
								},
								{
									"begin": 241,
									"end": 359,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 328,
									"end": 352,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "23"
								},
								{
									"begin": 346,
									"end": 351,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 328,
									"end": 352,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "16"
								},
								{
									"begin": 328,
									"end": 352,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 328,
									"end": 352,
									"name": "tag",
									"source": 10,
									"value": "23"
								},
								{
									"begin": 328,
									"end": 352,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 323,
									"end": 326,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 316,
									"end": 353,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 241,
									"end": 359,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 241,
									"end": 359,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 241,
									"end": 359,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 365,
									"end": 587,
									"name": "tag",
									"source": 10,
									"value": "8"
								},
								{
									"begin": 365,
									"end": 587,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 458,
									"end": 462,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 498,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 485,
									"end": 494,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 481,
									"end": 499,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 473,
									"end": 499,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 473,
									"end": 499,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 509,
									"end": 580,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "25"
								},
								{
									"begin": 577,
									"end": 578,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 566,
									"end": 575,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 562,
									"end": 579,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 553,
									"end": 559,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 509,
									"end": 580,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "17"
								},
								{
									"begin": 509,
									"end": 580,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 509,
									"end": 580,
									"name": "tag",
									"source": 10,
									"value": "25"
								},
								{
									"begin": 509,
									"end": 580,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 365,
									"end": 587,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 365,
									"end": 587,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 365,
									"end": 587,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 365,
									"end": 587,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 365,
									"end": 587,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1161,
									"end": 15541,
									"name": "tag",
									"source": 9,
									"value": "13"
								},
								{
									"begin": 1161,
									"end": 15541,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1161,
									"end": 15541,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1161,
									"end": 15541,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1161,
									"end": 15541,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1161,
									"end": 15541,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1161,
									"end": 15541,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 1161,
									"end": 15541,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1161,
									"end": 15541,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206a87094f0f185b690d1d9958d3f3862b780c5f9a998921fdb10d239be1937c3264736f6c634300081c0033",
									".code": [
										{
											"begin": 1161,
											"end": 15541,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "tag",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "PUSH",
											"source": 9,
											"value": "64CB6142"
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "PUSH",
											"source": 9,
											"value": "DD69BECD"
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "PUSH",
											"source": 9,
											"value": "F03F80C3"
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "PUSH",
											"source": 9,
											"value": "F03F80C3"
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "PUSH",
											"source": 9,
											"value": "F1EA7692"
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "PUSH",
											"source": 9,
											"value": "F2FDE38B"
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "PUSH",
											"source": 9,
											"value": "F3482650"
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "PUSH",
											"source": 9,
											"value": "F6CC5157"
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "tag",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "PUSH",
											"source": 9,
											"value": "DD69BECD"
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "PUSH",
											"source": 9,
											"value": "E275C997"
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "PUSH",
											"source": 9,
											"value": "E90B0D76"
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "PUSH",
											"source": 9,
											"value": "E927E7C0"
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "PUSH",
											"source": 9,
											"value": "EAB35B77"
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "tag",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "PUSH",
											"source": 9,
											"value": "848FF684"
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "PUSH",
											"source": 9,
											"value": "848FF684"
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "PUSH",
											"source": 9,
											"value": "8DA5CB5B"
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "PUSH",
											"source": 9,
											"value": "94D9B235"
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "PUSH",
											"source": 9,
											"value": "C2362DD5"
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "PUSH",
											"source": 9,
											"value": "CCC8362C"
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "tag",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "PUSH",
											"source": 9,
											"value": "64CB6142"
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "PUSH",
											"source": 9,
											"value": "715018A6"
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "PUSH",
											"source": 9,
											"value": "7ECEBE00"
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "PUSH",
											"source": 9,
											"value": "8119185B"
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "tag",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "PUSH",
											"source": 9,
											"value": "25D5971F"
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "PUSH",
											"source": 9,
											"value": "519445E2"
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "PUSH",
											"source": 9,
											"value": "519445E2"
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "PUSH",
											"source": 9,
											"value": "5829B3C7"
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "PUSH",
											"source": 9,
											"value": "58BA9D27"
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "PUSH",
											"source": 9,
											"value": "5C975ABB"
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "PUSH",
											"source": 9,
											"value": "5E2A9FA2"
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "tag",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "PUSH",
											"source": 9,
											"value": "25D5971F"
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "PUSH",
											"source": 9,
											"value": "31FDC2BA"
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "PUSH",
											"source": 9,
											"value": "430BF08A"
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "PUSH",
											"source": 9,
											"value": "45626BD6"
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "PUSH",
											"source": 9,
											"value": "4FF0876A"
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "tag",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "PUSH",
											"source": 9,
											"value": "158EF93E"
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "PUSH",
											"source": 9,
											"value": "158EF93E"
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "PUSH",
											"source": 9,
											"value": "16330D40"
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "PUSH",
											"source": 9,
											"value": "16934FC4"
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "PUSH",
											"source": 9,
											"value": "16C38B3C"
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "PUSH",
											"source": 9,
											"value": "1BFF38CD"
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "tag",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "PUSH",
											"source": 9,
											"value": "11A4568"
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "PUSH",
											"source": 9,
											"value": "524FB7E"
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "PUSH",
											"source": 9,
											"value": "5C50A35"
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "PUSH",
											"source": 9,
											"value": "FD7BF50"
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "tag",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1161,
											"end": 15541,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2763,
											"end": 2807,
											"name": "tag",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 2763,
											"end": 2807,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2763,
											"end": 2807,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 2763,
											"end": 2807,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2763,
											"end": 2807,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2763,
											"end": 2807,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 2763,
											"end": 2807,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2763,
											"end": 2807,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2763,
											"end": 2807,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2763,
											"end": 2807,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2763,
											"end": 2807,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 2763,
											"end": 2807,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2763,
											"end": 2807,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2763,
											"end": 2807,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 2763,
											"end": 2807,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2763,
											"end": 2807,
											"name": "tag",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 2763,
											"end": 2807,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2763,
											"end": 2807,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "51"
										},
										{
											"begin": 2763,
											"end": 2807,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2763,
											"end": 2807,
											"name": "tag",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 2763,
											"end": 2807,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2763,
											"end": 2807,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2763,
											"end": 2807,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2763,
											"end": 2807,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 2763,
											"end": 2807,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2763,
											"end": 2807,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2763,
											"end": 2807,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 2763,
											"end": 2807,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2763,
											"end": 2807,
											"name": "tag",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 2763,
											"end": 2807,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2763,
											"end": 2807,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2763,
											"end": 2807,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2763,
											"end": 2807,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2763,
											"end": 2807,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2763,
											"end": 2807,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2763,
											"end": 2807,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2763,
											"end": 2807,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 10151,
											"end": 10856,
											"name": "tag",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 10151,
											"end": 10856,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10151,
											"end": 10856,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 10151,
											"end": 10856,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 10151,
											"end": 10856,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10151,
											"end": 10856,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 10151,
											"end": 10856,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 10151,
											"end": 10856,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10151,
											"end": 10856,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10151,
											"end": 10856,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10151,
											"end": 10856,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 10151,
											"end": 10856,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10151,
											"end": 10856,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10151,
											"end": 10856,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 10151,
											"end": 10856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10151,
											"end": 10856,
											"name": "tag",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 10151,
											"end": 10856,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10151,
											"end": 10856,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 10151,
											"end": 10856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10151,
											"end": 10856,
											"name": "tag",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 10151,
											"end": 10856,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10151,
											"end": 10856,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 3134,
											"end": 3184,
											"name": "tag",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 3134,
											"end": 3184,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3134,
											"end": 3184,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 3134,
											"end": 3184,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3134,
											"end": 3184,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3134,
											"end": 3184,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 3134,
											"end": 3184,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3134,
											"end": 3184,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3134,
											"end": 3184,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3134,
											"end": 3184,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3134,
											"end": 3184,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 3134,
											"end": 3184,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3134,
											"end": 3184,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3134,
											"end": 3184,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 3134,
											"end": 3184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3134,
											"end": 3184,
											"name": "tag",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 3134,
											"end": 3184,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3134,
											"end": 3184,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 3134,
											"end": 3184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3134,
											"end": 3184,
											"name": "tag",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 3134,
											"end": 3184,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3134,
											"end": 3184,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3134,
											"end": 3184,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3134,
											"end": 3184,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 3134,
											"end": 3184,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 3134,
											"end": 3184,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 3134,
											"end": 3184,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3134,
											"end": 3184,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3134,
											"end": 3184,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3134,
											"end": 3184,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "62"
										},
										{
											"begin": 3134,
											"end": 3184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3134,
											"end": 3184,
											"name": "tag",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 3134,
											"end": 3184,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3134,
											"end": 3184,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3134,
											"end": 3184,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3134,
											"end": 3184,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3134,
											"end": 3184,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3134,
											"end": 3184,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3134,
											"end": 3184,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3134,
											"end": 3184,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 1398,
											"end": 1423,
											"name": "tag",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 1398,
											"end": 1423,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1398,
											"end": 1423,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "63"
										},
										{
											"begin": 1398,
											"end": 1423,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 1398,
											"end": 1423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1398,
											"end": 1423,
											"name": "tag",
											"source": 9,
											"value": "63"
										},
										{
											"begin": 1398,
											"end": 1423,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1398,
											"end": 1423,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1398,
											"end": 1423,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1398,
											"end": 1423,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 1398,
											"end": 1423,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1398,
											"end": 1423,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1398,
											"end": 1423,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 1398,
											"end": 1423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1398,
											"end": 1423,
											"name": "tag",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 1398,
											"end": 1423,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1398,
											"end": 1423,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1398,
											"end": 1423,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1398,
											"end": 1423,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1398,
											"end": 1423,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1398,
											"end": 1423,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1398,
											"end": 1423,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1398,
											"end": 1423,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 2408,
											"end": 2431,
											"name": "tag",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 2408,
											"end": 2431,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2408,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "67"
										},
										{
											"begin": 2408,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 2408,
											"end": 2431,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2408,
											"end": 2431,
											"name": "tag",
											"source": 9,
											"value": "67"
										},
										{
											"begin": 2408,
											"end": 2431,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2408,
											"end": 2431,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2408,
											"end": 2431,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2408,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 2408,
											"end": 2431,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2408,
											"end": 2431,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2408,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 2408,
											"end": 2431,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2408,
											"end": 2431,
											"name": "tag",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 2408,
											"end": 2431,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2408,
											"end": 2431,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2408,
											"end": 2431,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2408,
											"end": 2431,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2408,
											"end": 2431,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2408,
											"end": 2431,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2408,
											"end": 2431,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2408,
											"end": 2431,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 1766,
											"end": 1804,
											"name": "tag",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 1766,
											"end": 1804,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1766,
											"end": 1804,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 1766,
											"end": 1804,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 1766,
											"end": 1804,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1766,
											"end": 1804,
											"name": "tag",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 1766,
											"end": 1804,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1766,
											"end": 1804,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1766,
											"end": 1804,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1766,
											"end": 1804,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 1766,
											"end": 1804,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1766,
											"end": 1804,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1766,
											"end": 1804,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 1766,
											"end": 1804,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1766,
											"end": 1804,
											"name": "tag",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 1766,
											"end": 1804,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1766,
											"end": 1804,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1766,
											"end": 1804,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1766,
											"end": 1804,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1766,
											"end": 1804,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1766,
											"end": 1804,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1766,
											"end": 1804,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1766,
											"end": 1804,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 3325,
											"end": 3364,
											"name": "tag",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 3325,
											"end": 3364,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3325,
											"end": 3364,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "74"
										},
										{
											"begin": 3325,
											"end": 3364,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3325,
											"end": 3364,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3325,
											"end": 3364,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 3325,
											"end": 3364,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3325,
											"end": 3364,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3325,
											"end": 3364,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3325,
											"end": 3364,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3325,
											"end": 3364,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "75"
										},
										{
											"begin": 3325,
											"end": 3364,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3325,
											"end": 3364,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3325,
											"end": 3364,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 3325,
											"end": 3364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3325,
											"end": 3364,
											"name": "tag",
											"source": 9,
											"value": "75"
										},
										{
											"begin": 3325,
											"end": 3364,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3325,
											"end": 3364,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "76"
										},
										{
											"begin": 3325,
											"end": 3364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3325,
											"end": 3364,
											"name": "tag",
											"source": 9,
											"value": "74"
										},
										{
											"begin": 3325,
											"end": 3364,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3325,
											"end": 3364,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3325,
											"end": 3364,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3325,
											"end": 3364,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 3325,
											"end": 3364,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 3325,
											"end": 3364,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3325,
											"end": 3364,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3325,
											"end": 3364,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3325,
											"end": 3364,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 3325,
											"end": 3364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3325,
											"end": 3364,
											"name": "tag",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 3325,
											"end": 3364,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3325,
											"end": 3364,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3325,
											"end": 3364,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3325,
											"end": 3364,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3325,
											"end": 3364,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3325,
											"end": 3364,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3325,
											"end": 3364,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3325,
											"end": 3364,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 6563,
											"end": 6678,
											"name": "tag",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 6563,
											"end": 6678,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6563,
											"end": 6678,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 6563,
											"end": 6678,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6563,
											"end": 6678,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6563,
											"end": 6678,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 6563,
											"end": 6678,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6563,
											"end": 6678,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6563,
											"end": 6678,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6563,
											"end": 6678,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6563,
											"end": 6678,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 6563,
											"end": 6678,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6563,
											"end": 6678,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6563,
											"end": 6678,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 6563,
											"end": 6678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6563,
											"end": 6678,
											"name": "tag",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 6563,
											"end": 6678,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6563,
											"end": 6678,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 6563,
											"end": 6678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6563,
											"end": 6678,
											"name": "tag",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 6563,
											"end": 6678,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6563,
											"end": 6678,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 1726,
											"end": 1760,
											"name": "tag",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 1726,
											"end": 1760,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1726,
											"end": 1760,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "83"
										},
										{
											"begin": 1726,
											"end": 1760,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 1726,
											"end": 1760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1726,
											"end": 1760,
											"name": "tag",
											"source": 9,
											"value": "83"
										},
										{
											"begin": 1726,
											"end": 1760,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1726,
											"end": 1760,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1726,
											"end": 1760,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1726,
											"end": 1760,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "85"
										},
										{
											"begin": 1726,
											"end": 1760,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1726,
											"end": 1760,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1726,
											"end": 1760,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 1726,
											"end": 1760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1726,
											"end": 1760,
											"name": "tag",
											"source": 9,
											"value": "85"
										},
										{
											"begin": 1726,
											"end": 1760,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1726,
											"end": 1760,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1726,
											"end": 1760,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1726,
											"end": 1760,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1726,
											"end": 1760,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1726,
											"end": 1760,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1726,
											"end": 1760,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1726,
											"end": 1760,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 13034,
											"end": 13967,
											"name": "tag",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 13034,
											"end": 13967,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13034,
											"end": 13967,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 13034,
											"end": 13967,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 13034,
											"end": 13967,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 13034,
											"end": 13967,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 13034,
											"end": 13967,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 13034,
											"end": 13967,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13034,
											"end": 13967,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13034,
											"end": 13967,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13034,
											"end": 13967,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "87"
										},
										{
											"begin": 13034,
											"end": 13967,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13034,
											"end": 13967,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13034,
											"end": 13967,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 13034,
											"end": 13967,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13034,
											"end": 13967,
											"name": "tag",
											"source": 9,
											"value": "87"
										},
										{
											"begin": 13034,
											"end": 13967,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13034,
											"end": 13967,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "88"
										},
										{
											"begin": 13034,
											"end": 13967,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13034,
											"end": 13967,
											"name": "tag",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 13034,
											"end": 13967,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13034,
											"end": 13967,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 14337,
											"end": 14584,
											"name": "tag",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 14337,
											"end": 14584,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14337,
											"end": 14584,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "89"
										},
										{
											"begin": 14337,
											"end": 14584,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 14337,
											"end": 14584,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 14337,
											"end": 14584,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 14337,
											"end": 14584,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 14337,
											"end": 14584,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14337,
											"end": 14584,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14337,
											"end": 14584,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14337,
											"end": 14584,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "90"
										},
										{
											"begin": 14337,
											"end": 14584,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14337,
											"end": 14584,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14337,
											"end": 14584,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "91"
										},
										{
											"begin": 14337,
											"end": 14584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14337,
											"end": 14584,
											"name": "tag",
											"source": 9,
											"value": "90"
										},
										{
											"begin": 14337,
											"end": 14584,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14337,
											"end": 14584,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "92"
										},
										{
											"begin": 14337,
											"end": 14584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14337,
											"end": 14584,
											"name": "tag",
											"source": 9,
											"value": "89"
										},
										{
											"begin": 14337,
											"end": 14584,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14337,
											"end": 14584,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 3817,
											"end": 3844,
											"name": "tag",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 3817,
											"end": 3844,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3817,
											"end": 3844,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "93"
										},
										{
											"begin": 3817,
											"end": 3844,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "94"
										},
										{
											"begin": 3817,
											"end": 3844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3817,
											"end": 3844,
											"name": "tag",
											"source": 9,
											"value": "93"
										},
										{
											"begin": 3817,
											"end": 3844,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3817,
											"end": 3844,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3817,
											"end": 3844,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3817,
											"end": 3844,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "95"
										},
										{
											"begin": 3817,
											"end": 3844,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3817,
											"end": 3844,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3817,
											"end": 3844,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 3817,
											"end": 3844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3817,
											"end": 3844,
											"name": "tag",
											"source": 9,
											"value": "95"
										},
										{
											"begin": 3817,
											"end": 3844,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3817,
											"end": 3844,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3817,
											"end": 3844,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3817,
											"end": 3844,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3817,
											"end": 3844,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3817,
											"end": 3844,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3817,
											"end": 3844,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3817,
											"end": 3844,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 3692,
											"end": 3750,
											"name": "tag",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 3692,
											"end": 3750,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3692,
											"end": 3750,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "97"
										},
										{
											"begin": 3692,
											"end": 3750,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3692,
											"end": 3750,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3692,
											"end": 3750,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 3692,
											"end": 3750,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3692,
											"end": 3750,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3692,
											"end": 3750,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3692,
											"end": 3750,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3692,
											"end": 3750,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "98"
										},
										{
											"begin": 3692,
											"end": 3750,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3692,
											"end": 3750,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3692,
											"end": 3750,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "91"
										},
										{
											"begin": 3692,
											"end": 3750,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3692,
											"end": 3750,
											"name": "tag",
											"source": 9,
											"value": "98"
										},
										{
											"begin": 3692,
											"end": 3750,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3692,
											"end": 3750,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "99"
										},
										{
											"begin": 3692,
											"end": 3750,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3692,
											"end": 3750,
											"name": "tag",
											"source": 9,
											"value": "97"
										},
										{
											"begin": 3692,
											"end": 3750,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3692,
											"end": 3750,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3692,
											"end": 3750,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3692,
											"end": 3750,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 3692,
											"end": 3750,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 3692,
											"end": 3750,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 3692,
											"end": 3750,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3692,
											"end": 3750,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3692,
											"end": 3750,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3692,
											"end": 3750,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "62"
										},
										{
											"begin": 3692,
											"end": 3750,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3692,
											"end": 3750,
											"name": "tag",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 3692,
											"end": 3750,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3692,
											"end": 3750,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3692,
											"end": 3750,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3692,
											"end": 3750,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3692,
											"end": 3750,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3692,
											"end": 3750,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3692,
											"end": 3750,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3692,
											"end": 3750,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 1933,
											"end": 1961,
											"name": "tag",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 1933,
											"end": 1961,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1933,
											"end": 1961,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "101"
										},
										{
											"begin": 1933,
											"end": 1961,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "102"
										},
										{
											"begin": 1933,
											"end": 1961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1933,
											"end": 1961,
											"name": "tag",
											"source": 9,
											"value": "101"
										},
										{
											"begin": 1933,
											"end": 1961,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1933,
											"end": 1961,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1933,
											"end": 1961,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1933,
											"end": 1961,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "103"
										},
										{
											"begin": 1933,
											"end": 1961,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1933,
											"end": 1961,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1933,
											"end": 1961,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 1933,
											"end": 1961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1933,
											"end": 1961,
											"name": "tag",
											"source": 9,
											"value": "103"
										},
										{
											"begin": 1933,
											"end": 1961,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1933,
											"end": 1961,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1933,
											"end": 1961,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1933,
											"end": 1961,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1933,
											"end": 1961,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1933,
											"end": 1961,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1933,
											"end": 1961,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1933,
											"end": 1961,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 1534,
											"end": 1565,
											"name": "tag",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 1534,
											"end": 1565,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1534,
											"end": 1565,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "104"
										},
										{
											"begin": 1534,
											"end": 1565,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "105"
										},
										{
											"begin": 1534,
											"end": 1565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1534,
											"end": 1565,
											"name": "tag",
											"source": 9,
											"value": "104"
										},
										{
											"begin": 1534,
											"end": 1565,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1534,
											"end": 1565,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1534,
											"end": 1565,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1534,
											"end": 1565,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "106"
										},
										{
											"begin": 1534,
											"end": 1565,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1534,
											"end": 1565,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1534,
											"end": 1565,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 1534,
											"end": 1565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1534,
											"end": 1565,
											"name": "tag",
											"source": 9,
											"value": "106"
										},
										{
											"begin": 1534,
											"end": 1565,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1534,
											"end": 1565,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1534,
											"end": 1565,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1534,
											"end": 1565,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1534,
											"end": 1565,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1534,
											"end": 1565,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1534,
											"end": 1565,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1534,
											"end": 1565,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 2890,
											"end": 2949,
											"name": "tag",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 2890,
											"end": 2949,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2890,
											"end": 2949,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "107"
										},
										{
											"begin": 2890,
											"end": 2949,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2890,
											"end": 2949,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2890,
											"end": 2949,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 2890,
											"end": 2949,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2890,
											"end": 2949,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2890,
											"end": 2949,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2890,
											"end": 2949,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2890,
											"end": 2949,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "108"
										},
										{
											"begin": 2890,
											"end": 2949,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2890,
											"end": 2949,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2890,
											"end": 2949,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 2890,
											"end": 2949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2890,
											"end": 2949,
											"name": "tag",
											"source": 9,
											"value": "108"
										},
										{
											"begin": 2890,
											"end": 2949,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2890,
											"end": 2949,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "109"
										},
										{
											"begin": 2890,
											"end": 2949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2890,
											"end": 2949,
											"name": "tag",
											"source": 9,
											"value": "107"
										},
										{
											"begin": 2890,
											"end": 2949,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2890,
											"end": 2949,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2890,
											"end": 2949,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2890,
											"end": 2949,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "110"
										},
										{
											"begin": 2890,
											"end": 2949,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2890,
											"end": 2949,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2890,
											"end": 2949,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 2890,
											"end": 2949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2890,
											"end": 2949,
											"name": "tag",
											"source": 9,
											"value": "110"
										},
										{
											"begin": 2890,
											"end": 2949,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2890,
											"end": 2949,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2890,
											"end": 2949,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2890,
											"end": 2949,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2890,
											"end": 2949,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2890,
											"end": 2949,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2890,
											"end": 2949,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2890,
											"end": 2949,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 3429,
											"end": 3476,
											"name": "tag",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 3429,
											"end": 3476,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3429,
											"end": 3476,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "111"
										},
										{
											"begin": 3429,
											"end": 3476,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3429,
											"end": 3476,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3429,
											"end": 3476,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 3429,
											"end": 3476,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3429,
											"end": 3476,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3429,
											"end": 3476,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3429,
											"end": 3476,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3429,
											"end": 3476,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "112"
										},
										{
											"begin": 3429,
											"end": 3476,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3429,
											"end": 3476,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3429,
											"end": 3476,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 3429,
											"end": 3476,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3429,
											"end": 3476,
											"name": "tag",
											"source": 9,
											"value": "112"
										},
										{
											"begin": 3429,
											"end": 3476,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3429,
											"end": 3476,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "113"
										},
										{
											"begin": 3429,
											"end": 3476,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3429,
											"end": 3476,
											"name": "tag",
											"source": 9,
											"value": "111"
										},
										{
											"begin": 3429,
											"end": 3476,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3429,
											"end": 3476,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3429,
											"end": 3476,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3429,
											"end": 3476,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "114"
										},
										{
											"begin": 3429,
											"end": 3476,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3429,
											"end": 3476,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3429,
											"end": 3476,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 3429,
											"end": 3476,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3429,
											"end": 3476,
											"name": "tag",
											"source": 9,
											"value": "114"
										},
										{
											"begin": 3429,
											"end": 3476,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3429,
											"end": 3476,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3429,
											"end": 3476,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3429,
											"end": 3476,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3429,
											"end": 3476,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3429,
											"end": 3476,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3429,
											"end": 3476,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3429,
											"end": 3476,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 2332,
											"end": 2350,
											"name": "tag",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2332,
											"end": 2350,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2332,
											"end": 2350,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "115"
										},
										{
											"begin": 2332,
											"end": 2350,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "116"
										},
										{
											"begin": 2332,
											"end": 2350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2332,
											"end": 2350,
											"name": "tag",
											"source": 9,
											"value": "115"
										},
										{
											"begin": 2332,
											"end": 2350,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2332,
											"end": 2350,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2332,
											"end": 2350,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2332,
											"end": 2350,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "117"
										},
										{
											"begin": 2332,
											"end": 2350,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2332,
											"end": 2350,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2332,
											"end": 2350,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 2332,
											"end": 2350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2332,
											"end": 2350,
											"name": "tag",
											"source": 9,
											"value": "117"
										},
										{
											"begin": 2332,
											"end": 2350,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2332,
											"end": 2350,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2332,
											"end": 2350,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2332,
											"end": 2350,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2332,
											"end": 2350,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2332,
											"end": 2350,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2332,
											"end": 2350,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2332,
											"end": 2350,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 2710,
											"end": 2757,
											"name": "tag",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 2710,
											"end": 2757,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2710,
											"end": 2757,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "118"
										},
										{
											"begin": 2710,
											"end": 2757,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2710,
											"end": 2757,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2710,
											"end": 2757,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 2710,
											"end": 2757,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2710,
											"end": 2757,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2710,
											"end": 2757,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2710,
											"end": 2757,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2710,
											"end": 2757,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "119"
										},
										{
											"begin": 2710,
											"end": 2757,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2710,
											"end": 2757,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2710,
											"end": 2757,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 2710,
											"end": 2757,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2710,
											"end": 2757,
											"name": "tag",
											"source": 9,
											"value": "119"
										},
										{
											"begin": 2710,
											"end": 2757,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2710,
											"end": 2757,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 2710,
											"end": 2757,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2710,
											"end": 2757,
											"name": "tag",
											"source": 9,
											"value": "118"
										},
										{
											"begin": 2710,
											"end": 2757,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2710,
											"end": 2757,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2710,
											"end": 2757,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2710,
											"end": 2757,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "121"
										},
										{
											"begin": 2710,
											"end": 2757,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2710,
											"end": 2757,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2710,
											"end": 2757,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 2710,
											"end": 2757,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2710,
											"end": 2757,
											"name": "tag",
											"source": 9,
											"value": "121"
										},
										{
											"begin": 2710,
											"end": 2757,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2710,
											"end": 2757,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2710,
											"end": 2757,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2710,
											"end": 2757,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2710,
											"end": 2757,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2710,
											"end": 2757,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2710,
											"end": 2757,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2710,
											"end": 2757,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 1686,
											"end": 1720,
											"name": "tag",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 1686,
											"end": 1720,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1686,
											"end": 1720,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "122"
										},
										{
											"begin": 1686,
											"end": 1720,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "123"
										},
										{
											"begin": 1686,
											"end": 1720,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1686,
											"end": 1720,
											"name": "tag",
											"source": 9,
											"value": "122"
										},
										{
											"begin": 1686,
											"end": 1720,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1686,
											"end": 1720,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1686,
											"end": 1720,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1686,
											"end": 1720,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "124"
										},
										{
											"begin": 1686,
											"end": 1720,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1686,
											"end": 1720,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1686,
											"end": 1720,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 1686,
											"end": 1720,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1686,
											"end": 1720,
											"name": "tag",
											"source": 9,
											"value": "124"
										},
										{
											"begin": 1686,
											"end": 1720,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1686,
											"end": 1720,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1686,
											"end": 1720,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1686,
											"end": 1720,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1686,
											"end": 1720,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1686,
											"end": 1720,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1686,
											"end": 1720,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1686,
											"end": 1720,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2494,
											"end": 2535,
											"name": "tag",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 2494,
											"end": 2535,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2494,
											"end": 2535,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "127"
										},
										{
											"begin": 2494,
											"end": 2535,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2494,
											"end": 2535,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2494,
											"end": 2535,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 2494,
											"end": 2535,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2494,
											"end": 2535,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2494,
											"end": 2535,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2494,
											"end": 2535,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2494,
											"end": 2535,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "128"
										},
										{
											"begin": 2494,
											"end": 2535,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2494,
											"end": 2535,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2494,
											"end": 2535,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 2494,
											"end": 2535,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2494,
											"end": 2535,
											"name": "tag",
											"source": 9,
											"value": "128"
										},
										{
											"begin": 2494,
											"end": 2535,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2494,
											"end": 2535,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "129"
										},
										{
											"begin": 2494,
											"end": 2535,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2494,
											"end": 2535,
											"name": "tag",
											"source": 9,
											"value": "127"
										},
										{
											"begin": 2494,
											"end": 2535,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2494,
											"end": 2535,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2494,
											"end": 2535,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2494,
											"end": 2535,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "130"
										},
										{
											"begin": 2494,
											"end": 2535,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2494,
											"end": 2535,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2494,
											"end": 2535,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 2494,
											"end": 2535,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2494,
											"end": 2535,
											"name": "tag",
											"source": 9,
											"value": "130"
										},
										{
											"begin": 2494,
											"end": 2535,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2494,
											"end": 2535,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2494,
											"end": 2535,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2494,
											"end": 2535,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2494,
											"end": 2535,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2494,
											"end": 2535,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2494,
											"end": 2535,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2494,
											"end": 2535,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 2047,
											"end": 2094,
											"name": "tag",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 2047,
											"end": 2094,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2047,
											"end": 2094,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "131"
										},
										{
											"begin": 2047,
											"end": 2094,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "132"
										},
										{
											"begin": 2047,
											"end": 2094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2047,
											"end": 2094,
											"name": "tag",
											"source": 9,
											"value": "131"
										},
										{
											"begin": 2047,
											"end": 2094,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2047,
											"end": 2094,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2047,
											"end": 2094,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2047,
											"end": 2094,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "133"
										},
										{
											"begin": 2047,
											"end": 2094,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2047,
											"end": 2094,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2047,
											"end": 2094,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 2047,
											"end": 2094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2047,
											"end": 2094,
											"name": "tag",
											"source": 9,
											"value": "133"
										},
										{
											"begin": 2047,
											"end": 2094,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2047,
											"end": 2094,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2047,
											"end": 2094,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2047,
											"end": 2094,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2047,
											"end": 2094,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2047,
											"end": 2094,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2047,
											"end": 2094,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2047,
											"end": 2094,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 5603,
											"end": 6485,
											"name": "tag",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 5603,
											"end": 6485,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5603,
											"end": 6485,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "134"
										},
										{
											"begin": 5603,
											"end": 6485,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5603,
											"end": 6485,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5603,
											"end": 6485,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 5603,
											"end": 6485,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5603,
											"end": 6485,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5603,
											"end": 6485,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5603,
											"end": 6485,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5603,
											"end": 6485,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "135"
										},
										{
											"begin": 5603,
											"end": 6485,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5603,
											"end": 6485,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5603,
											"end": 6485,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "136"
										},
										{
											"begin": 5603,
											"end": 6485,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5603,
											"end": 6485,
											"name": "tag",
											"source": 9,
											"value": "135"
										},
										{
											"begin": 5603,
											"end": 6485,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5603,
											"end": 6485,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "137"
										},
										{
											"begin": 5603,
											"end": 6485,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5603,
											"end": 6485,
											"name": "tag",
											"source": 9,
											"value": "134"
										},
										{
											"begin": 5603,
											"end": 6485,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5603,
											"end": 6485,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2100,
											"end": 2141,
											"name": "tag",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 2100,
											"end": 2141,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2100,
											"end": 2141,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "141"
										},
										{
											"begin": 2100,
											"end": 2141,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "142"
										},
										{
											"begin": 2100,
											"end": 2141,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2100,
											"end": 2141,
											"name": "tag",
											"source": 9,
											"value": "141"
										},
										{
											"begin": 2100,
											"end": 2141,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2100,
											"end": 2141,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2100,
											"end": 2141,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2100,
											"end": 2141,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "143"
										},
										{
											"begin": 2100,
											"end": 2141,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2100,
											"end": 2141,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2100,
											"end": 2141,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 2100,
											"end": 2141,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2100,
											"end": 2141,
											"name": "tag",
											"source": 9,
											"value": "143"
										},
										{
											"begin": 2100,
											"end": 2141,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2100,
											"end": 2141,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2100,
											"end": 2141,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2100,
											"end": 2141,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2100,
											"end": 2141,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2100,
											"end": 2141,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2100,
											"end": 2141,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2100,
											"end": 2141,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 1898,
											"end": 1927,
											"name": "tag",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 1898,
											"end": 1927,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1898,
											"end": 1927,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "144"
										},
										{
											"begin": 1898,
											"end": 1927,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "145"
										},
										{
											"begin": 1898,
											"end": 1927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1898,
											"end": 1927,
											"name": "tag",
											"source": 9,
											"value": "144"
										},
										{
											"begin": 1898,
											"end": 1927,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1898,
											"end": 1927,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1898,
											"end": 1927,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1898,
											"end": 1927,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "146"
										},
										{
											"begin": 1898,
											"end": 1927,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1898,
											"end": 1927,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1898,
											"end": 1927,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 1898,
											"end": 1927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1898,
											"end": 1927,
											"name": "tag",
											"source": 9,
											"value": "146"
										},
										{
											"begin": 1898,
											"end": 1927,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1898,
											"end": 1927,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1898,
											"end": 1927,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1898,
											"end": 1927,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1898,
											"end": 1927,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1898,
											"end": 1927,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1898,
											"end": 1927,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1898,
											"end": 1927,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "tag",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "147"
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "148"
										},
										{
											"begin": 1466,
											"end": 1496,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "tag",
											"source": 9,
											"value": "147"
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "149"
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 1466,
											"end": 1496,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "tag",
											"source": 9,
											"value": "149"
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 11155,
											"end": 12811,
											"name": "tag",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 11155,
											"end": 12811,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11155,
											"end": 12811,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "150"
										},
										{
											"begin": 11155,
											"end": 12811,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 11155,
											"end": 12811,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11155,
											"end": 12811,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 11155,
											"end": 12811,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 11155,
											"end": 12811,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11155,
											"end": 12811,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11155,
											"end": 12811,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11155,
											"end": 12811,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "151"
										},
										{
											"begin": 11155,
											"end": 12811,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11155,
											"end": 12811,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11155,
											"end": 12811,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 11155,
											"end": 12811,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11155,
											"end": 12811,
											"name": "tag",
											"source": 9,
											"value": "151"
										},
										{
											"begin": 11155,
											"end": 12811,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11155,
											"end": 12811,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "152"
										},
										{
											"begin": 11155,
											"end": 12811,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11155,
											"end": 12811,
											"name": "tag",
											"source": 9,
											"value": "150"
										},
										{
											"begin": 11155,
											"end": 12811,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11155,
											"end": 12811,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 1502,
											"end": 1528,
											"name": "tag",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 1502,
											"end": 1528,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1502,
											"end": 1528,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "153"
										},
										{
											"begin": 1502,
											"end": 1528,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "154"
										},
										{
											"begin": 1502,
											"end": 1528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1502,
											"end": 1528,
											"name": "tag",
											"source": 9,
											"value": "153"
										},
										{
											"begin": 1502,
											"end": 1528,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1502,
											"end": 1528,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1502,
											"end": 1528,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1502,
											"end": 1528,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "155"
										},
										{
											"begin": 1502,
											"end": 1528,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1502,
											"end": 1528,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1502,
											"end": 1528,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 1502,
											"end": 1528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1502,
											"end": 1528,
											"name": "tag",
											"source": 9,
											"value": "155"
										},
										{
											"begin": 1502,
											"end": 1528,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1502,
											"end": 1528,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1502,
											"end": 1528,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1502,
											"end": 1528,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1502,
											"end": 1528,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1502,
											"end": 1528,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1502,
											"end": 1528,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1502,
											"end": 1528,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 8805,
											"end": 9748,
											"name": "tag",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 8805,
											"end": 9748,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8805,
											"end": 9748,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "156"
										},
										{
											"begin": 8805,
											"end": 9748,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 8805,
											"end": 9748,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8805,
											"end": 9748,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 8805,
											"end": 9748,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8805,
											"end": 9748,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8805,
											"end": 9748,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8805,
											"end": 9748,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8805,
											"end": 9748,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "157"
										},
										{
											"begin": 8805,
											"end": 9748,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8805,
											"end": 9748,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8805,
											"end": 9748,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "158"
										},
										{
											"begin": 8805,
											"end": 9748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8805,
											"end": 9748,
											"name": "tag",
											"source": 9,
											"value": "157"
										},
										{
											"begin": 8805,
											"end": 9748,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8805,
											"end": 9748,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "159"
										},
										{
											"begin": 8805,
											"end": 9748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8805,
											"end": 9748,
											"name": "tag",
											"source": 9,
											"value": "156"
										},
										{
											"begin": 8805,
											"end": 9748,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8805,
											"end": 9748,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 7128,
											"end": 8484,
											"name": "tag",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 7128,
											"end": 8484,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7128,
											"end": 8484,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "160"
										},
										{
											"begin": 7128,
											"end": 8484,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7128,
											"end": 8484,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7128,
											"end": 8484,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 7128,
											"end": 8484,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7128,
											"end": 8484,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7128,
											"end": 8484,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7128,
											"end": 8484,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7128,
											"end": 8484,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "161"
										},
										{
											"begin": 7128,
											"end": 8484,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7128,
											"end": 8484,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7128,
											"end": 8484,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 7128,
											"end": 8484,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7128,
											"end": 8484,
											"name": "tag",
											"source": 9,
											"value": "161"
										},
										{
											"begin": 7128,
											"end": 8484,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7128,
											"end": 8484,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "163"
										},
										{
											"begin": 7128,
											"end": 8484,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7128,
											"end": 8484,
											"name": "tag",
											"source": 9,
											"value": "160"
										},
										{
											"begin": 7128,
											"end": 8484,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7128,
											"end": 8484,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 1648,
											"end": 1680,
											"name": "tag",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 1648,
											"end": 1680,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1648,
											"end": 1680,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "164"
										},
										{
											"begin": 1648,
											"end": 1680,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "165"
										},
										{
											"begin": 1648,
											"end": 1680,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1648,
											"end": 1680,
											"name": "tag",
											"source": 9,
											"value": "164"
										},
										{
											"begin": 1648,
											"end": 1680,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1648,
											"end": 1680,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1648,
											"end": 1680,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1648,
											"end": 1680,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 1648,
											"end": 1680,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1648,
											"end": 1680,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1648,
											"end": 1680,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 1648,
											"end": 1680,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1648,
											"end": 1680,
											"name": "tag",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 1648,
											"end": 1680,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1648,
											"end": 1680,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1648,
											"end": 1680,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1648,
											"end": 1680,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1648,
											"end": 1680,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1648,
											"end": 1680,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1648,
											"end": 1680,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1648,
											"end": 1680,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 2243,
											"end": 2291,
											"name": "tag",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 2243,
											"end": 2291,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2243,
											"end": 2291,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "167"
										},
										{
											"begin": 2243,
											"end": 2291,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "168"
										},
										{
											"begin": 2243,
											"end": 2291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2243,
											"end": 2291,
											"name": "tag",
											"source": 9,
											"value": "167"
										},
										{
											"begin": 2243,
											"end": 2291,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2243,
											"end": 2291,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2243,
											"end": 2291,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2243,
											"end": 2291,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "169"
										},
										{
											"begin": 2243,
											"end": 2291,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2243,
											"end": 2291,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2243,
											"end": 2291,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 2243,
											"end": 2291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2243,
											"end": 2291,
											"name": "tag",
											"source": 9,
											"value": "169"
										},
										{
											"begin": 2243,
											"end": 2291,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2243,
											"end": 2291,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2243,
											"end": 2291,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2243,
											"end": 2291,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2243,
											"end": 2291,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2243,
											"end": 2291,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2243,
											"end": 2291,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2243,
											"end": 2291,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 1571,
											"end": 1604,
											"name": "tag",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 1571,
											"end": 1604,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1571,
											"end": 1604,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "170"
										},
										{
											"begin": 1571,
											"end": 1604,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "171"
										},
										{
											"begin": 1571,
											"end": 1604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1571,
											"end": 1604,
											"name": "tag",
											"source": 9,
											"value": "170"
										},
										{
											"begin": 1571,
											"end": 1604,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1571,
											"end": 1604,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1571,
											"end": 1604,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1571,
											"end": 1604,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "172"
										},
										{
											"begin": 1571,
											"end": 1604,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1571,
											"end": 1604,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1571,
											"end": 1604,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 1571,
											"end": 1604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1571,
											"end": 1604,
											"name": "tag",
											"source": 9,
											"value": "172"
										},
										{
											"begin": 1571,
											"end": 1604,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1571,
											"end": 1604,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1571,
											"end": 1604,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1571,
											"end": 1604,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1571,
											"end": 1604,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1571,
											"end": 1604,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1571,
											"end": 1604,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1571,
											"end": 1604,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2589,
											"end": 2639,
											"name": "tag",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 2589,
											"end": 2639,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2589,
											"end": 2639,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "176"
										},
										{
											"begin": 2589,
											"end": 2639,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2589,
											"end": 2639,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2589,
											"end": 2639,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 2589,
											"end": 2639,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2589,
											"end": 2639,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2589,
											"end": 2639,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2589,
											"end": 2639,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2589,
											"end": 2639,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "177"
										},
										{
											"begin": 2589,
											"end": 2639,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2589,
											"end": 2639,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2589,
											"end": 2639,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 2589,
											"end": 2639,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2589,
											"end": 2639,
											"name": "tag",
											"source": 9,
											"value": "177"
										},
										{
											"begin": 2589,
											"end": 2639,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2589,
											"end": 2639,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "178"
										},
										{
											"begin": 2589,
											"end": 2639,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2589,
											"end": 2639,
											"name": "tag",
											"source": 9,
											"value": "176"
										},
										{
											"begin": 2589,
											"end": 2639,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2589,
											"end": 2639,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2589,
											"end": 2639,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2589,
											"end": 2639,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "179"
										},
										{
											"begin": 2589,
											"end": 2639,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2589,
											"end": 2639,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2589,
											"end": 2639,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 2589,
											"end": 2639,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2589,
											"end": 2639,
											"name": "tag",
											"source": 9,
											"value": "179"
										},
										{
											"begin": 2589,
											"end": 2639,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2589,
											"end": 2639,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2589,
											"end": 2639,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2589,
											"end": 2639,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2589,
											"end": 2639,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2589,
											"end": 2639,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2589,
											"end": 2639,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2589,
											"end": 2639,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 1430,
											"end": 1460,
											"name": "tag",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1430,
											"end": 1460,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1430,
											"end": 1460,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "180"
										},
										{
											"begin": 1430,
											"end": 1460,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "181"
										},
										{
											"begin": 1430,
											"end": 1460,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1430,
											"end": 1460,
											"name": "tag",
											"source": 9,
											"value": "180"
										},
										{
											"begin": 1430,
											"end": 1460,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1430,
											"end": 1460,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1430,
											"end": 1460,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1430,
											"end": 1460,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "182"
										},
										{
											"begin": 1430,
											"end": 1460,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1430,
											"end": 1460,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1430,
											"end": 1460,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 1430,
											"end": 1460,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1430,
											"end": 1460,
											"name": "tag",
											"source": 9,
											"value": "182"
										},
										{
											"begin": 1430,
											"end": 1460,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1430,
											"end": 1460,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1430,
											"end": 1460,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1430,
											"end": 1460,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1430,
											"end": 1460,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1430,
											"end": 1460,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1430,
											"end": 1460,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1430,
											"end": 1460,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 2763,
											"end": 2807,
											"name": "tag",
											"source": 9,
											"value": "51"
										},
										{
											"begin": 2763,
											"end": 2807,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2763,
											"end": 2807,
											"name": "PUSH",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 2763,
											"end": 2807,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2763,
											"end": 2807,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2763,
											"end": 2807,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2763,
											"end": 2807,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2763,
											"end": 2807,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2763,
											"end": 2807,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2763,
											"end": 2807,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2763,
											"end": 2807,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 2763,
											"end": 2807,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2763,
											"end": 2807,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2763,
											"end": 2807,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2763,
											"end": 2807,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2763,
											"end": 2807,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2763,
											"end": 2807,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2763,
											"end": 2807,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2763,
											"end": 2807,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10151,
											"end": 10856,
											"name": "tag",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 10151,
											"end": 10856,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4612,
											"end": 4618,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 4612,
											"end": 4618,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4612,
											"end": 4618,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4612,
											"end": 4618,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4612,
											"end": 4618,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4612,
											"end": 4618,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 4612,
											"end": 4618,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 4612,
											"end": 4618,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4612,
											"end": 4618,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 4612,
											"end": 4618,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 4612,
											"end": 4618,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4611,
											"end": 4618,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4603,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "184"
										},
										{
											"begin": 4603,
											"end": 4641,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4603,
											"end": 4641,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4603,
											"end": 4641,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4603,
											"end": 4641,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4603,
											"end": 4641,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4603,
											"end": 4641,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4603,
											"end": 4641,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4603,
											"end": 4641,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4603,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "185"
										},
										{
											"begin": 4603,
											"end": 4641,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4603,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "186"
										},
										{
											"begin": 4603,
											"end": 4641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4603,
											"end": 4641,
											"name": "tag",
											"source": 9,
											"value": "185"
										},
										{
											"begin": 4603,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4603,
											"end": 4641,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4603,
											"end": 4641,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4603,
											"end": 4641,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4603,
											"end": 4641,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4603,
											"end": 4641,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4603,
											"end": 4641,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4603,
											"end": 4641,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4603,
											"end": 4641,
											"name": "tag",
											"source": 9,
											"value": "184"
										},
										{
											"begin": 4603,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 2261,
											"end": 2280,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10239,
											"end": 10250,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 10239,
											"end": 10250,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 10239,
											"end": 10250,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10239,
											"end": 10250,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 10239,
											"end": 10250,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10239,
											"end": 10250,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 10239,
											"end": 10250,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 10239,
											"end": 10250,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10239,
											"end": 10250,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 10239,
											"end": 10250,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 10239,
											"end": 10250,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10231,
											"end": 10270,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "191"
										},
										{
											"begin": 10231,
											"end": 10270,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10231,
											"end": 10270,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10231,
											"end": 10270,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 10231,
											"end": 10270,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10231,
											"end": 10270,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10231,
											"end": 10270,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10231,
											"end": 10270,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 10231,
											"end": 10270,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10231,
											"end": 10270,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "192"
										},
										{
											"begin": 10231,
											"end": 10270,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10231,
											"end": 10270,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "193"
										},
										{
											"begin": 10231,
											"end": 10270,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10231,
											"end": 10270,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "192"
										},
										{
											"begin": 10231,
											"end": 10270,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10231,
											"end": 10270,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10231,
											"end": 10270,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 10231,
											"end": 10270,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10231,
											"end": 10270,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10231,
											"end": 10270,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 10231,
											"end": 10270,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10231,
											"end": 10270,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 10231,
											"end": 10270,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "191"
										},
										{
											"begin": 10231,
											"end": 10270,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10352,
											"end": 10360,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 10352,
											"end": 10360,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10352,
											"end": 10360,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10352,
											"end": 10360,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 10352,
											"end": 10360,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10352,
											"end": 10360,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 10352,
											"end": 10360,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 10352,
											"end": 10360,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10352,
											"end": 10360,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 10352,
											"end": 10360,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10352,
											"end": 10360,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10352,
											"end": 10373,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10352,
											"end": 10373,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10352,
											"end": 10373,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "23B872DD"
										},
										{
											"begin": 10374,
											"end": 10384,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 10386,
											"end": 10398,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "1B"
										},
										{
											"begin": 10386,
											"end": 10398,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10386,
											"end": 10398,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10386,
											"end": 10398,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 10386,
											"end": 10398,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10386,
											"end": 10398,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 10386,
											"end": 10398,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 10386,
											"end": 10398,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10386,
											"end": 10398,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 10386,
											"end": 10398,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10386,
											"end": 10398,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10400,
											"end": 10406,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 10352,
											"end": 10407,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10352,
											"end": 10407,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 10352,
											"end": 10407,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 10352,
											"end": 10407,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10352,
											"end": 10407,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10352,
											"end": 10407,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 10352,
											"end": 10407,
											"modifierDepth": 2,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 10352,
											"end": 10407,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10352,
											"end": 10407,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10352,
											"end": 10407,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 10352,
											"end": 10407,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10352,
											"end": 10407,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "194"
										},
										{
											"begin": 10352,
											"end": 10407,
											"modifierDepth": 2,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 10352,
											"end": 10407,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 10352,
											"end": 10407,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10352,
											"end": 10407,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10352,
											"end": 10407,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "195"
										},
										{
											"begin": 10352,
											"end": 10407,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10352,
											"end": 10407,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "194"
										},
										{
											"begin": 10352,
											"end": 10407,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10352,
											"end": 10407,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10352,
											"end": 10407,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10352,
											"end": 10407,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 10352,
											"end": 10407,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10352,
											"end": 10407,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10352,
											"end": 10407,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 10352,
											"end": 10407,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10352,
											"end": 10407,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10352,
											"end": 10407,
											"modifierDepth": 2,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 10352,
											"end": 10407,
											"modifierDepth": 2,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 10352,
											"end": 10407,
											"modifierDepth": 2,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 10352,
											"end": 10407,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 10352,
											"end": 10407,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10352,
											"end": 10407,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 10352,
											"end": 10407,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "197"
										},
										{
											"begin": 10352,
											"end": 10407,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10352,
											"end": 10407,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 10352,
											"end": 10407,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10352,
											"end": 10407,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10352,
											"end": 10407,
											"modifierDepth": 2,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 10352,
											"end": 10407,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 10352,
											"end": 10407,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10352,
											"end": 10407,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 10352,
											"end": 10407,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "197"
										},
										{
											"begin": 10352,
											"end": 10407,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10352,
											"end": 10407,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10352,
											"end": 10407,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10352,
											"end": 10407,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10352,
											"end": 10407,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10352,
											"end": 10407,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10352,
											"end": 10407,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 10352,
											"end": 10407,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 10352,
											"end": 10407,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 10352,
											"end": 10407,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 10352,
											"end": 10407,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 10352,
											"end": 10407,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10352,
											"end": 10407,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10352,
											"end": 10407,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10352,
											"end": 10407,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10352,
											"end": 10407,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10352,
											"end": 10407,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10352,
											"end": 10407,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10352,
											"end": 10407,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10352,
											"end": 10407,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10352,
											"end": 10407,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10352,
											"end": 10407,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10352,
											"end": 10407,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10352,
											"end": 10407,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 10352,
											"end": 10407,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10352,
											"end": 10407,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10352,
											"end": 10407,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "199"
										},
										{
											"begin": 10352,
											"end": 10407,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10352,
											"end": 10407,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 10352,
											"end": 10407,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10344,
											"end": 10427,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "200"
										},
										{
											"begin": 10344,
											"end": 10427,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10344,
											"end": 10427,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10344,
											"end": 10427,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 10344,
											"end": 10427,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10344,
											"end": 10427,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10344,
											"end": 10427,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10344,
											"end": 10427,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 10344,
											"end": 10427,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10344,
											"end": 10427,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "201"
										},
										{
											"begin": 10344,
											"end": 10427,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10344,
											"end": 10427,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "202"
										},
										{
											"begin": 10344,
											"end": 10427,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10344,
											"end": 10427,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "201"
										},
										{
											"begin": 10344,
											"end": 10427,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10344,
											"end": 10427,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10344,
											"end": 10427,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 10344,
											"end": 10427,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10344,
											"end": 10427,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10344,
											"end": 10427,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 10344,
											"end": 10427,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10344,
											"end": 10427,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 10344,
											"end": 10427,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "200"
										},
										{
											"begin": 10344,
											"end": 10427,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10438,
											"end": 10453,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10456,
											"end": 10462,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 10456,
											"end": 10474,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10463,
											"end": 10473,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 10456,
											"end": 10474,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10456,
											"end": 10474,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10456,
											"end": 10474,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10456,
											"end": 10474,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10456,
											"end": 10474,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10456,
											"end": 10474,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10456,
											"end": 10474,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10456,
											"end": 10474,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10456,
											"end": 10474,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10456,
											"end": 10474,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10456,
											"end": 10474,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10456,
											"end": 10474,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10456,
											"end": 10474,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10456,
											"end": 10474,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10456,
											"end": 10474,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 10438,
											"end": 10474,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10438,
											"end": 10474,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10504,
											"end": 10505,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10488,
											"end": 10489,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10488,
											"end": 10500,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 10488,
											"end": 10500,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10488,
											"end": 10500,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 10488,
											"end": 10505,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 10484,
											"end": 10737,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "203"
										},
										{
											"begin": 10484,
											"end": 10737,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10536,
											"end": 10551,
											"modifierDepth": 2,
											"name": "TIMESTAMP",
											"source": 9
										},
										{
											"begin": 10521,
											"end": 10522,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10521,
											"end": 10533,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 10521,
											"end": 10533,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10521,
											"end": 10551,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10521,
											"end": 10551,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10521,
											"end": 10551,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 10521,
											"end": 10551,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10592,
											"end": 10595,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 10565,
											"end": 10577,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 10565,
											"end": 10589,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10578,
											"end": 10588,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 10565,
											"end": 10589,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10565,
											"end": 10589,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10565,
											"end": 10589,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10565,
											"end": 10589,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10565,
											"end": 10589,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10565,
											"end": 10589,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10565,
											"end": 10589,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10565,
											"end": 10589,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10565,
											"end": 10589,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10565,
											"end": 10589,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10565,
											"end": 10589,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10565,
											"end": 10589,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10565,
											"end": 10589,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10565,
											"end": 10589,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10565,
											"end": 10589,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 10565,
											"end": 10595,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10565,
											"end": 10595,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10565,
											"end": 10595,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 10565,
											"end": 10595,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10484,
											"end": 10737,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "204"
										},
										{
											"begin": 10484,
											"end": 10737,
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10484,
											"end": 10737,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "203"
										},
										{
											"begin": 10484,
											"end": 10737,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10724,
											"end": 10726,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 10696,
											"end": 10708,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 10696,
											"end": 10720,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10709,
											"end": 10719,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 10696,
											"end": 10720,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10696,
											"end": 10720,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10696,
											"end": 10720,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10696,
											"end": 10720,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10696,
											"end": 10720,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10696,
											"end": 10720,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10696,
											"end": 10720,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10696,
											"end": 10720,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10696,
											"end": 10720,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10696,
											"end": 10720,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10696,
											"end": 10720,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10696,
											"end": 10720,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10696,
											"end": 10720,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10696,
											"end": 10720,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10696,
											"end": 10720,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 10696,
											"end": 10720,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10696,
											"end": 10726,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10696,
											"end": 10726,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10696,
											"end": 10726,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 10696,
											"end": 10726,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "205"
										},
										{
											"begin": 10696,
											"end": 10726,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10696,
											"end": 10726,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10696,
											"end": 10726,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "206"
										},
										{
											"begin": 10696,
											"end": 10726,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10696,
											"end": 10726,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "205"
										},
										{
											"begin": 10696,
											"end": 10726,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10696,
											"end": 10726,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 10696,
											"end": 10726,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10696,
											"end": 10726,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10696,
											"end": 10726,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10696,
											"end": 10726,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10696,
											"end": 10726,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 10696,
											"end": 10726,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10484,
											"end": 10737,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "204"
										},
										{
											"begin": 10484,
											"end": 10737,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10758,
											"end": 10764,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10746,
											"end": 10747,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10746,
											"end": 10754,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10746,
											"end": 10754,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10746,
											"end": 10754,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10746,
											"end": 10764,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10746,
											"end": 10764,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10746,
											"end": 10764,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 10746,
											"end": 10764,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "207"
										},
										{
											"begin": 10746,
											"end": 10764,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10746,
											"end": 10764,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10746,
											"end": 10764,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "206"
										},
										{
											"begin": 10746,
											"end": 10764,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10746,
											"end": 10764,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "207"
										},
										{
											"begin": 10746,
											"end": 10764,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10746,
											"end": 10764,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 10746,
											"end": 10764,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10746,
											"end": 10764,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10746,
											"end": 10764,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10746,
											"end": 10764,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10746,
											"end": 10764,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 10746,
											"end": 10764,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10790,
											"end": 10805,
											"modifierDepth": 2,
											"name": "TIMESTAMP",
											"source": 9
										},
										{
											"begin": 10774,
											"end": 10775,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10774,
											"end": 10787,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 10774,
											"end": 10787,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10774,
											"end": 10805,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10774,
											"end": 10805,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10774,
											"end": 10805,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 10774,
											"end": 10805,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10830,
											"end": 10840,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 10821,
											"end": 10849,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10821,
											"end": 10849,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10821,
											"end": 10849,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "6AFD9B8C734CBFEDA8BA55AFBDD1AC413BF617456B50196186371D2CC95B8572"
										},
										{
											"begin": 10842,
											"end": 10848,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10821,
											"end": 10849,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10821,
											"end": 10849,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 10821,
											"end": 10849,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "208"
										},
										{
											"begin": 10821,
											"end": 10849,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10821,
											"end": 10849,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10821,
											"end": 10849,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 10821,
											"end": 10849,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10821,
											"end": 10849,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "208"
										},
										{
											"begin": 10821,
											"end": 10849,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10821,
											"end": 10849,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10821,
											"end": 10849,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 10821,
											"end": 10849,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10821,
											"end": 10849,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10821,
											"end": 10849,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 10821,
											"end": 10849,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10821,
											"end": 10849,
											"modifierDepth": 2,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 10221,
											"end": 10856,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "209"
										},
										{
											"begin": 2303,
											"end": 2321,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "210"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "209"
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10151,
											"end": 10856,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10151,
											"end": 10856,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3134,
											"end": 3184,
											"name": "tag",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 3134,
											"end": 3184,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3134,
											"end": 3184,
											"name": "PUSH",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 3134,
											"end": 3184,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3134,
											"end": 3184,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3134,
											"end": 3184,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3134,
											"end": 3184,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3134,
											"end": 3184,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3134,
											"end": 3184,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3134,
											"end": 3184,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3134,
											"end": 3184,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 3134,
											"end": 3184,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3134,
											"end": 3184,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3134,
											"end": 3184,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3134,
											"end": 3184,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3134,
											"end": 3184,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3134,
											"end": 3184,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3134,
											"end": 3184,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3134,
											"end": 3184,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3134,
											"end": 3184,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3134,
											"end": 3184,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3134,
											"end": 3184,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3134,
											"end": 3184,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 3134,
											"end": 3184,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3134,
											"end": 3184,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3134,
											"end": 3184,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3134,
											"end": 3184,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3134,
											"end": 3184,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 3134,
											"end": 3184,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3134,
											"end": 3184,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3134,
											"end": 3184,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3134,
											"end": 3184,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3134,
											"end": 3184,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 3134,
											"end": 3184,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3134,
											"end": 3184,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3134,
											"end": 3184,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3134,
											"end": 3184,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3134,
											"end": 3184,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3134,
											"end": 3184,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1398,
											"end": 1423,
											"name": "tag",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 1398,
											"end": 1423,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1398,
											"end": 1423,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 1398,
											"end": 1423,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1398,
											"end": 1423,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1398,
											"end": 1423,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1398,
											"end": 1423,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1398,
											"end": 1423,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1398,
											"end": 1423,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 1398,
											"end": 1423,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1398,
											"end": 1423,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 1398,
											"end": 1423,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1398,
											"end": 1423,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1398,
											"end": 1423,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1398,
											"end": 1423,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2408,
											"end": 2431,
											"name": "tag",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 2408,
											"end": 2431,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2408,
											"end": 2431,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 2408,
											"end": 2431,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 2408,
											"end": 2431,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2408,
											"end": 2431,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2408,
											"end": 2431,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2408,
											"end": 2431,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 2408,
											"end": 2431,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 2408,
											"end": 2431,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2408,
											"end": 2431,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 2408,
											"end": 2431,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 2408,
											"end": 2431,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2408,
											"end": 2431,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2408,
											"end": 2431,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1766,
											"end": 1804,
											"name": "tag",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 1766,
											"end": 1804,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1766,
											"end": 1804,
											"name": "PUSH",
											"source": 9,
											"value": "B"
										},
										{
											"begin": 1766,
											"end": 1804,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1766,
											"end": 1804,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1766,
											"end": 1804,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3325,
											"end": 3364,
											"name": "tag",
											"source": 9,
											"value": "76"
										},
										{
											"begin": 3325,
											"end": 3364,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3325,
											"end": 3364,
											"name": "PUSH",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 3325,
											"end": 3364,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3325,
											"end": 3364,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3325,
											"end": 3364,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3325,
											"end": 3364,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3325,
											"end": 3364,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3325,
											"end": 3364,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3325,
											"end": 3364,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3325,
											"end": 3364,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 3325,
											"end": 3364,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3325,
											"end": 3364,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3325,
											"end": 3364,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3325,
											"end": 3364,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3325,
											"end": 3364,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3325,
											"end": 3364,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3325,
											"end": 3364,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3325,
											"end": 3364,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3325,
											"end": 3364,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3325,
											"end": 3364,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3325,
											"end": 3364,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3325,
											"end": 3364,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 3325,
											"end": 3364,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3325,
											"end": 3364,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3325,
											"end": 3364,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3325,
											"end": 3364,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3325,
											"end": 3364,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 3325,
											"end": 3364,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3325,
											"end": 3364,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3325,
											"end": 3364,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3325,
											"end": 3364,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3325,
											"end": 3364,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3325,
											"end": 3364,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6563,
											"end": 6678,
											"name": "tag",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 6563,
											"end": 6678,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6634,
											"end": 6641,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6625,
											"end": 6631,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 6625,
											"end": 6631,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6625,
											"end": 6641,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 6625,
											"end": 6641,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 6625,
											"end": 6641,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6625,
											"end": 6641,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6625,
											"end": 6641,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6625,
											"end": 6641,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 6625,
											"end": 6641,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 6625,
											"end": 6641,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 6625,
											"end": 6641,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6625,
											"end": 6641,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6625,
											"end": 6641,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6625,
											"end": 6641,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6625,
											"end": 6641,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6625,
											"end": 6641,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 6625,
											"end": 6641,
											"modifierDepth": 1,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 6625,
											"end": 6641,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6625,
											"end": 6641,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 6625,
											"end": 6641,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6656,
											"end": 6671,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "E2FB031EE032DC02D8011DC50B816EB450CF856ABD8261680DAC74F72165BD2"
										},
										{
											"begin": 6663,
											"end": 6670,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6656,
											"end": 6671,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6656,
											"end": 6671,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6656,
											"end": 6671,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "215"
										},
										{
											"begin": 6656,
											"end": 6671,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6656,
											"end": 6671,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6656,
											"end": 6671,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 6656,
											"end": 6671,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6656,
											"end": 6671,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "215"
										},
										{
											"begin": 6656,
											"end": 6671,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6656,
											"end": 6671,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6656,
											"end": 6671,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6656,
											"end": 6671,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6656,
											"end": 6671,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6656,
											"end": 6671,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6656,
											"end": 6671,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6656,
											"end": 6671,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 9
										},
										{
											"begin": 6563,
											"end": 6678,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6563,
											"end": 6678,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1726,
											"end": 1760,
											"name": "tag",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 1726,
											"end": 1760,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1726,
											"end": 1760,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 1726,
											"end": 1760,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1726,
											"end": 1760,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1726,
											"end": 1760,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13034,
											"end": 13967,
											"name": "tag",
											"source": 9,
											"value": "88"
										},
										{
											"begin": 13034,
											"end": 13967,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4612,
											"end": 4618,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 4612,
											"end": 4618,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4612,
											"end": 4618,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4612,
											"end": 4618,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4612,
											"end": 4618,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4612,
											"end": 4618,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 4612,
											"end": 4618,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 4612,
											"end": 4618,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4612,
											"end": 4618,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 4612,
											"end": 4618,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 4612,
											"end": 4618,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4611,
											"end": 4618,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4603,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "217"
										},
										{
											"begin": 4603,
											"end": 4641,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4603,
											"end": 4641,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4603,
											"end": 4641,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4603,
											"end": 4641,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4603,
											"end": 4641,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4603,
											"end": 4641,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4603,
											"end": 4641,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4603,
											"end": 4641,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4603,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "218"
										},
										{
											"begin": 4603,
											"end": 4641,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4603,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "186"
										},
										{
											"begin": 4603,
											"end": 4641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4603,
											"end": 4641,
											"name": "tag",
											"source": 9,
											"value": "218"
										},
										{
											"begin": 4603,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4603,
											"end": 4641,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4603,
											"end": 4641,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4603,
											"end": 4641,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4603,
											"end": 4641,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4603,
											"end": 4641,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4603,
											"end": 4641,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4603,
											"end": 4641,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4603,
											"end": 4641,
											"name": "tag",
											"source": 9,
											"value": "217"
										},
										{
											"begin": 4603,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "220"
										},
										{
											"begin": 2261,
											"end": 2280,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "220"
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13127,
											"end": 13138,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 13127,
											"end": 13138,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 13127,
											"end": 13138,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13127,
											"end": 13138,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 13127,
											"end": 13138,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13127,
											"end": 13138,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 13127,
											"end": 13138,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 13127,
											"end": 13138,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13127,
											"end": 13138,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 13127,
											"end": 13138,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 13127,
											"end": 13138,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 13119,
											"end": 13158,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "222"
										},
										{
											"begin": 13119,
											"end": 13158,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 13119,
											"end": 13158,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 13119,
											"end": 13158,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 13119,
											"end": 13158,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13119,
											"end": 13158,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13119,
											"end": 13158,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13119,
											"end": 13158,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 13119,
											"end": 13158,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13119,
											"end": 13158,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "223"
										},
										{
											"begin": 13119,
											"end": 13158,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13119,
											"end": 13158,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "193"
										},
										{
											"begin": 13119,
											"end": 13158,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13119,
											"end": 13158,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "223"
										},
										{
											"begin": 13119,
											"end": 13158,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13119,
											"end": 13158,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 13119,
											"end": 13158,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 13119,
											"end": 13158,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 13119,
											"end": 13158,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13119,
											"end": 13158,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 13119,
											"end": 13158,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13119,
											"end": 13158,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 13119,
											"end": 13158,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "222"
										},
										{
											"begin": 13119,
											"end": 13158,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13168,
											"end": 13183,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13186,
											"end": 13192,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 13186,
											"end": 13204,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13193,
											"end": 13203,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 13186,
											"end": 13204,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13186,
											"end": 13204,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 13186,
											"end": 13204,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13186,
											"end": 13204,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 13186,
											"end": 13204,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13186,
											"end": 13204,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13186,
											"end": 13204,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 13186,
											"end": 13204,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13186,
											"end": 13204,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13186,
											"end": 13204,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13186,
											"end": 13204,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13186,
											"end": 13204,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 13186,
											"end": 13204,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13186,
											"end": 13204,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13186,
											"end": 13204,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 13168,
											"end": 13204,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13168,
											"end": 13204,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13232,
											"end": 13233,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 13232,
											"end": 13240,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13232,
											"end": 13240,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13232,
											"end": 13240,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 13222,
											"end": 13228,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13222,
											"end": 13240,
											"modifierDepth": 2,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 13222,
											"end": 13240,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 13214,
											"end": 13271,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 13214,
											"end": 13271,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 13214,
											"end": 13271,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 13214,
											"end": 13271,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 13214,
											"end": 13271,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13214,
											"end": 13271,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13214,
											"end": 13271,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13214,
											"end": 13271,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 13214,
											"end": 13271,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13214,
											"end": 13271,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "225"
										},
										{
											"begin": 13214,
											"end": 13271,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13214,
											"end": 13271,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "226"
										},
										{
											"begin": 13214,
											"end": 13271,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13214,
											"end": 13271,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "225"
										},
										{
											"begin": 13214,
											"end": 13271,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13214,
											"end": 13271,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 13214,
											"end": 13271,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 13214,
											"end": 13271,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 13214,
											"end": 13271,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13214,
											"end": 13271,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 13214,
											"end": 13271,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13214,
											"end": 13271,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 13214,
											"end": 13271,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 13214,
											"end": 13271,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13282,
											"end": 13297,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13300,
											"end": 13301,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13282,
											"end": 13301,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13282,
											"end": 13301,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13430,
											"end": 13436,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "93A80"
										},
										{
											"begin": 13415,
											"end": 13416,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13415,
											"end": 13427,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 13415,
											"end": 13427,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13415,
											"end": 13427,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 13415,
											"end": 13436,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 13415,
											"end": 13436,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13415,
											"end": 13436,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13415,
											"end": 13436,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "206"
										},
										{
											"begin": 13415,
											"end": 13436,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13415,
											"end": 13436,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 13415,
											"end": 13436,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13397,
											"end": 13412,
											"modifierDepth": 2,
											"name": "TIMESTAMP",
											"source": 9
										},
										{
											"begin": 13397,
											"end": 13436,
											"modifierDepth": 2,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 13393,
											"end": 13508,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 13393,
											"end": 13508,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "228"
										},
										{
											"begin": 13393,
											"end": 13508,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 13494,
											"end": 13497,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 13472,
											"end": 13490,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "B"
										},
										{
											"begin": 13472,
											"end": 13490,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 13463,
											"end": 13469,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 13463,
											"end": 13490,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "229"
										},
										{
											"begin": 13463,
											"end": 13490,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13463,
											"end": 13490,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13463,
											"end": 13490,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 13463,
											"end": 13490,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13463,
											"end": 13490,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "229"
										},
										{
											"begin": 13463,
											"end": 13490,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13462,
											"end": 13497,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 13462,
											"end": 13497,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13462,
											"end": 13497,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13462,
											"end": 13497,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "232"
										},
										{
											"begin": 13462,
											"end": 13497,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13462,
											"end": 13497,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 13462,
											"end": 13497,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13452,
											"end": 13497,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13452,
											"end": 13497,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13393,
											"end": 13508,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "228"
										},
										{
											"begin": 13393,
											"end": 13508,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13517,
											"end": 13543,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13555,
											"end": 13562,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13546,
											"end": 13552,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 13546,
											"end": 13562,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 13546,
											"end": 13562,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13546,
											"end": 13562,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13546,
											"end": 13562,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 13546,
											"end": 13562,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13546,
											"end": 13562,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 13546,
											"end": 13562,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13517,
											"end": 13562,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13517,
											"end": 13562,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13584,
											"end": 13590,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13572,
											"end": 13573,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13572,
											"end": 13580,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13572,
											"end": 13580,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13572,
											"end": 13580,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13572,
											"end": 13590,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13572,
											"end": 13590,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13572,
											"end": 13590,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 13572,
											"end": 13590,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "235"
										},
										{
											"begin": 13572,
											"end": 13590,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13572,
											"end": 13590,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13572,
											"end": 13590,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 13572,
											"end": 13590,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13572,
											"end": 13590,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "235"
										},
										{
											"begin": 13572,
											"end": 13590,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13572,
											"end": 13590,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 13572,
											"end": 13590,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13572,
											"end": 13590,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13572,
											"end": 13590,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13572,
											"end": 13590,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13572,
											"end": 13590,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 13572,
											"end": 13590,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13676,
											"end": 13688,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "1B"
										},
										{
											"begin": 13676,
											"end": 13688,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13676,
											"end": 13688,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13676,
											"end": 13688,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 13676,
											"end": 13688,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13676,
											"end": 13688,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 13676,
											"end": 13688,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 13676,
											"end": 13688,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13676,
											"end": 13688,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 13676,
											"end": 13688,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13676,
											"end": 13688,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 13661,
											"end": 13698,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13661,
											"end": 13698,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 13661,
											"end": 13698,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "F3FEF3A3"
										},
										{
											"begin": 13699,
											"end": 13709,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 13711,
											"end": 13729,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13661,
											"end": 13730,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 13661,
											"end": 13730,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 13661,
											"end": 13730,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13661,
											"end": 13730,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 13661,
											"end": 13730,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 13661,
											"end": 13730,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 13661,
											"end": 13730,
											"modifierDepth": 2,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 13661,
											"end": 13730,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13661,
											"end": 13730,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13661,
											"end": 13730,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 13661,
											"end": 13730,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13661,
											"end": 13730,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 13661,
											"end": 13730,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 13661,
											"end": 13730,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13661,
											"end": 13730,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13661,
											"end": 13730,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 13661,
											"end": 13730,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13661,
											"end": 13730,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 13661,
											"end": 13730,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13661,
											"end": 13730,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13661,
											"end": 13730,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 13661,
											"end": 13730,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 13661,
											"end": 13730,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 13661,
											"end": 13730,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13661,
											"end": 13730,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 13661,
											"end": 13730,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13661,
											"end": 13730,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13661,
											"end": 13730,
											"modifierDepth": 2,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 13661,
											"end": 13730,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 13661,
											"end": 13730,
											"modifierDepth": 2,
											"name": "EXTCODESIZE",
											"source": 9
										},
										{
											"begin": 13661,
											"end": 13730,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 13661,
											"end": 13730,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 13661,
											"end": 13730,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 13661,
											"end": 13730,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "238"
										},
										{
											"begin": 13661,
											"end": 13730,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 13661,
											"end": 13730,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13661,
											"end": 13730,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13661,
											"end": 13730,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 13661,
											"end": 13730,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "238"
										},
										{
											"begin": 13661,
											"end": 13730,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13661,
											"end": 13730,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13661,
											"end": 13730,
											"modifierDepth": 2,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 13661,
											"end": 13730,
											"modifierDepth": 2,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 13661,
											"end": 13730,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 13661,
											"end": 13730,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 13661,
											"end": 13730,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 13661,
											"end": 13730,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "240"
										},
										{
											"begin": 13661,
											"end": 13730,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 13661,
											"end": 13730,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 13661,
											"end": 13730,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13661,
											"end": 13730,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13661,
											"end": 13730,
											"modifierDepth": 2,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 13661,
											"end": 13730,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 13661,
											"end": 13730,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13661,
											"end": 13730,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 13661,
											"end": 13730,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "240"
										},
										{
											"begin": 13661,
											"end": 13730,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13661,
											"end": 13730,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13661,
											"end": 13730,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13661,
											"end": 13730,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13661,
											"end": 13730,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13807,
											"end": 13808,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13797,
											"end": 13804,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13797,
											"end": 13808,
											"modifierDepth": 2,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 13793,
											"end": 13890,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 13793,
											"end": 13890,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "241"
										},
										{
											"begin": 13793,
											"end": 13890,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 13839,
											"end": 13851,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "1B"
										},
										{
											"begin": 13839,
											"end": 13851,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13839,
											"end": 13851,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13839,
											"end": 13851,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 13839,
											"end": 13851,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13839,
											"end": 13851,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 13839,
											"end": 13851,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 13839,
											"end": 13851,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13839,
											"end": 13851,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 13839,
											"end": 13851,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13839,
											"end": 13851,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 13824,
											"end": 13861,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13824,
											"end": 13861,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 13824,
											"end": 13861,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "F3FEF3A3"
										},
										{
											"begin": 13862,
											"end": 13869,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 13862,
											"end": 13867,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "139"
										},
										{
											"begin": 13862,
											"end": 13869,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13862,
											"end": 13869,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 13862,
											"end": 13869,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13871,
											"end": 13878,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 13824,
											"end": 13879,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 13824,
											"end": 13879,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 13824,
											"end": 13879,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13824,
											"end": 13879,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 13824,
											"end": 13879,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 13824,
											"end": 13879,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 13824,
											"end": 13879,
											"modifierDepth": 2,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 13824,
											"end": 13879,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13824,
											"end": 13879,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13824,
											"end": 13879,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 13824,
											"end": 13879,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13824,
											"end": 13879,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "243"
										},
										{
											"begin": 13824,
											"end": 13879,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 13824,
											"end": 13879,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13824,
											"end": 13879,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13824,
											"end": 13879,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 13824,
											"end": 13879,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13824,
											"end": 13879,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "243"
										},
										{
											"begin": 13824,
											"end": 13879,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13824,
											"end": 13879,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13824,
											"end": 13879,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 13824,
											"end": 13879,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 13824,
											"end": 13879,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 13824,
											"end": 13879,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13824,
											"end": 13879,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 13824,
											"end": 13879,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13824,
											"end": 13879,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13824,
											"end": 13879,
											"modifierDepth": 2,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 13824,
											"end": 13879,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 13824,
											"end": 13879,
											"modifierDepth": 2,
											"name": "EXTCODESIZE",
											"source": 9
										},
										{
											"begin": 13824,
											"end": 13879,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 13824,
											"end": 13879,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 13824,
											"end": 13879,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 13824,
											"end": 13879,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "244"
										},
										{
											"begin": 13824,
											"end": 13879,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 13824,
											"end": 13879,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13824,
											"end": 13879,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13824,
											"end": 13879,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 13824,
											"end": 13879,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "244"
										},
										{
											"begin": 13824,
											"end": 13879,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13824,
											"end": 13879,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13824,
											"end": 13879,
											"modifierDepth": 2,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 13824,
											"end": 13879,
											"modifierDepth": 2,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 13824,
											"end": 13879,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 13824,
											"end": 13879,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 13824,
											"end": 13879,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 13824,
											"end": 13879,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "246"
										},
										{
											"begin": 13824,
											"end": 13879,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 13824,
											"end": 13879,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 13824,
											"end": 13879,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13824,
											"end": 13879,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13824,
											"end": 13879,
											"modifierDepth": 2,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 13824,
											"end": 13879,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 13824,
											"end": 13879,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13824,
											"end": 13879,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 13824,
											"end": 13879,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "246"
										},
										{
											"begin": 13824,
											"end": 13879,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13824,
											"end": 13879,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13824,
											"end": 13879,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13824,
											"end": 13879,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13824,
											"end": 13879,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13793,
											"end": 13890,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "241"
										},
										{
											"begin": 13793,
											"end": 13890,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13920,
											"end": 13930,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 13905,
											"end": 13960,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13905,
											"end": 13960,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 13905,
											"end": 13960,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "933735AA8DE6D7547D0126171B2F31B9C34DD00F3ECD4BE85A0BA047DB4FAFEF"
										},
										{
											"begin": 13932,
											"end": 13950,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13952,
											"end": 13959,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 13905,
											"end": 13960,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 13905,
											"end": 13960,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 13905,
											"end": 13960,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "247"
										},
										{
											"begin": 13905,
											"end": 13960,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 13905,
											"end": 13960,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13905,
											"end": 13960,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13905,
											"end": 13960,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "248"
										},
										{
											"begin": 13905,
											"end": 13960,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13905,
											"end": 13960,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "247"
										},
										{
											"begin": 13905,
											"end": 13960,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13905,
											"end": 13960,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 13905,
											"end": 13960,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 13905,
											"end": 13960,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 13905,
											"end": 13960,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13905,
											"end": 13960,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 13905,
											"end": 13960,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13905,
											"end": 13960,
											"modifierDepth": 2,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 13109,
											"end": 13967,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13109,
											"end": 13967,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13109,
											"end": 13967,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "249"
										},
										{
											"begin": 2303,
											"end": 2321,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "210"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "249"
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13034,
											"end": 13967,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13034,
											"end": 13967,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14337,
											"end": 14584,
											"name": "tag",
											"source": 9,
											"value": "92"
										},
										{
											"begin": 14337,
											"end": 14584,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14481,
											"end": 14482,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14470,
											"end": 14478,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14470,
											"end": 14482,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 14470,
											"end": 14494,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "253"
										},
										{
											"begin": 14470,
											"end": 14494,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 14491,
											"end": 14494,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 14470,
											"end": 14494,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "254"
										},
										{
											"begin": 14470,
											"end": 14494,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14470,
											"end": 14494,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "253"
										},
										{
											"begin": 14470,
											"end": 14494,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14485,
											"end": 14488,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 14470,
											"end": 14494,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "254"
										},
										{
											"begin": 14470,
											"end": 14494,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14435,
											"end": 14494,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 14435,
											"end": 14494,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 14435,
											"end": 14459,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 14435,
											"end": 14467,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14460,
											"end": 14466,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 14435,
											"end": 14467,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14435,
											"end": 14467,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 14435,
											"end": 14467,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14435,
											"end": 14467,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 14435,
											"end": 14467,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14435,
											"end": 14467,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14435,
											"end": 14467,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 14435,
											"end": 14467,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14435,
											"end": 14467,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14435,
											"end": 14467,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14435,
											"end": 14467,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14435,
											"end": 14467,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 14435,
											"end": 14467,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14435,
											"end": 14467,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14435,
											"end": 14467,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 14435,
											"end": 14494,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14435,
											"end": 14494,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14435,
											"end": 14494,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 14435,
											"end": 14494,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14536,
											"end": 14542,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14509,
											"end": 14577,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14509,
											"end": 14577,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 14509,
											"end": 14577,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "ABCC9B515858A553F53609BB223669708665910A51030D923C842DE23F099913"
										},
										{
											"begin": 14544,
											"end": 14568,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 14544,
											"end": 14576,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14569,
											"end": 14575,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 14544,
											"end": 14576,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14544,
											"end": 14576,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 14544,
											"end": 14576,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14544,
											"end": 14576,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 14544,
											"end": 14576,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14544,
											"end": 14576,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14544,
											"end": 14576,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 14544,
											"end": 14576,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14544,
											"end": 14576,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14544,
											"end": 14576,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14544,
											"end": 14576,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14544,
											"end": 14576,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 14544,
											"end": 14576,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14544,
											"end": 14576,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14544,
											"end": 14576,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 14544,
											"end": 14576,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 14509,
											"end": 14577,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 14509,
											"end": 14577,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 14509,
											"end": 14577,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "255"
										},
										{
											"begin": 14509,
											"end": 14577,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14509,
											"end": 14577,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14509,
											"end": 14577,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 14509,
											"end": 14577,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14509,
											"end": 14577,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "255"
										},
										{
											"begin": 14509,
											"end": 14577,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14509,
											"end": 14577,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 14509,
											"end": 14577,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 14509,
											"end": 14577,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 14509,
											"end": 14577,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14509,
											"end": 14577,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 14509,
											"end": 14577,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14509,
											"end": 14577,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 14337,
											"end": 14584,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14337,
											"end": 14584,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14337,
											"end": 14584,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3817,
											"end": 3844,
											"name": "tag",
											"source": 9,
											"value": "94"
										},
										{
											"begin": 3817,
											"end": 3844,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3817,
											"end": 3844,
											"name": "PUSH",
											"source": 9,
											"value": "1B"
										},
										{
											"begin": 3817,
											"end": 3844,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3817,
											"end": 3844,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3817,
											"end": 3844,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3817,
											"end": 3844,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3817,
											"end": 3844,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 3817,
											"end": 3844,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 3817,
											"end": 3844,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3817,
											"end": 3844,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 3817,
											"end": 3844,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3817,
											"end": 3844,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3817,
											"end": 3844,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3817,
											"end": 3844,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3692,
											"end": 3750,
											"name": "tag",
											"source": 9,
											"value": "99"
										},
										{
											"begin": 3692,
											"end": 3750,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3692,
											"end": 3750,
											"name": "PUSH",
											"source": 9,
											"value": "1A"
										},
										{
											"begin": 3692,
											"end": 3750,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3692,
											"end": 3750,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3692,
											"end": 3750,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3692,
											"end": 3750,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3692,
											"end": 3750,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3692,
											"end": 3750,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3692,
											"end": 3750,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3692,
											"end": 3750,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 3692,
											"end": 3750,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3692,
											"end": 3750,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3692,
											"end": 3750,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3692,
											"end": 3750,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3692,
											"end": 3750,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 3692,
											"end": 3750,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "256"
										},
										{
											"begin": 3692,
											"end": 3750,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3692,
											"end": 3750,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3692,
											"end": 3750,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3692,
											"end": 3750,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3692,
											"end": 3750,
											"name": "tag",
											"source": 9,
											"value": "256"
										},
										{
											"begin": 3692,
											"end": 3750,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3692,
											"end": 3750,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3692,
											"end": 3750,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3692,
											"end": 3750,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3692,
											"end": 3750,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3692,
											"end": 3750,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3692,
											"end": 3750,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 3692,
											"end": 3750,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3692,
											"end": 3750,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3692,
											"end": 3750,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 3692,
											"end": 3750,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3692,
											"end": 3750,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3692,
											"end": 3750,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3692,
											"end": 3750,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3692,
											"end": 3750,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3692,
											"end": 3750,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3692,
											"end": 3750,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3692,
											"end": 3750,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3692,
											"end": 3750,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3692,
											"end": 3750,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3692,
											"end": 3750,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3692,
											"end": 3750,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3692,
											"end": 3750,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3692,
											"end": 3750,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 3692,
											"end": 3750,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3692,
											"end": 3750,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3692,
											"end": 3750,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3692,
											"end": 3750,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3692,
											"end": 3750,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 3692,
											"end": 3750,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3692,
											"end": 3750,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3692,
											"end": 3750,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3692,
											"end": 3750,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3692,
											"end": 3750,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 3692,
											"end": 3750,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3692,
											"end": 3750,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3692,
											"end": 3750,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3692,
											"end": 3750,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3692,
											"end": 3750,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3692,
											"end": 3750,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1933,
											"end": 1961,
											"name": "tag",
											"source": 9,
											"value": "102"
										},
										{
											"begin": 1933,
											"end": 1961,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1933,
											"end": 1961,
											"name": "PUSH",
											"source": 9,
											"value": "D"
										},
										{
											"begin": 1933,
											"end": 1961,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1933,
											"end": 1961,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1933,
											"end": 1961,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1534,
											"end": 1565,
											"name": "tag",
											"source": 9,
											"value": "105"
										},
										{
											"begin": 1534,
											"end": 1565,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1534,
											"end": 1565,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 1534,
											"end": 1565,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1534,
											"end": 1565,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1534,
											"end": 1565,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2890,
											"end": 2949,
											"name": "tag",
											"source": 9,
											"value": "109"
										},
										{
											"begin": 2890,
											"end": 2949,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2890,
											"end": 2949,
											"name": "PUSH",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 2890,
											"end": 2949,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2890,
											"end": 2949,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2890,
											"end": 2949,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2890,
											"end": 2949,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2890,
											"end": 2949,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2890,
											"end": 2949,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2890,
											"end": 2949,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2890,
											"end": 2949,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 2890,
											"end": 2949,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2890,
											"end": 2949,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2890,
											"end": 2949,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2890,
											"end": 2949,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2890,
											"end": 2949,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2890,
											"end": 2949,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2890,
											"end": 2949,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2890,
											"end": 2949,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3429,
											"end": 3476,
											"name": "tag",
											"source": 9,
											"value": "113"
										},
										{
											"begin": 3429,
											"end": 3476,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3429,
											"end": 3476,
											"name": "PUSH",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 3429,
											"end": 3476,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3429,
											"end": 3476,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3429,
											"end": 3476,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3429,
											"end": 3476,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3429,
											"end": 3476,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3429,
											"end": 3476,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3429,
											"end": 3476,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3429,
											"end": 3476,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 3429,
											"end": 3476,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3429,
											"end": 3476,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3429,
											"end": 3476,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3429,
											"end": 3476,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3429,
											"end": 3476,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3429,
											"end": 3476,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3429,
											"end": 3476,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3429,
											"end": 3476,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2332,
											"end": 2350,
											"name": "tag",
											"source": 9,
											"value": "116"
										},
										{
											"begin": 2332,
											"end": 2350,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2332,
											"end": 2350,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 2332,
											"end": 2350,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2332,
											"end": 2350,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2332,
											"end": 2350,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2332,
											"end": 2350,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2332,
											"end": 2350,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 2332,
											"end": 2350,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 2332,
											"end": 2350,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2332,
											"end": 2350,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 2332,
											"end": 2350,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 2332,
											"end": 2350,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2332,
											"end": 2350,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2332,
											"end": 2350,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2710,
											"end": 2757,
											"name": "tag",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 2710,
											"end": 2757,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2710,
											"end": 2757,
											"name": "PUSH",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 2710,
											"end": 2757,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2710,
											"end": 2757,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2710,
											"end": 2757,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2710,
											"end": 2757,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2710,
											"end": 2757,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2710,
											"end": 2757,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2710,
											"end": 2757,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2710,
											"end": 2757,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 2710,
											"end": 2757,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2710,
											"end": 2757,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2710,
											"end": 2757,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2710,
											"end": 2757,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2710,
											"end": 2757,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2710,
											"end": 2757,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2710,
											"end": 2757,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2710,
											"end": 2757,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1686,
											"end": 1720,
											"name": "tag",
											"source": 9,
											"value": "123"
										},
										{
											"begin": 1686,
											"end": 1720,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1686,
											"end": 1720,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 1686,
											"end": 1720,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1686,
											"end": 1720,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1686,
											"end": 1720,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2494,
											"end": 2535,
											"name": "tag",
											"source": 9,
											"value": "129"
										},
										{
											"begin": 2494,
											"end": 2535,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2494,
											"end": 2535,
											"name": "PUSH",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 2494,
											"end": 2535,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2494,
											"end": 2535,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2494,
											"end": 2535,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2494,
											"end": 2535,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2494,
											"end": 2535,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2494,
											"end": 2535,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2494,
											"end": 2535,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2494,
											"end": 2535,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 2494,
											"end": 2535,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2494,
											"end": 2535,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2494,
											"end": 2535,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2494,
											"end": 2535,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2494,
											"end": 2535,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2494,
											"end": 2535,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2494,
											"end": 2535,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2494,
											"end": 2535,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2047,
											"end": 2094,
											"name": "tag",
											"source": 9,
											"value": "132"
										},
										{
											"begin": 2047,
											"end": 2094,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2047,
											"end": 2094,
											"name": "PUSH",
											"source": 9,
											"value": "E"
										},
										{
											"begin": 2047,
											"end": 2094,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2047,
											"end": 2094,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2047,
											"end": 2094,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5603,
											"end": 6485,
											"name": "tag",
											"source": 9,
											"value": "137"
										},
										{
											"begin": 5603,
											"end": 6485,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5940,
											"end": 5951,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 5940,
											"end": 5951,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 5940,
											"end": 5951,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5940,
											"end": 5951,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5940,
											"end": 5951,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5940,
											"end": 5951,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 5940,
											"end": 5951,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 5940,
											"end": 5951,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5940,
											"end": 5951,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 5940,
											"end": 5951,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 5940,
											"end": 5951,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5939,
											"end": 5951,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5931,
											"end": 5975,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "266"
										},
										{
											"begin": 5931,
											"end": 5975,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5931,
											"end": 5975,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5931,
											"end": 5975,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5931,
											"end": 5975,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5931,
											"end": 5975,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5931,
											"end": 5975,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5931,
											"end": 5975,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5931,
											"end": 5975,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5931,
											"end": 5975,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "267"
										},
										{
											"begin": 5931,
											"end": 5975,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5931,
											"end": 5975,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "268"
										},
										{
											"begin": 5931,
											"end": 5975,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5931,
											"end": 5975,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "267"
										},
										{
											"begin": 5931,
											"end": 5975,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5931,
											"end": 5975,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5931,
											"end": 5975,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5931,
											"end": 5975,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5931,
											"end": 5975,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5931,
											"end": 5975,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5931,
											"end": 5975,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5931,
											"end": 5975,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5931,
											"end": 5975,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "266"
										},
										{
											"begin": 5931,
											"end": 5975,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5996,
											"end": 6005,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 5985,
											"end": 5993,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 5985,
											"end": 5993,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5985,
											"end": 6005,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 5985,
											"end": 6005,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 5985,
											"end": 6005,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5985,
											"end": 6005,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5985,
											"end": 6005,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5985,
											"end": 6005,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5985,
											"end": 6005,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 5985,
											"end": 6005,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 5985,
											"end": 6005,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5985,
											"end": 6005,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5985,
											"end": 6005,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5985,
											"end": 6005,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5985,
											"end": 6005,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5985,
											"end": 6005,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 5985,
											"end": 6005,
											"modifierDepth": 1,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 5985,
											"end": 6005,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5985,
											"end": 6005,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 5985,
											"end": 6005,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6033,
											"end": 6049,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 6015,
											"end": 6030,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 6015,
											"end": 6049,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6015,
											"end": 6049,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6015,
											"end": 6049,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 6015,
											"end": 6049,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6077,
											"end": 6093,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6059,
											"end": 6074,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6059,
											"end": 6093,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6059,
											"end": 6093,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6059,
											"end": 6093,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 6059,
											"end": 6093,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6117,
											"end": 6118,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6103,
											"end": 6114,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 6103,
											"end": 6118,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6103,
											"end": 6118,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6103,
											"end": 6118,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 6103,
											"end": 6118,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6147,
											"end": 6148,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6128,
											"end": 6144,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 6128,
											"end": 6148,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6128,
											"end": 6148,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6128,
											"end": 6148,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 6128,
											"end": 6148,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6179,
											"end": 6198,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6158,
											"end": 6176,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 6158,
											"end": 6198,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6158,
											"end": 6198,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6158,
											"end": 6198,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 6158,
											"end": 6198,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6228,
											"end": 6229,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6208,
											"end": 6225,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 6208,
											"end": 6229,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6208,
											"end": 6229,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6208,
											"end": 6229,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 6208,
											"end": 6229,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6261,
											"end": 6281,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6239,
											"end": 6258,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 6239,
											"end": 6281,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6239,
											"end": 6281,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6239,
											"end": 6281,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 6239,
											"end": 6281,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6313,
											"end": 6333,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6291,
											"end": 6310,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 6291,
											"end": 6333,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6291,
											"end": 6333,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6291,
											"end": 6333,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 6291,
											"end": 6333,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6359,
											"end": 6373,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6343,
											"end": 6356,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "D"
										},
										{
											"begin": 6343,
											"end": 6373,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6343,
											"end": 6373,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6343,
											"end": 6373,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 6343,
											"end": 6373,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6400,
											"end": 6412,
											"modifierDepth": 1,
											"name": "NUMBER",
											"source": 9
										},
										{
											"begin": 6383,
											"end": 6397,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "C"
										},
										{
											"begin": 6383,
											"end": 6412,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6383,
											"end": 6412,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6383,
											"end": 6412,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 6383,
											"end": 6412,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6437,
											"end": 6450,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6422,
											"end": 6434,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1B"
										},
										{
											"begin": 6422,
											"end": 6434,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6422,
											"end": 6450,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 6422,
											"end": 6450,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 6422,
											"end": 6450,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6422,
											"end": 6450,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6422,
											"end": 6450,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6422,
											"end": 6450,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6422,
											"end": 6450,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 6422,
											"end": 6450,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 6422,
											"end": 6450,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6422,
											"end": 6450,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6422,
											"end": 6450,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6422,
											"end": 6450,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6422,
											"end": 6450,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6422,
											"end": 6450,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 6422,
											"end": 6450,
											"modifierDepth": 1,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 6422,
											"end": 6450,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6422,
											"end": 6450,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 6422,
											"end": 6450,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6474,
											"end": 6478,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 6460,
											"end": 6471,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 6460,
											"end": 6471,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 6460,
											"end": 6478,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 6460,
											"end": 6478,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 6460,
											"end": 6478,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6460,
											"end": 6478,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6460,
											"end": 6478,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6460,
											"end": 6478,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 6460,
											"end": 6478,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 6460,
											"end": 6478,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 6460,
											"end": 6478,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6460,
											"end": 6478,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6460,
											"end": 6478,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6460,
											"end": 6478,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6460,
											"end": 6478,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6460,
											"end": 6478,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 6460,
											"end": 6478,
											"modifierDepth": 1,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 6460,
											"end": 6478,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6460,
											"end": 6478,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 6460,
											"end": 6478,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5603,
											"end": 6485,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5603,
											"end": 6485,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5603,
											"end": 6485,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5603,
											"end": 6485,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5603,
											"end": 6485,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5603,
											"end": 6485,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5603,
											"end": 6485,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5603,
											"end": 6485,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5603,
											"end": 6485,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2100,
											"end": 2141,
											"name": "tag",
											"source": 9,
											"value": "142"
										},
										{
											"begin": 2100,
											"end": 2141,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2100,
											"end": 2141,
											"name": "PUSH",
											"source": 9,
											"value": "F"
										},
										{
											"begin": 2100,
											"end": 2141,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2100,
											"end": 2141,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2100,
											"end": 2141,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1898,
											"end": 1927,
											"name": "tag",
											"source": 9,
											"value": "145"
										},
										{
											"begin": 1898,
											"end": 1927,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1898,
											"end": 1927,
											"name": "PUSH",
											"source": 9,
											"value": "C"
										},
										{
											"begin": 1898,
											"end": 1927,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1898,
											"end": 1927,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1898,
											"end": 1927,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "tag",
											"source": 9,
											"value": "148"
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1466,
											"end": 1496,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1466,
											"end": 1496,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11155,
											"end": 12811,
											"name": "tag",
											"source": 9,
											"value": "152"
										},
										{
											"begin": 11155,
											"end": 12811,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4612,
											"end": 4618,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 4612,
											"end": 4618,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4612,
											"end": 4618,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4612,
											"end": 4618,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4612,
											"end": 4618,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4612,
											"end": 4618,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 4612,
											"end": 4618,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 4612,
											"end": 4618,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4612,
											"end": 4618,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 4612,
											"end": 4618,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 4612,
											"end": 4618,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4611,
											"end": 4618,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4603,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "271"
										},
										{
											"begin": 4603,
											"end": 4641,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4603,
											"end": 4641,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4603,
											"end": 4641,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4603,
											"end": 4641,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4603,
											"end": 4641,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4603,
											"end": 4641,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4603,
											"end": 4641,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4603,
											"end": 4641,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4603,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "272"
										},
										{
											"begin": 4603,
											"end": 4641,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4603,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "186"
										},
										{
											"begin": 4603,
											"end": 4641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4603,
											"end": 4641,
											"name": "tag",
											"source": 9,
											"value": "272"
										},
										{
											"begin": 4603,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4603,
											"end": 4641,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4603,
											"end": 4641,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4603,
											"end": 4641,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4603,
											"end": 4641,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4603,
											"end": 4641,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4603,
											"end": 4641,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4603,
											"end": 4641,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4603,
											"end": 4641,
											"name": "tag",
											"source": 9,
											"value": "271"
										},
										{
											"begin": 4603,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "274"
										},
										{
											"begin": 2261,
											"end": 2280,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "274"
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11259,
											"end": 11270,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 11259,
											"end": 11270,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 11259,
											"end": 11270,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11259,
											"end": 11270,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 11259,
											"end": 11270,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11259,
											"end": 11270,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 11259,
											"end": 11270,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 11259,
											"end": 11270,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11259,
											"end": 11270,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 11259,
											"end": 11270,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 11259,
											"end": 11270,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11251,
											"end": 11290,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "276"
										},
										{
											"begin": 11251,
											"end": 11290,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11251,
											"end": 11290,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11251,
											"end": 11290,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 11251,
											"end": 11290,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11251,
											"end": 11290,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11251,
											"end": 11290,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11251,
											"end": 11290,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 11251,
											"end": 11290,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11251,
											"end": 11290,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "277"
										},
										{
											"begin": 11251,
											"end": 11290,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11251,
											"end": 11290,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "193"
										},
										{
											"begin": 11251,
											"end": 11290,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11251,
											"end": 11290,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "277"
										},
										{
											"begin": 11251,
											"end": 11290,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11251,
											"end": 11290,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11251,
											"end": 11290,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 11251,
											"end": 11290,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11251,
											"end": 11290,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11251,
											"end": 11290,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 11251,
											"end": 11290,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11251,
											"end": 11290,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 11251,
											"end": 11290,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "276"
										},
										{
											"begin": 11251,
											"end": 11290,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11330,
											"end": 11343,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11308,
											"end": 11314,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 11308,
											"end": 11326,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11315,
											"end": 11325,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 11308,
											"end": 11326,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11308,
											"end": 11326,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11308,
											"end": 11326,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11308,
											"end": 11326,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11308,
											"end": 11326,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11308,
											"end": 11326,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11308,
											"end": 11326,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11308,
											"end": 11326,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11308,
											"end": 11326,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11308,
											"end": 11326,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11308,
											"end": 11326,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11308,
											"end": 11326,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11308,
											"end": 11326,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11308,
											"end": 11326,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11308,
											"end": 11326,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 11308,
											"end": 11326,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 11308,
											"end": 11343,
											"modifierDepth": 2,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 11300,
											"end": 11361,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "278"
										},
										{
											"begin": 11300,
											"end": 11361,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11300,
											"end": 11361,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11300,
											"end": 11361,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 11300,
											"end": 11361,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11300,
											"end": 11361,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11300,
											"end": 11361,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11300,
											"end": 11361,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 11300,
											"end": 11361,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11300,
											"end": 11361,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "279"
										},
										{
											"begin": 11300,
											"end": 11361,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11300,
											"end": 11361,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "280"
										},
										{
											"begin": 11300,
											"end": 11361,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11300,
											"end": 11361,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "279"
										},
										{
											"begin": 11300,
											"end": 11361,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11300,
											"end": 11361,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11300,
											"end": 11361,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 11300,
											"end": 11361,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11300,
											"end": 11361,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11300,
											"end": 11361,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 11300,
											"end": 11361,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11300,
											"end": 11361,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 11300,
											"end": 11361,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "278"
										},
										{
											"begin": 11300,
											"end": 11361,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11371,
											"end": 11377,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 11371,
											"end": 11389,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11378,
											"end": 11388,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 11371,
											"end": 11389,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11371,
											"end": 11389,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11371,
											"end": 11389,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11371,
											"end": 11389,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11371,
											"end": 11389,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11371,
											"end": 11389,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11371,
											"end": 11389,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11371,
											"end": 11389,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11371,
											"end": 11389,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11371,
											"end": 11389,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11371,
											"end": 11389,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11371,
											"end": 11389,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11371,
											"end": 11389,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11371,
											"end": 11389,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11371,
											"end": 11389,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 11371,
											"end": 11389,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11371,
											"end": 11391,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11371,
											"end": 11391,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 11371,
											"end": 11391,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11371,
											"end": 11391,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 11371,
											"end": 11391,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11371,
											"end": 11391,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11371,
											"end": 11391,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "281"
										},
										{
											"begin": 11371,
											"end": 11391,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11371,
											"end": 11391,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "282"
										},
										{
											"begin": 11371,
											"end": 11391,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11371,
											"end": 11391,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "281"
										},
										{
											"begin": 11371,
											"end": 11391,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11371,
											"end": 11391,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11371,
											"end": 11391,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11371,
											"end": 11391,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11371,
											"end": 11391,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 11371,
											"end": 11391,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11402,
											"end": 11417,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11420,
											"end": 11426,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 11420,
											"end": 11438,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11427,
											"end": 11437,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 11420,
											"end": 11438,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11420,
											"end": 11438,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11420,
											"end": 11438,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11420,
											"end": 11438,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11420,
											"end": 11438,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11420,
											"end": 11438,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11420,
											"end": 11438,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11420,
											"end": 11438,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11420,
											"end": 11438,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11420,
											"end": 11438,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11420,
											"end": 11438,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11420,
											"end": 11438,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11420,
											"end": 11438,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11420,
											"end": 11438,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11420,
											"end": 11438,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 11402,
											"end": 11438,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11402,
											"end": 11438,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11472,
											"end": 11473,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11456,
											"end": 11457,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11456,
											"end": 11468,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 11456,
											"end": 11468,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11456,
											"end": 11468,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 11456,
											"end": 11473,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 11448,
											"end": 11492,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "283"
										},
										{
											"begin": 11448,
											"end": 11492,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11448,
											"end": 11492,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11448,
											"end": 11492,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 11448,
											"end": 11492,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11448,
											"end": 11492,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11448,
											"end": 11492,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11448,
											"end": 11492,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 11448,
											"end": 11492,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11448,
											"end": 11492,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "284"
										},
										{
											"begin": 11448,
											"end": 11492,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11448,
											"end": 11492,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "285"
										},
										{
											"begin": 11448,
											"end": 11492,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11448,
											"end": 11492,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "284"
										},
										{
											"begin": 11448,
											"end": 11492,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11448,
											"end": 11492,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11448,
											"end": 11492,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 11448,
											"end": 11492,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11448,
											"end": 11492,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11448,
											"end": 11492,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 11448,
											"end": 11492,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11448,
											"end": 11492,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 11448,
											"end": 11492,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "283"
										},
										{
											"begin": 11448,
											"end": 11492,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11503,
											"end": 11518,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11539,
											"end": 11540,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11539,
											"end": 11552,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 11539,
											"end": 11552,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11539,
											"end": 11552,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 11521,
											"end": 11536,
											"modifierDepth": 2,
											"name": "TIMESTAMP",
											"source": 9
										},
										{
											"begin": 11521,
											"end": 11552,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "286"
										},
										{
											"begin": 11521,
											"end": 11552,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11521,
											"end": 11552,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11521,
											"end": 11552,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 11521,
											"end": 11552,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11521,
											"end": 11552,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "286"
										},
										{
											"begin": 11521,
											"end": 11552,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11503,
											"end": 11552,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11503,
											"end": 11552,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11580,
											"end": 11581,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11570,
											"end": 11577,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11570,
											"end": 11581,
											"modifierDepth": 2,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 11562,
											"end": 11601,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "287"
										},
										{
											"begin": 11562,
											"end": 11601,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11562,
											"end": 11601,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11562,
											"end": 11601,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 11562,
											"end": 11601,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11562,
											"end": 11601,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11562,
											"end": 11601,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11562,
											"end": 11601,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 11562,
											"end": 11601,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11562,
											"end": 11601,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "288"
										},
										{
											"begin": 11562,
											"end": 11601,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11562,
											"end": 11601,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "289"
										},
										{
											"begin": 11562,
											"end": 11601,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11562,
											"end": 11601,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "288"
										},
										{
											"begin": 11562,
											"end": 11601,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11562,
											"end": 11601,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11562,
											"end": 11601,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 11562,
											"end": 11601,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11562,
											"end": 11601,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11562,
											"end": 11601,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 11562,
											"end": 11601,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11562,
											"end": 11601,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 11562,
											"end": 11601,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "287"
										},
										{
											"begin": 11562,
											"end": 11601,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11662,
											"end": 11694,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11697,
											"end": 11712,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 11697,
											"end": 11712,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 11662,
											"end": 11712,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11662,
											"end": 11712,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11746,
											"end": 11765,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 11746,
											"end": 11765,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 11726,
											"end": 11743,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 11726,
											"end": 11743,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 11726,
											"end": 11765,
											"modifierDepth": 2,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 11722,
											"end": 11864,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 11722,
											"end": 11864,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "290"
										},
										{
											"begin": 11722,
											"end": 11864,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11850,
											"end": 11853,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 11827,
											"end": 11846,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 11827,
											"end": 11846,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 11809,
											"end": 11824,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 11809,
											"end": 11824,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 11809,
											"end": 11846,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "291"
										},
										{
											"begin": 11809,
											"end": 11846,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11809,
											"end": 11846,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11809,
											"end": 11846,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 11809,
											"end": 11846,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11809,
											"end": 11846,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "291"
										},
										{
											"begin": 11809,
											"end": 11846,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11808,
											"end": 11853,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "292"
										},
										{
											"begin": 11808,
											"end": 11853,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11808,
											"end": 11853,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11808,
											"end": 11853,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "232"
										},
										{
											"begin": 11808,
											"end": 11853,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11808,
											"end": 11853,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "292"
										},
										{
											"begin": 11808,
											"end": 11853,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11781,
											"end": 11853,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11781,
											"end": 11853,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11722,
											"end": 11864,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "290"
										},
										{
											"begin": 11722,
											"end": 11864,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11946,
											"end": 11973,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12016,
											"end": 12017,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11976,
											"end": 12000,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 11976,
											"end": 12012,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12001,
											"end": 12011,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 11976,
											"end": 12012,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11976,
											"end": 12012,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11976,
											"end": 12012,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11976,
											"end": 12012,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11976,
											"end": 12012,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11976,
											"end": 12012,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11976,
											"end": 12012,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11976,
											"end": 12012,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11976,
											"end": 12012,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11976,
											"end": 12012,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11976,
											"end": 12012,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11976,
											"end": 12012,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11976,
											"end": 12012,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11976,
											"end": 12012,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11976,
											"end": 12012,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 11976,
											"end": 12012,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 11976,
											"end": 12017,
											"modifierDepth": 2,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 11976,
											"end": 12086,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "293"
										},
										{
											"begin": 11976,
											"end": 12086,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12050,
											"end": 12074,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 12050,
											"end": 12086,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12075,
											"end": 12085,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 12050,
											"end": 12086,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12050,
											"end": 12086,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 12050,
											"end": 12086,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12050,
											"end": 12086,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 12050,
											"end": 12086,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12050,
											"end": 12086,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12050,
											"end": 12086,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12050,
											"end": 12086,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12050,
											"end": 12086,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12050,
											"end": 12086,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12050,
											"end": 12086,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12050,
											"end": 12086,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12050,
											"end": 12086,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12050,
											"end": 12086,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12050,
											"end": 12086,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 12050,
											"end": 12086,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 11976,
											"end": 12086,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "294"
										},
										{
											"begin": 11976,
											"end": 12086,
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11976,
											"end": 12086,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "293"
										},
										{
											"begin": 11976,
											"end": 12086,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12032,
											"end": 12035,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 11976,
											"end": 12086,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "294"
										},
										{
											"begin": 11976,
											"end": 12086,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11946,
											"end": 12086,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11946,
											"end": 12086,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12174,
											"end": 12177,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 12151,
											"end": 12170,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12124,
											"end": 12148,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12124,
											"end": 12170,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "295"
										},
										{
											"begin": 12124,
											"end": 12170,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12124,
											"end": 12170,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12124,
											"end": 12170,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 12124,
											"end": 12170,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12124,
											"end": 12170,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "295"
										},
										{
											"begin": 12124,
											"end": 12170,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12123,
											"end": 12177,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "296"
										},
										{
											"begin": 12123,
											"end": 12177,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12123,
											"end": 12177,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12123,
											"end": 12177,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "232"
										},
										{
											"begin": 12123,
											"end": 12177,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12123,
											"end": 12177,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "296"
										},
										{
											"begin": 12123,
											"end": 12177,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12096,
											"end": 12177,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12096,
											"end": 12177,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12224,
											"end": 12238,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12279,
											"end": 12286,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12252,
											"end": 12276,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12241,
											"end": 12242,
											"modifierDepth": 2,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 12241,
											"end": 12249,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12241,
											"end": 12249,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12241,
											"end": 12249,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 12241,
											"end": 12276,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "297"
										},
										{
											"begin": 12241,
											"end": 12276,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12241,
											"end": 12276,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12241,
											"end": 12276,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 12241,
											"end": 12276,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12241,
											"end": 12276,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "297"
										},
										{
											"begin": 12241,
											"end": 12276,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12241,
											"end": 12286,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "298"
										},
										{
											"begin": 12241,
											"end": 12286,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12241,
											"end": 12286,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12241,
											"end": 12286,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 12241,
											"end": 12286,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12241,
											"end": 12286,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "298"
										},
										{
											"begin": 12241,
											"end": 12286,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12224,
											"end": 12286,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12224,
											"end": 12286,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12387,
											"end": 12390,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 12359,
											"end": 12371,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 12359,
											"end": 12383,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12372,
											"end": 12382,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 12359,
											"end": 12383,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12359,
											"end": 12383,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 12359,
											"end": 12383,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12359,
											"end": 12383,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 12359,
											"end": 12383,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12359,
											"end": 12383,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12359,
											"end": 12383,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12359,
											"end": 12383,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12359,
											"end": 12383,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12359,
											"end": 12383,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12359,
											"end": 12383,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12359,
											"end": 12383,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12359,
											"end": 12383,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12359,
											"end": 12383,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12359,
											"end": 12383,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 12359,
											"end": 12383,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 12350,
											"end": 12356,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12350,
											"end": 12383,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "299"
										},
										{
											"begin": 12350,
											"end": 12383,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12350,
											"end": 12383,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12350,
											"end": 12383,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 12350,
											"end": 12383,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12350,
											"end": 12383,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "299"
										},
										{
											"begin": 12350,
											"end": 12383,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12349,
											"end": 12390,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "300"
										},
										{
											"begin": 12349,
											"end": 12390,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12349,
											"end": 12390,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12349,
											"end": 12390,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "232"
										},
										{
											"begin": 12349,
											"end": 12390,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12349,
											"end": 12390,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "300"
										},
										{
											"begin": 12349,
											"end": 12390,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12340,
											"end": 12390,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12340,
											"end": 12390,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12522,
											"end": 12544,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "E"
										},
										{
											"begin": 12522,
											"end": 12544,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 12506,
											"end": 12507,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 12506,
											"end": 12519,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 12506,
											"end": 12519,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12506,
											"end": 12519,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 12506,
											"end": 12544,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "301"
										},
										{
											"begin": 12506,
											"end": 12544,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12506,
											"end": 12544,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12506,
											"end": 12544,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "206"
										},
										{
											"begin": 12506,
											"end": 12544,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12506,
											"end": 12544,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "301"
										},
										{
											"begin": 12506,
											"end": 12544,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12488,
											"end": 12503,
											"modifierDepth": 2,
											"name": "TIMESTAMP",
											"source": 9
										},
										{
											"begin": 12488,
											"end": 12544,
											"modifierDepth": 2,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 12484,
											"end": 12666,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 12484,
											"end": 12666,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "302"
										},
										{
											"begin": 12484,
											"end": 12666,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12560,
											"end": 12575,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12613,
											"end": 12616,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 12588,
											"end": 12609,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "F"
										},
										{
											"begin": 12588,
											"end": 12609,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 12579,
											"end": 12585,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12579,
											"end": 12609,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "303"
										},
										{
											"begin": 12579,
											"end": 12609,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12579,
											"end": 12609,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12579,
											"end": 12609,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 12579,
											"end": 12609,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12579,
											"end": 12609,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "303"
										},
										{
											"begin": 12579,
											"end": 12609,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12578,
											"end": 12616,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "304"
										},
										{
											"begin": 12578,
											"end": 12616,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12578,
											"end": 12616,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12578,
											"end": 12616,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "232"
										},
										{
											"begin": 12578,
											"end": 12616,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12578,
											"end": 12616,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "304"
										},
										{
											"begin": 12578,
											"end": 12616,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12560,
											"end": 12616,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12560,
											"end": 12616,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12648,
											"end": 12655,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12639,
											"end": 12645,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12639,
											"end": 12655,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "305"
										},
										{
											"begin": 12639,
											"end": 12655,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12639,
											"end": 12655,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12639,
											"end": 12655,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 12639,
											"end": 12655,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12639,
											"end": 12655,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "305"
										},
										{
											"begin": 12639,
											"end": 12655,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12630,
											"end": 12655,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12630,
											"end": 12655,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12546,
											"end": 12666,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12484,
											"end": 12666,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "302"
										},
										{
											"begin": 12484,
											"end": 12666,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12692,
											"end": 12707,
											"modifierDepth": 2,
											"name": "TIMESTAMP",
											"source": 9
										},
										{
											"begin": 12676,
											"end": 12677,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 12676,
											"end": 12689,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 12676,
											"end": 12689,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12676,
											"end": 12707,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12676,
											"end": 12707,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12676,
											"end": 12707,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 12676,
											"end": 12707,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12717,
											"end": 12725,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 12717,
											"end": 12725,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12717,
											"end": 12725,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12717,
											"end": 12725,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 12717,
											"end": 12725,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12717,
											"end": 12725,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 12717,
											"end": 12725,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 12717,
											"end": 12725,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12717,
											"end": 12725,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 12717,
											"end": 12725,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12717,
											"end": 12725,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 12717,
											"end": 12730,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12717,
											"end": 12730,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 12717,
											"end": 12730,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40C10F19"
										},
										{
											"begin": 12731,
											"end": 12741,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 12743,
											"end": 12749,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12717,
											"end": 12750,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 12717,
											"end": 12750,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 12717,
											"end": 12750,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12717,
											"end": 12750,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 12717,
											"end": 12750,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 12717,
											"end": 12750,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 12717,
											"end": 12750,
											"modifierDepth": 2,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 12717,
											"end": 12750,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12717,
											"end": 12750,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12717,
											"end": 12750,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 12717,
											"end": 12750,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12717,
											"end": 12750,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "306"
										},
										{
											"begin": 12717,
											"end": 12750,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 12717,
											"end": 12750,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12717,
											"end": 12750,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12717,
											"end": 12750,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 12717,
											"end": 12750,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12717,
											"end": 12750,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "306"
										},
										{
											"begin": 12717,
											"end": 12750,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12717,
											"end": 12750,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12717,
											"end": 12750,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 12717,
											"end": 12750,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 12717,
											"end": 12750,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12717,
											"end": 12750,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12717,
											"end": 12750,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 12717,
											"end": 12750,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12717,
											"end": 12750,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12717,
											"end": 12750,
											"modifierDepth": 2,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 12717,
											"end": 12750,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12717,
											"end": 12750,
											"modifierDepth": 2,
											"name": "EXTCODESIZE",
											"source": 9
										},
										{
											"begin": 12717,
											"end": 12750,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 12717,
											"end": 12750,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12717,
											"end": 12750,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 12717,
											"end": 12750,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "307"
										},
										{
											"begin": 12717,
											"end": 12750,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12717,
											"end": 12750,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12717,
											"end": 12750,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12717,
											"end": 12750,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 12717,
											"end": 12750,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "307"
										},
										{
											"begin": 12717,
											"end": 12750,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12717,
											"end": 12750,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12717,
											"end": 12750,
											"modifierDepth": 2,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 12717,
											"end": 12750,
											"modifierDepth": 2,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 12717,
											"end": 12750,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 12717,
											"end": 12750,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12717,
											"end": 12750,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 12717,
											"end": 12750,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "309"
										},
										{
											"begin": 12717,
											"end": 12750,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12717,
											"end": 12750,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 12717,
											"end": 12750,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12717,
											"end": 12750,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12717,
											"end": 12750,
											"modifierDepth": 2,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 12717,
											"end": 12750,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 12717,
											"end": 12750,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12717,
											"end": 12750,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 12717,
											"end": 12750,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "309"
										},
										{
											"begin": 12717,
											"end": 12750,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12717,
											"end": 12750,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12717,
											"end": 12750,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12717,
											"end": 12750,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12717,
											"end": 12750,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12785,
											"end": 12795,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 12765,
											"end": 12804,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12765,
											"end": 12804,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 12765,
											"end": 12804,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4DD465EB9D4BF90CAF3400CC334C731B4CEF0AA7F013E5D72F20B0CEC2E30EA9"
										},
										{
											"begin": 12797,
											"end": 12803,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12765,
											"end": 12804,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 12765,
											"end": 12804,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 12765,
											"end": 12804,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "310"
										},
										{
											"begin": 12765,
											"end": 12804,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12765,
											"end": 12804,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12765,
											"end": 12804,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 12765,
											"end": 12804,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12765,
											"end": 12804,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "310"
										},
										{
											"begin": 12765,
											"end": 12804,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12765,
											"end": 12804,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 12765,
											"end": 12804,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 12765,
											"end": 12804,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12765,
											"end": 12804,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12765,
											"end": 12804,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 12765,
											"end": 12804,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12765,
											"end": 12804,
											"modifierDepth": 2,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 11241,
											"end": 12811,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11241,
											"end": 12811,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11241,
											"end": 12811,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11241,
											"end": 12811,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11241,
											"end": 12811,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "311"
										},
										{
											"begin": 2303,
											"end": 2321,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "210"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "311"
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11155,
											"end": 12811,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11155,
											"end": 12811,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1502,
											"end": 1528,
											"name": "tag",
											"source": 9,
											"value": "154"
										},
										{
											"begin": 1502,
											"end": 1528,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1502,
											"end": 1528,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 1502,
											"end": 1528,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1502,
											"end": 1528,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1502,
											"end": 1528,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8805,
											"end": 9748,
											"name": "tag",
											"source": 9,
											"value": "159"
										},
										{
											"begin": 8805,
											"end": 9748,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4612,
											"end": 4618,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 4612,
											"end": 4618,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4612,
											"end": 4618,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4612,
											"end": 4618,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4612,
											"end": 4618,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4612,
											"end": 4618,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 4612,
											"end": 4618,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 4612,
											"end": 4618,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4612,
											"end": 4618,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 4612,
											"end": 4618,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 4612,
											"end": 4618,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4611,
											"end": 4618,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4603,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "313"
										},
										{
											"begin": 4603,
											"end": 4641,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4603,
											"end": 4641,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4603,
											"end": 4641,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4603,
											"end": 4641,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4603,
											"end": 4641,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4603,
											"end": 4641,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4603,
											"end": 4641,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4603,
											"end": 4641,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4603,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "314"
										},
										{
											"begin": 4603,
											"end": 4641,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4603,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "186"
										},
										{
											"begin": 4603,
											"end": 4641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4603,
											"end": 4641,
											"name": "tag",
											"source": 9,
											"value": "314"
										},
										{
											"begin": 4603,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4603,
											"end": 4641,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4603,
											"end": 4641,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4603,
											"end": 4641,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4603,
											"end": 4641,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4603,
											"end": 4641,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4603,
											"end": 4641,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4603,
											"end": 4641,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4603,
											"end": 4641,
											"name": "tag",
											"source": 9,
											"value": "313"
										},
										{
											"begin": 4603,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "316"
										},
										{
											"begin": 2261,
											"end": 2280,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "316"
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8933,
											"end": 8944,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 8933,
											"end": 8944,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 8933,
											"end": 8944,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8933,
											"end": 8944,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 8933,
											"end": 8944,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8933,
											"end": 8944,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 8933,
											"end": 8944,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 8933,
											"end": 8944,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8933,
											"end": 8944,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 8933,
											"end": 8944,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 8933,
											"end": 8944,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8925,
											"end": 8964,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "318"
										},
										{
											"begin": 8925,
											"end": 8964,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8925,
											"end": 8964,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8925,
											"end": 8964,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8925,
											"end": 8964,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8925,
											"end": 8964,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8925,
											"end": 8964,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8925,
											"end": 8964,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 8925,
											"end": 8964,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8925,
											"end": 8964,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "319"
										},
										{
											"begin": 8925,
											"end": 8964,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8925,
											"end": 8964,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "193"
										},
										{
											"begin": 8925,
											"end": 8964,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8925,
											"end": 8964,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "319"
										},
										{
											"begin": 8925,
											"end": 8964,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8925,
											"end": 8964,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8925,
											"end": 8964,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8925,
											"end": 8964,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8925,
											"end": 8964,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8925,
											"end": 8964,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8925,
											"end": 8964,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8925,
											"end": 8964,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 8925,
											"end": 8964,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "318"
										},
										{
											"begin": 8925,
											"end": 8964,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9004,
											"end": 9017,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8982,
											"end": 8988,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 8982,
											"end": 9000,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8989,
											"end": 8999,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 8982,
											"end": 9000,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8982,
											"end": 9000,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8982,
											"end": 9000,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8982,
											"end": 9000,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8982,
											"end": 9000,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8982,
											"end": 9000,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8982,
											"end": 9000,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8982,
											"end": 9000,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8982,
											"end": 9000,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8982,
											"end": 9000,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8982,
											"end": 9000,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8982,
											"end": 9000,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8982,
											"end": 9000,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8982,
											"end": 9000,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8982,
											"end": 9000,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 8982,
											"end": 9000,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 8982,
											"end": 9017,
											"modifierDepth": 2,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 8974,
											"end": 9035,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "320"
										},
										{
											"begin": 8974,
											"end": 9035,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8974,
											"end": 9035,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8974,
											"end": 9035,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8974,
											"end": 9035,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8974,
											"end": 9035,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8974,
											"end": 9035,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8974,
											"end": 9035,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 8974,
											"end": 9035,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8974,
											"end": 9035,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "321"
										},
										{
											"begin": 8974,
											"end": 9035,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8974,
											"end": 9035,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "280"
										},
										{
											"begin": 8974,
											"end": 9035,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8974,
											"end": 9035,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "321"
										},
										{
											"begin": 8974,
											"end": 9035,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8974,
											"end": 9035,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8974,
											"end": 9035,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8974,
											"end": 9035,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8974,
											"end": 9035,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8974,
											"end": 9035,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8974,
											"end": 9035,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8974,
											"end": 9035,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 8974,
											"end": 9035,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "320"
										},
										{
											"begin": 8974,
											"end": 9035,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9053,
											"end": 9106,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "322"
										},
										{
											"begin": 9069,
											"end": 9079,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 9081,
											"end": 9094,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9096,
											"end": 9105,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9053,
											"end": 9068,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "323"
										},
										{
											"begin": 9053,
											"end": 9106,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9053,
											"end": 9106,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "322"
										},
										{
											"begin": 9053,
											"end": 9106,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9045,
											"end": 9128,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "324"
										},
										{
											"begin": 9045,
											"end": 9128,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9045,
											"end": 9128,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9045,
											"end": 9128,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9045,
											"end": 9128,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9045,
											"end": 9128,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9045,
											"end": 9128,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9045,
											"end": 9128,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 9045,
											"end": 9128,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9045,
											"end": 9128,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "325"
										},
										{
											"begin": 9045,
											"end": 9128,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9045,
											"end": 9128,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "326"
										},
										{
											"begin": 9045,
											"end": 9128,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9045,
											"end": 9128,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "325"
										},
										{
											"begin": 9045,
											"end": 9128,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9045,
											"end": 9128,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9045,
											"end": 9128,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9045,
											"end": 9128,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9045,
											"end": 9128,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9045,
											"end": 9128,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9045,
											"end": 9128,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9045,
											"end": 9128,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 9045,
											"end": 9128,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "324"
										},
										{
											"begin": 9045,
											"end": 9128,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9139,
											"end": 9145,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 9139,
											"end": 9157,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9146,
											"end": 9156,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 9139,
											"end": 9157,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9139,
											"end": 9157,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9139,
											"end": 9157,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9139,
											"end": 9157,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9139,
											"end": 9157,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9139,
											"end": 9157,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9139,
											"end": 9157,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9139,
											"end": 9157,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9139,
											"end": 9157,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9139,
											"end": 9157,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9139,
											"end": 9157,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9139,
											"end": 9157,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9139,
											"end": 9157,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9139,
											"end": 9157,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9139,
											"end": 9157,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 9139,
											"end": 9157,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9139,
											"end": 9159,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9139,
											"end": 9159,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 9139,
											"end": 9159,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9139,
											"end": 9159,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 9139,
											"end": 9159,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9139,
											"end": 9159,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9139,
											"end": 9159,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "327"
										},
										{
											"begin": 9139,
											"end": 9159,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9139,
											"end": 9159,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "282"
										},
										{
											"begin": 9139,
											"end": 9159,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9139,
											"end": 9159,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "327"
										},
										{
											"begin": 9139,
											"end": 9159,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9139,
											"end": 9159,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9139,
											"end": 9159,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9139,
											"end": 9159,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9139,
											"end": 9159,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 9139,
											"end": 9159,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9170,
											"end": 9195,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9198,
											"end": 9209,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 9198,
											"end": 9221,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9210,
											"end": 9220,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 9198,
											"end": 9221,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9198,
											"end": 9221,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9198,
											"end": 9221,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9198,
											"end": 9221,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9198,
											"end": 9221,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9198,
											"end": 9221,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9198,
											"end": 9221,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9198,
											"end": 9221,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9198,
											"end": 9221,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9198,
											"end": 9221,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9198,
											"end": 9221,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9198,
											"end": 9221,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9198,
											"end": 9221,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9198,
											"end": 9221,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9198,
											"end": 9221,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 9170,
											"end": 9221,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9170,
											"end": 9221,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9276,
											"end": 9294,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 9276,
											"end": 9294,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 9258,
											"end": 9263,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9258,
											"end": 9273,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 9258,
											"end": 9273,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9258,
											"end": 9273,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 9258,
											"end": 9294,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "328"
										},
										{
											"begin": 9258,
											"end": 9294,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9258,
											"end": 9294,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9258,
											"end": 9294,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "206"
										},
										{
											"begin": 9258,
											"end": 9294,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9258,
											"end": 9294,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "328"
										},
										{
											"begin": 9258,
											"end": 9294,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9239,
											"end": 9254,
											"modifierDepth": 2,
											"name": "TIMESTAMP",
											"source": 9
										},
										{
											"begin": 9239,
											"end": 9294,
											"modifierDepth": 2,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 9239,
											"end": 9294,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9231,
											"end": 9323,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "329"
										},
										{
											"begin": 9231,
											"end": 9323,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9231,
											"end": 9323,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9231,
											"end": 9323,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9231,
											"end": 9323,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9231,
											"end": 9323,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9231,
											"end": 9323,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9231,
											"end": 9323,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 9231,
											"end": 9323,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9231,
											"end": 9323,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "330"
										},
										{
											"begin": 9231,
											"end": 9323,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9231,
											"end": 9323,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "331"
										},
										{
											"begin": 9231,
											"end": 9323,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9231,
											"end": 9323,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "330"
										},
										{
											"begin": 9231,
											"end": 9323,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9231,
											"end": 9323,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9231,
											"end": 9323,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9231,
											"end": 9323,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9231,
											"end": 9323,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9231,
											"end": 9323,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9231,
											"end": 9323,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9231,
											"end": 9323,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 9231,
											"end": 9323,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "329"
										},
										{
											"begin": 9231,
											"end": 9323,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9333,
											"end": 9347,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9350,
											"end": 9355,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9350,
											"end": 9375,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 9350,
											"end": 9375,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9350,
											"end": 9375,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 9333,
											"end": 9375,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9333,
											"end": 9375,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9402,
											"end": 9403,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9393,
											"end": 9399,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9393,
											"end": 9403,
											"modifierDepth": 2,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 9385,
											"end": 9426,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "332"
										},
										{
											"begin": 9385,
											"end": 9426,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9385,
											"end": 9426,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9385,
											"end": 9426,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9385,
											"end": 9426,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9385,
											"end": 9426,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9385,
											"end": 9426,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9385,
											"end": 9426,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 9385,
											"end": 9426,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9385,
											"end": 9426,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "333"
										},
										{
											"begin": 9385,
											"end": 9426,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9385,
											"end": 9426,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "334"
										},
										{
											"begin": 9385,
											"end": 9426,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9385,
											"end": 9426,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "333"
										},
										{
											"begin": 9385,
											"end": 9426,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9385,
											"end": 9426,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9385,
											"end": 9426,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9385,
											"end": 9426,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9385,
											"end": 9426,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9385,
											"end": 9426,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9385,
											"end": 9426,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9385,
											"end": 9426,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 9385,
											"end": 9426,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "332"
										},
										{
											"begin": 9385,
											"end": 9426,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9454,
											"end": 9466,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 9454,
											"end": 9466,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 9444,
											"end": 9450,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9444,
											"end": 9466,
											"modifierDepth": 2,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 9444,
											"end": 9466,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9436,
											"end": 9499,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "335"
										},
										{
											"begin": 9436,
											"end": 9499,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9436,
											"end": 9499,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9436,
											"end": 9499,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9436,
											"end": 9499,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9436,
											"end": 9499,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9436,
											"end": 9499,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9436,
											"end": 9499,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 9436,
											"end": 9499,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9436,
											"end": 9499,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "336"
										},
										{
											"begin": 9436,
											"end": 9499,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9436,
											"end": 9499,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "337"
										},
										{
											"begin": 9436,
											"end": 9499,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9436,
											"end": 9499,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "336"
										},
										{
											"begin": 9436,
											"end": 9499,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9436,
											"end": 9499,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9436,
											"end": 9499,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9436,
											"end": 9499,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9436,
											"end": 9499,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9436,
											"end": 9499,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9436,
											"end": 9499,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9436,
											"end": 9499,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 9436,
											"end": 9499,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "335"
										},
										{
											"begin": 9436,
											"end": 9499,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9599,
											"end": 9600,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9571,
											"end": 9576,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9571,
											"end": 9596,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 9571,
											"end": 9596,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9571,
											"end": 9600,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9571,
											"end": 9600,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9571,
											"end": 9600,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 9571,
											"end": 9600,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9628,
											"end": 9643,
											"modifierDepth": 2,
											"name": "TIMESTAMP",
											"source": 9
										},
										{
											"begin": 9610,
											"end": 9615,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9610,
											"end": 9625,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 9610,
											"end": 9625,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9610,
											"end": 9643,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9610,
											"end": 9643,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9610,
											"end": 9643,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 9610,
											"end": 9643,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9654,
											"end": 9662,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 9654,
											"end": 9662,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9654,
											"end": 9662,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9654,
											"end": 9662,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 9654,
											"end": 9662,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9654,
											"end": 9662,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 9654,
											"end": 9662,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 9654,
											"end": 9662,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9654,
											"end": 9662,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 9654,
											"end": 9662,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9654,
											"end": 9662,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9654,
											"end": 9667,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9654,
											"end": 9667,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9654,
											"end": 9667,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40C10F19"
										},
										{
											"begin": 9668,
											"end": 9678,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 9680,
											"end": 9686,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9654,
											"end": 9687,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9654,
											"end": 9687,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9654,
											"end": 9687,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9654,
											"end": 9687,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9654,
											"end": 9687,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9654,
											"end": 9687,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 9654,
											"end": 9687,
											"modifierDepth": 2,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 9654,
											"end": 9687,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9654,
											"end": 9687,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9654,
											"end": 9687,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 9654,
											"end": 9687,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9654,
											"end": 9687,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "338"
										},
										{
											"begin": 9654,
											"end": 9687,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 9654,
											"end": 9687,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9654,
											"end": 9687,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9654,
											"end": 9687,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 9654,
											"end": 9687,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9654,
											"end": 9687,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "338"
										},
										{
											"begin": 9654,
											"end": 9687,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9654,
											"end": 9687,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9654,
											"end": 9687,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9654,
											"end": 9687,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9654,
											"end": 9687,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9654,
											"end": 9687,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9654,
											"end": 9687,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9654,
											"end": 9687,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9654,
											"end": 9687,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9654,
											"end": 9687,
											"modifierDepth": 2,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 9654,
											"end": 9687,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9654,
											"end": 9687,
											"modifierDepth": 2,
											"name": "EXTCODESIZE",
											"source": 9
										},
										{
											"begin": 9654,
											"end": 9687,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9654,
											"end": 9687,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9654,
											"end": 9687,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9654,
											"end": 9687,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "339"
										},
										{
											"begin": 9654,
											"end": 9687,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9654,
											"end": 9687,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9654,
											"end": 9687,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9654,
											"end": 9687,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 9654,
											"end": 9687,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "339"
										},
										{
											"begin": 9654,
											"end": 9687,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9654,
											"end": 9687,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9654,
											"end": 9687,
											"modifierDepth": 2,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 9654,
											"end": 9687,
											"modifierDepth": 2,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 9654,
											"end": 9687,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9654,
											"end": 9687,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9654,
											"end": 9687,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9654,
											"end": 9687,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "341"
										},
										{
											"begin": 9654,
											"end": 9687,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9654,
											"end": 9687,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 9654,
											"end": 9687,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9654,
											"end": 9687,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9654,
											"end": 9687,
											"modifierDepth": 2,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 9654,
											"end": 9687,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 9654,
											"end": 9687,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9654,
											"end": 9687,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 9654,
											"end": 9687,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "341"
										},
										{
											"begin": 9654,
											"end": 9687,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9654,
											"end": 9687,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9654,
											"end": 9687,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9654,
											"end": 9687,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9654,
											"end": 9687,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9722,
											"end": 9732,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 9702,
											"end": 9741,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9702,
											"end": 9741,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9702,
											"end": 9741,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "B127973BF29D1DAE6424FEF4F7461E0B9C444636AB23A8392D9969500034A13D"
										},
										{
											"begin": 9734,
											"end": 9740,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9702,
											"end": 9741,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9702,
											"end": 9741,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9702,
											"end": 9741,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "342"
										},
										{
											"begin": 9702,
											"end": 9741,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9702,
											"end": 9741,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9702,
											"end": 9741,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 9702,
											"end": 9741,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9702,
											"end": 9741,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "342"
										},
										{
											"begin": 9702,
											"end": 9741,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9702,
											"end": 9741,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9702,
											"end": 9741,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9702,
											"end": 9741,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9702,
											"end": 9741,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9702,
											"end": 9741,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9702,
											"end": 9741,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9702,
											"end": 9741,
											"modifierDepth": 2,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 8915,
											"end": 9748,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8915,
											"end": 9748,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "343"
										},
										{
											"begin": 2303,
											"end": 2321,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "210"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "343"
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8805,
											"end": 9748,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8805,
											"end": 9748,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8805,
											"end": 9748,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7128,
											"end": 8484,
											"name": "tag",
											"source": 9,
											"value": "163"
										},
										{
											"begin": 7128,
											"end": 8484,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4612,
											"end": 4618,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 4612,
											"end": 4618,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4612,
											"end": 4618,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4612,
											"end": 4618,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4612,
											"end": 4618,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4612,
											"end": 4618,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 4612,
											"end": 4618,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 4612,
											"end": 4618,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4612,
											"end": 4618,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 4612,
											"end": 4618,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 4612,
											"end": 4618,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4611,
											"end": 4618,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4603,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "345"
										},
										{
											"begin": 4603,
											"end": 4641,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4603,
											"end": 4641,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4603,
											"end": 4641,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4603,
											"end": 4641,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4603,
											"end": 4641,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4603,
											"end": 4641,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4603,
											"end": 4641,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4603,
											"end": 4641,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4603,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "346"
										},
										{
											"begin": 4603,
											"end": 4641,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4603,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "186"
										},
										{
											"begin": 4603,
											"end": 4641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4603,
											"end": 4641,
											"name": "tag",
											"source": 9,
											"value": "346"
										},
										{
											"begin": 4603,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4603,
											"end": 4641,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4603,
											"end": 4641,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4603,
											"end": 4641,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4603,
											"end": 4641,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4603,
											"end": 4641,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4603,
											"end": 4641,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4603,
											"end": 4641,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4603,
											"end": 4641,
											"name": "tag",
											"source": 9,
											"value": "345"
										},
										{
											"begin": 4603,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "348"
										},
										{
											"begin": 2261,
											"end": 2280,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "348"
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7238,
											"end": 7249,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 7238,
											"end": 7249,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 7238,
											"end": 7249,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7238,
											"end": 7249,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7238,
											"end": 7249,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7238,
											"end": 7249,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 7238,
											"end": 7249,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 7238,
											"end": 7249,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7238,
											"end": 7249,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 7238,
											"end": 7249,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 7238,
											"end": 7249,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7230,
											"end": 7269,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "350"
										},
										{
											"begin": 7230,
											"end": 7269,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7230,
											"end": 7269,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7230,
											"end": 7269,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7230,
											"end": 7269,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7230,
											"end": 7269,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7230,
											"end": 7269,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7230,
											"end": 7269,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7230,
											"end": 7269,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7230,
											"end": 7269,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "351"
										},
										{
											"begin": 7230,
											"end": 7269,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7230,
											"end": 7269,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "193"
										},
										{
											"begin": 7230,
											"end": 7269,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7230,
											"end": 7269,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "351"
										},
										{
											"begin": 7230,
											"end": 7269,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7230,
											"end": 7269,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7230,
											"end": 7269,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7230,
											"end": 7269,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7230,
											"end": 7269,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7230,
											"end": 7269,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7230,
											"end": 7269,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7230,
											"end": 7269,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 7230,
											"end": 7269,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "350"
										},
										{
											"begin": 7230,
											"end": 7269,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7411,
											"end": 7424,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "D"
										},
										{
											"begin": 7411,
											"end": 7424,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7394,
											"end": 7408,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "C"
										},
										{
											"begin": 7394,
											"end": 7408,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7394,
											"end": 7424,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "352"
										},
										{
											"begin": 7394,
											"end": 7424,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7394,
											"end": 7424,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7394,
											"end": 7424,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "206"
										},
										{
											"begin": 7394,
											"end": 7424,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7394,
											"end": 7424,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "352"
										},
										{
											"begin": 7394,
											"end": 7424,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7378,
											"end": 7390,
											"modifierDepth": 2,
											"name": "NUMBER",
											"source": 9
										},
										{
											"begin": 7378,
											"end": 7424,
											"modifierDepth": 2,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 7374,
											"end": 7514,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "353"
										},
										{
											"begin": 7374,
											"end": 7514,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7459,
											"end": 7460,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7440,
											"end": 7456,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 7440,
											"end": 7460,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7440,
											"end": 7460,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7440,
											"end": 7460,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 7440,
											"end": 7460,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7491,
											"end": 7503,
											"modifierDepth": 2,
											"name": "NUMBER",
											"source": 9
										},
										{
											"begin": 7474,
											"end": 7488,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "C"
										},
										{
											"begin": 7474,
											"end": 7503,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7474,
											"end": 7503,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7474,
											"end": 7503,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 7474,
											"end": 7503,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7374,
											"end": 7514,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "353"
										},
										{
											"begin": 7374,
											"end": 7514,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7539,
											"end": 7540,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 7524,
											"end": 7535,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 7524,
											"end": 7535,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7524,
											"end": 7540,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7524,
											"end": 7540,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7524,
											"end": 7540,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7524,
											"end": 7540,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "354"
										},
										{
											"begin": 7524,
											"end": 7540,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7524,
											"end": 7540,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7524,
											"end": 7540,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "206"
										},
										{
											"begin": 7524,
											"end": 7540,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7524,
											"end": 7540,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "354"
										},
										{
											"begin": 7524,
											"end": 7540,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7524,
											"end": 7540,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7524,
											"end": 7540,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7524,
											"end": 7540,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7524,
											"end": 7540,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7524,
											"end": 7540,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7524,
											"end": 7540,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 7524,
											"end": 7540,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7570,
											"end": 7581,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7550,
											"end": 7566,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 7550,
											"end": 7566,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7550,
											"end": 7581,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7550,
											"end": 7581,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7550,
											"end": 7581,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7550,
											"end": 7581,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "355"
										},
										{
											"begin": 7550,
											"end": 7581,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7550,
											"end": 7581,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7550,
											"end": 7581,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "206"
										},
										{
											"begin": 7550,
											"end": 7581,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7550,
											"end": 7581,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "355"
										},
										{
											"begin": 7550,
											"end": 7581,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7550,
											"end": 7581,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7550,
											"end": 7581,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7550,
											"end": 7581,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7550,
											"end": 7581,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7550,
											"end": 7581,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7550,
											"end": 7581,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 7550,
											"end": 7581,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7612,
											"end": 7623,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7591,
											"end": 7608,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 7591,
											"end": 7608,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7591,
											"end": 7623,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7591,
											"end": 7623,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7591,
											"end": 7623,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7591,
											"end": 7623,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "356"
										},
										{
											"begin": 7591,
											"end": 7623,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7591,
											"end": 7623,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7591,
											"end": 7623,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "206"
										},
										{
											"begin": 7591,
											"end": 7623,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7591,
											"end": 7623,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "356"
										},
										{
											"begin": 7591,
											"end": 7623,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7591,
											"end": 7623,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7591,
											"end": 7623,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7591,
											"end": 7623,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7591,
											"end": 7623,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7591,
											"end": 7623,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7591,
											"end": 7623,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 7591,
											"end": 7623,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7634,
											"end": 7659,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7662,
											"end": 7673,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 7662,
											"end": 7685,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7674,
											"end": 7684,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 7662,
											"end": 7685,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7662,
											"end": 7685,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7662,
											"end": 7685,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7662,
											"end": 7685,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7662,
											"end": 7685,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7662,
											"end": 7685,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7662,
											"end": 7685,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7662,
											"end": 7685,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7662,
											"end": 7685,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7662,
											"end": 7685,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7662,
											"end": 7685,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7662,
											"end": 7685,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7662,
											"end": 7685,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7662,
											"end": 7685,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7662,
											"end": 7685,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 7634,
											"end": 7685,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7634,
											"end": 7685,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7715,
											"end": 7716,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 7695,
											"end": 7700,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7695,
											"end": 7711,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7695,
											"end": 7711,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7695,
											"end": 7711,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7695,
											"end": 7716,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7695,
											"end": 7716,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7695,
											"end": 7716,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7695,
											"end": 7716,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "357"
										},
										{
											"begin": 7695,
											"end": 7716,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7695,
											"end": 7716,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7695,
											"end": 7716,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "206"
										},
										{
											"begin": 7695,
											"end": 7716,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7695,
											"end": 7716,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "357"
										},
										{
											"begin": 7695,
											"end": 7716,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7695,
											"end": 7716,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7695,
											"end": 7716,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7695,
											"end": 7716,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7695,
											"end": 7716,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7695,
											"end": 7716,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7695,
											"end": 7716,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 7695,
											"end": 7716,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7747,
											"end": 7758,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7726,
											"end": 7731,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7726,
											"end": 7743,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 7726,
											"end": 7743,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7726,
											"end": 7743,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7726,
											"end": 7758,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7726,
											"end": 7758,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7726,
											"end": 7758,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7726,
											"end": 7758,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "358"
										},
										{
											"begin": 7726,
											"end": 7758,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7726,
											"end": 7758,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7726,
											"end": 7758,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "206"
										},
										{
											"begin": 7726,
											"end": 7758,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7726,
											"end": 7758,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "358"
										},
										{
											"begin": 7726,
											"end": 7758,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7726,
											"end": 7758,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7726,
											"end": 7758,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7726,
											"end": 7758,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7726,
											"end": 7758,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7726,
											"end": 7758,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7726,
											"end": 7758,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 7726,
											"end": 7758,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7848,
											"end": 7866,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7888,
											"end": 7907,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 7888,
											"end": 7907,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7869,
											"end": 7885,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 7869,
											"end": 7885,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7869,
											"end": 7907,
											"modifierDepth": 2,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 7869,
											"end": 7919,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "359"
										},
										{
											"begin": 7869,
											"end": 7919,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7916,
											"end": 7919,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 7869,
											"end": 7919,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "360"
										},
										{
											"begin": 7869,
											"end": 7919,
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7869,
											"end": 7919,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "359"
										},
										{
											"begin": 7869,
											"end": 7919,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7910,
											"end": 7913,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 7869,
											"end": 7919,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "360"
										},
										{
											"begin": 7869,
											"end": 7919,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7848,
											"end": 7919,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 7848,
											"end": 7919,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7848,
											"end": 7919,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7848,
											"end": 7919,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7929,
											"end": 7943,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7993,
											"end": 7996,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 7979,
											"end": 7989,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7961,
											"end": 7976,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 7961,
											"end": 7976,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7947,
											"end": 7958,
											"modifierDepth": 2,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 7947,
											"end": 7976,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "361"
										},
										{
											"begin": 7947,
											"end": 7976,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7947,
											"end": 7976,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7947,
											"end": 7976,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 7947,
											"end": 7976,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7947,
											"end": 7976,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "361"
										},
										{
											"begin": 7947,
											"end": 7976,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7947,
											"end": 7989,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "362"
										},
										{
											"begin": 7947,
											"end": 7989,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7947,
											"end": 7989,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7947,
											"end": 7989,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 7947,
											"end": 7989,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7947,
											"end": 7989,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "362"
										},
										{
											"begin": 7947,
											"end": 7989,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7946,
											"end": 7996,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "363"
										},
										{
											"begin": 7946,
											"end": 7996,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7946,
											"end": 7996,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7946,
											"end": 7996,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "232"
										},
										{
											"begin": 7946,
											"end": 7996,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7946,
											"end": 7996,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "363"
										},
										{
											"begin": 7946,
											"end": 7996,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7929,
											"end": 7996,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7929,
											"end": 7996,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8035,
											"end": 8041,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8006,
											"end": 8011,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8006,
											"end": 8031,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 8006,
											"end": 8031,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8006,
											"end": 8031,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8006,
											"end": 8041,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8006,
											"end": 8041,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8006,
											"end": 8041,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 8006,
											"end": 8041,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "364"
										},
										{
											"begin": 8006,
											"end": 8041,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8006,
											"end": 8041,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8006,
											"end": 8041,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "206"
										},
										{
											"begin": 8006,
											"end": 8041,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8006,
											"end": 8041,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "364"
										},
										{
											"begin": 8006,
											"end": 8041,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8006,
											"end": 8041,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8006,
											"end": 8041,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8006,
											"end": 8041,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8006,
											"end": 8041,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8006,
											"end": 8041,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8006,
											"end": 8041,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 8006,
											"end": 8041,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8115,
											"end": 8122,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8111,
											"end": 8267,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8111,
											"end": 8267,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "365"
										},
										{
											"begin": 8111,
											"end": 8267,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8180,
											"end": 8183,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 8166,
											"end": 8177,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 8166,
											"end": 8183,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "366"
										},
										{
											"begin": 8166,
											"end": 8183,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8166,
											"end": 8183,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8166,
											"end": 8183,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "232"
										},
										{
											"begin": 8166,
											"end": 8183,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8166,
											"end": 8183,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "366"
										},
										{
											"begin": 8166,
											"end": 8183,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8138,
											"end": 8150,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 8138,
											"end": 8162,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8151,
											"end": 8161,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 8138,
											"end": 8162,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8138,
											"end": 8162,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8138,
											"end": 8162,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8138,
											"end": 8162,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8138,
											"end": 8162,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8138,
											"end": 8162,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8138,
											"end": 8162,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8138,
											"end": 8162,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8138,
											"end": 8162,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8138,
											"end": 8162,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8138,
											"end": 8162,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8138,
											"end": 8162,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8138,
											"end": 8162,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8138,
											"end": 8162,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8138,
											"end": 8162,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 8138,
											"end": 8162,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8138,
											"end": 8183,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8138,
											"end": 8183,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8138,
											"end": 8183,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 8138,
											"end": 8183,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "367"
										},
										{
											"begin": 8138,
											"end": 8183,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8138,
											"end": 8183,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8138,
											"end": 8183,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "206"
										},
										{
											"begin": 8138,
											"end": 8183,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8138,
											"end": 8183,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "367"
										},
										{
											"begin": 8138,
											"end": 8183,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8138,
											"end": 8183,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8138,
											"end": 8183,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8138,
											"end": 8183,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8138,
											"end": 8183,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8138,
											"end": 8183,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8138,
											"end": 8183,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 8138,
											"end": 8183,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8111,
											"end": 8267,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "368"
										},
										{
											"begin": 8111,
											"end": 8267,
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8111,
											"end": 8267,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "365"
										},
										{
											"begin": 8111,
											"end": 8267,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8253,
											"end": 8256,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 8239,
											"end": 8250,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 8239,
											"end": 8256,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "369"
										},
										{
											"begin": 8239,
											"end": 8256,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8239,
											"end": 8256,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8239,
											"end": 8256,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "232"
										},
										{
											"begin": 8239,
											"end": 8256,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8239,
											"end": 8256,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "369"
										},
										{
											"begin": 8239,
											"end": 8256,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8214,
											"end": 8223,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 8214,
											"end": 8235,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8224,
											"end": 8234,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 8214,
											"end": 8235,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8214,
											"end": 8235,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8214,
											"end": 8235,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8214,
											"end": 8235,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8214,
											"end": 8235,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8214,
											"end": 8235,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8214,
											"end": 8235,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8214,
											"end": 8235,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8214,
											"end": 8235,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8214,
											"end": 8235,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8214,
											"end": 8235,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8214,
											"end": 8235,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8214,
											"end": 8235,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8214,
											"end": 8235,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8214,
											"end": 8235,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 8214,
											"end": 8235,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8214,
											"end": 8256,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8214,
											"end": 8256,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8214,
											"end": 8256,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 8214,
											"end": 8256,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "370"
										},
										{
											"begin": 8214,
											"end": 8256,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8214,
											"end": 8256,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8214,
											"end": 8256,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "206"
										},
										{
											"begin": 8214,
											"end": 8256,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8214,
											"end": 8256,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "370"
										},
										{
											"begin": 8214,
											"end": 8256,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8214,
											"end": 8256,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8214,
											"end": 8256,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8214,
											"end": 8256,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8214,
											"end": 8256,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8214,
											"end": 8256,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8214,
											"end": 8256,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 8214,
											"end": 8256,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8111,
											"end": 8267,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "368"
										},
										{
											"begin": 8111,
											"end": 8267,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8354,
											"end": 8355,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8335,
											"end": 8340,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8335,
											"end": 8350,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 8335,
											"end": 8350,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8335,
											"end": 8350,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 8335,
											"end": 8355,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8331,
											"end": 8415,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "371"
										},
										{
											"begin": 8331,
											"end": 8415,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8389,
											"end": 8404,
											"modifierDepth": 2,
											"name": "TIMESTAMP",
											"source": 9
										},
										{
											"begin": 8371,
											"end": 8376,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8371,
											"end": 8386,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 8371,
											"end": 8386,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8371,
											"end": 8404,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8371,
											"end": 8404,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8371,
											"end": 8404,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 8371,
											"end": 8404,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8331,
											"end": 8415,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "371"
										},
										{
											"begin": 8331,
											"end": 8415,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8444,
											"end": 8454,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 8430,
											"end": 8477,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8430,
											"end": 8477,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8430,
											"end": 8477,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4B85156045F2844CF6B638FF8A8DDB82C940CCDBE3C46E6E67D2583722C7DC71"
										},
										{
											"begin": 8456,
											"end": 8467,
											"modifierDepth": 2,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 8469,
											"end": 8476,
											"modifierDepth": 2,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 8430,
											"end": 8477,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8430,
											"end": 8477,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8430,
											"end": 8477,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "372"
										},
										{
											"begin": 8430,
											"end": 8477,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8430,
											"end": 8477,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8430,
											"end": 8477,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8430,
											"end": 8477,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "373"
										},
										{
											"begin": 8430,
											"end": 8477,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8430,
											"end": 8477,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "372"
										},
										{
											"begin": 8430,
											"end": 8477,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8430,
											"end": 8477,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8430,
											"end": 8477,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8430,
											"end": 8477,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8430,
											"end": 8477,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8430,
											"end": 8477,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8430,
											"end": 8477,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8430,
											"end": 8477,
											"modifierDepth": 2,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 7220,
											"end": 8484,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7220,
											"end": 8484,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7220,
											"end": 8484,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "374"
										},
										{
											"begin": 2303,
											"end": 2321,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "210"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "374"
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 8484,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7128,
											"end": 8484,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7128,
											"end": 8484,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1648,
											"end": 1680,
											"name": "tag",
											"source": 9,
											"value": "165"
										},
										{
											"begin": 1648,
											"end": 1680,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1648,
											"end": 1680,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 1648,
											"end": 1680,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1648,
											"end": 1680,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1648,
											"end": 1680,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2243,
											"end": 2291,
											"name": "tag",
											"source": 9,
											"value": "168"
										},
										{
											"begin": 2243,
											"end": 2291,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2243,
											"end": 2291,
											"name": "PUSH",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 2243,
											"end": 2291,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2243,
											"end": 2291,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2243,
											"end": 2291,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1571,
											"end": 1604,
											"name": "tag",
											"source": 9,
											"value": "171"
										},
										{
											"begin": 1571,
											"end": 1604,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1571,
											"end": 1604,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 1571,
											"end": 1604,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1571,
											"end": 1604,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1571,
											"end": 1604,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "376"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "376"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "378"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "379"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "379"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "378"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "380"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "380"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2589,
											"end": 2639,
											"name": "tag",
											"source": 9,
											"value": "178"
										},
										{
											"begin": 2589,
											"end": 2639,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2589,
											"end": 2639,
											"name": "PUSH",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 2589,
											"end": 2639,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2589,
											"end": 2639,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2589,
											"end": 2639,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2589,
											"end": 2639,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2589,
											"end": 2639,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2589,
											"end": 2639,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2589,
											"end": 2639,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2589,
											"end": 2639,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 2589,
											"end": 2639,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2589,
											"end": 2639,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2589,
											"end": 2639,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2589,
											"end": 2639,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2589,
											"end": 2639,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2589,
											"end": 2639,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2589,
											"end": 2639,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2589,
											"end": 2639,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1430,
											"end": 1460,
											"name": "tag",
											"source": 9,
											"value": "181"
										},
										{
											"begin": 1430,
											"end": 1460,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1430,
											"end": 1460,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 1430,
											"end": 1460,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1430,
											"end": 1460,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1430,
											"end": 1460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "tag",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "382"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "383"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "384"
										},
										{
											"begin": 2460,
											"end": 2523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 2,
											"value": "383"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 2,
											"value": "382"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2336,
											"end": 2623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "tag",
											"source": 2,
											"value": "210"
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2629,
											"end": 2838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "387"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "388"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "387"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "389"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "389"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "390"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "391"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "388"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "391"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "392"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "392"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "390"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15124,
											"end": 15539,
											"name": "tag",
											"source": 9,
											"value": "323"
										},
										{
											"begin": 15124,
											"end": 15539,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15235,
											"end": 15239,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15256,
											"end": 15275,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15305,
											"end": 15311,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 15313,
											"end": 15326,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 15288,
											"end": 15327,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 15288,
											"end": 15327,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 15288,
											"end": 15327,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 15288,
											"end": 15327,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15288,
											"end": 15327,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "395"
										},
										{
											"begin": 15288,
											"end": 15327,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 15288,
											"end": 15327,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15288,
											"end": 15327,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15288,
											"end": 15327,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "396"
										},
										{
											"begin": 15288,
											"end": 15327,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15288,
											"end": 15327,
											"name": "tag",
											"source": 9,
											"value": "395"
										},
										{
											"begin": 15288,
											"end": 15327,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15288,
											"end": 15327,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 15288,
											"end": 15327,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 15288,
											"end": 15327,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 15288,
											"end": 15327,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15288,
											"end": 15327,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 15288,
											"end": 15327,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 15288,
											"end": 15327,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 15288,
											"end": 15327,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15288,
											"end": 15327,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15288,
											"end": 15327,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15288,
											"end": 15327,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 15288,
											"end": 15327,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15278,
											"end": 15328,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 15278,
											"end": 15328,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 15278,
											"end": 15328,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15278,
											"end": 15328,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 15278,
											"end": 15328,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15278,
											"end": 15328,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 15256,
											"end": 15328,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15256,
											"end": 15328,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15343,
											"end": 15371,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15437,
											"end": 15448,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15384,
											"end": 15449,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 15384,
											"end": 15449,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 15384,
											"end": 15449,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 15384,
											"end": 15449,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15384,
											"end": 15449,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "397"
										},
										{
											"begin": 15384,
											"end": 15449,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15384,
											"end": 15449,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15384,
											"end": 15449,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "398"
										},
										{
											"begin": 15384,
											"end": 15449,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15384,
											"end": 15449,
											"name": "tag",
											"source": 9,
											"value": "397"
										},
										{
											"begin": 15384,
											"end": 15449,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15384,
											"end": 15449,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 15384,
											"end": 15449,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 15384,
											"end": 15449,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 15384,
											"end": 15449,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15384,
											"end": 15449,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 15384,
											"end": 15449,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 15384,
											"end": 15449,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 15384,
											"end": 15449,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15384,
											"end": 15449,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15384,
											"end": 15449,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15384,
											"end": 15449,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 15384,
											"end": 15449,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15374,
											"end": 15450,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 15374,
											"end": 15450,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 15374,
											"end": 15450,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15374,
											"end": 15450,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 15374,
											"end": 15450,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15374,
											"end": 15450,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 15343,
											"end": 15450,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15343,
											"end": 15450,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15522,
											"end": 15528,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 15472,
											"end": 15528,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15472,
											"end": 15528,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 15472,
											"end": 15518,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "399"
										},
										{
											"begin": 15486,
											"end": 15506,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15508,
											"end": 15517,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 15472,
											"end": 15485,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "400"
										},
										{
											"begin": 15472,
											"end": 15518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15472,
											"end": 15518,
											"name": "tag",
											"source": 9,
											"value": "399"
										},
										{
											"begin": 15472,
											"end": 15518,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15472,
											"end": 15528,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15472,
											"end": 15528,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 15472,
											"end": 15528,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 15465,
											"end": 15528,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 15465,
											"end": 15528,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15465,
											"end": 15528,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15465,
											"end": 15528,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15124,
											"end": 15539,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 15124,
											"end": 15539,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 15124,
											"end": 15539,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15124,
											"end": 15539,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15124,
											"end": 15539,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15124,
											"end": 15539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 7,
											"value": "388"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3714,
											"end": 3969,
											"name": "tag",
											"source": 8,
											"value": "400"
										},
										{
											"begin": 3714,
											"end": 3969,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3792,
											"end": 3799,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3812,
											"end": 3829,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3831,
											"end": 3849,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3851,
											"end": 3867,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3871,
											"end": 3898,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "403"
										},
										{
											"begin": 3882,
											"end": 3886,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 3888,
											"end": 3897,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 3871,
											"end": 3881,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "404"
										},
										{
											"begin": 3871,
											"end": 3898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3871,
											"end": 3898,
											"name": "tag",
											"source": 8,
											"value": "403"
										},
										{
											"begin": 3871,
											"end": 3898,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3811,
											"end": 3898,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3811,
											"end": 3898,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3811,
											"end": 3898,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3811,
											"end": 3898,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3811,
											"end": 3898,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3811,
											"end": 3898,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3908,
											"end": 3936,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "405"
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3927,
											"end": 3935,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3908,
											"end": 3919,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "406"
										},
										{
											"begin": 3908,
											"end": 3936,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3908,
											"end": 3936,
											"name": "tag",
											"source": 8,
											"value": "405"
										},
										{
											"begin": 3908,
											"end": 3936,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3953,
											"end": 3962,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3946,
											"end": 3962,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 3946,
											"end": 3962,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3946,
											"end": 3962,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3946,
											"end": 3962,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3946,
											"end": 3962,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3714,
											"end": 3969,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3714,
											"end": 3969,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3714,
											"end": 3969,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3714,
											"end": 3969,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3714,
											"end": 3969,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2129,
											"end": 2907,
											"name": "tag",
											"source": 8,
											"value": "404"
										},
										{
											"begin": 2129,
											"end": 2907,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2232,
											"end": 2249,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2251,
											"end": 2267,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2269,
											"end": 2283,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2319,
											"end": 2321,
											"name": "PUSH",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 2299,
											"end": 2308,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2299,
											"end": 2315,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2299,
											"end": 2321,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2295,
											"end": 2901,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "408"
										},
										{
											"begin": 2295,
											"end": 2901,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2337,
											"end": 2346,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2360,
											"end": 2369,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2383,
											"end": 2390,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2604,
											"end": 2608,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2593,
											"end": 2602,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 2589,
											"end": 2609,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2583,
											"end": 2610,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2578,
											"end": 2610,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2578,
											"end": 2610,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2653,
											"end": 2657,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2642,
											"end": 2651,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 2638,
											"end": 2658,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2632,
											"end": 2659,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2627,
											"end": 2659,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2627,
											"end": 2659,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2710,
											"end": 2714,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 2699,
											"end": 2708,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 2695,
											"end": 2715,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2689,
											"end": 2716,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2686,
											"end": 2687,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2681,
											"end": 2717,
											"name": "BYTE",
											"source": 8
										},
										{
											"begin": 2676,
											"end": 2717,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2676,
											"end": 2717,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2751,
											"end": 2776,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "409"
										},
										{
											"begin": 2762,
											"end": 2766,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 2768,
											"end": 2769,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2771,
											"end": 2772,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2774,
											"end": 2775,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2751,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "410"
										},
										{
											"begin": 2751,
											"end": 2776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2751,
											"end": 2776,
											"name": "tag",
											"source": 8,
											"value": "409"
										},
										{
											"begin": 2751,
											"end": 2776,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2744,
											"end": 2776,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 2744,
											"end": 2776,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2744,
											"end": 2776,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 2744,
											"end": 2776,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2744,
											"end": 2776,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 2744,
											"end": 2776,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2744,
											"end": 2776,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2744,
											"end": 2776,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2744,
											"end": 2776,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2744,
											"end": 2776,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "407"
										},
										{
											"begin": 2744,
											"end": 2776,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2295,
											"end": 2901,
											"name": "tag",
											"source": 8,
											"value": "408"
										},
										{
											"begin": 2295,
											"end": 2901,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2823,
											"end": 2824,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2827,
											"end": 2862,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 2872,
											"end": 2881,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2872,
											"end": 2888,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2864,
											"end": 2889,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2864,
											"end": 2889,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 2807,
											"end": 2890,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2807,
											"end": 2890,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2807,
											"end": 2890,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2807,
											"end": 2890,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2807,
											"end": 2890,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2807,
											"end": 2890,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2129,
											"end": 2907,
											"name": "tag",
											"source": 8,
											"value": "407"
										},
										{
											"begin": 2129,
											"end": 2907,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2129,
											"end": 2907,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2129,
											"end": 2907,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2129,
											"end": 2907,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2129,
											"end": 2907,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2129,
											"end": 2907,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2129,
											"end": 2907,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7280,
											"end": 7812,
											"name": "tag",
											"source": 8,
											"value": "406"
										},
										{
											"begin": 7280,
											"end": 7812,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7375,
											"end": 7395,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7366,
											"end": 7395,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 7366,
											"end": 7395,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7366,
											"end": 7395,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 7366,
											"end": 7395,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7366,
											"end": 7395,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "413"
										},
										{
											"begin": 7366,
											"end": 7395,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7366,
											"end": 7395,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "414"
										},
										{
											"begin": 7366,
											"end": 7395,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "415"
										},
										{
											"begin": 7366,
											"end": 7395,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7366,
											"end": 7395,
											"name": "tag",
											"source": 8,
											"value": "414"
										},
										{
											"begin": 7366,
											"end": 7395,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7366,
											"end": 7395,
											"name": "tag",
											"source": 8,
											"value": "413"
										},
										{
											"begin": 7366,
											"end": 7395,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7366,
											"end": 7371,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7366,
											"end": 7395,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 7366,
											"end": 7395,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7366,
											"end": 7395,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 7366,
											"end": 7395,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7366,
											"end": 7395,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "416"
										},
										{
											"begin": 7366,
											"end": 7395,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7366,
											"end": 7395,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "417"
										},
										{
											"begin": 7366,
											"end": 7395,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "415"
										},
										{
											"begin": 7366,
											"end": 7395,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7366,
											"end": 7395,
											"name": "tag",
											"source": 8,
											"value": "417"
										},
										{
											"begin": 7366,
											"end": 7395,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7366,
											"end": 7395,
											"name": "tag",
											"source": 8,
											"value": "416"
										},
										{
											"begin": 7366,
											"end": 7395,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7366,
											"end": 7395,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 7362,
											"end": 7806,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7411,
											"end": 7418,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "412"
										},
										{
											"begin": 7362,
											"end": 7806,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7471,
											"end": 7500,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 7462,
											"end": 7500,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 7462,
											"end": 7500,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7462,
											"end": 7500,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 7462,
											"end": 7500,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7462,
											"end": 7500,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "420"
										},
										{
											"begin": 7462,
											"end": 7500,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7462,
											"end": 7500,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "421"
										},
										{
											"begin": 7462,
											"end": 7500,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "415"
										},
										{
											"begin": 7462,
											"end": 7500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7462,
											"end": 7500,
											"name": "tag",
											"source": 8,
											"value": "421"
										},
										{
											"begin": 7462,
											"end": 7500,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7462,
											"end": 7500,
											"name": "tag",
											"source": 8,
											"value": "420"
										},
										{
											"begin": 7462,
											"end": 7500,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7462,
											"end": 7467,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7462,
											"end": 7500,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 7462,
											"end": 7500,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7462,
											"end": 7500,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 7462,
											"end": 7500,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7462,
											"end": 7500,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "422"
										},
										{
											"begin": 7462,
											"end": 7500,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7462,
											"end": 7500,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "423"
										},
										{
											"begin": 7462,
											"end": 7500,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "415"
										},
										{
											"begin": 7462,
											"end": 7500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7462,
											"end": 7500,
											"name": "tag",
											"source": 8,
											"value": "423"
										},
										{
											"begin": 7462,
											"end": 7500,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7462,
											"end": 7500,
											"name": "tag",
											"source": 8,
											"value": "422"
										},
										{
											"begin": 7462,
											"end": 7500,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7462,
											"end": 7500,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 7458,
											"end": 7806,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "424"
										},
										{
											"begin": 7458,
											"end": 7806,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7523,
											"end": 7546,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7523,
											"end": 7546,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7523,
											"end": 7546,
											"name": "PUSH",
											"source": 8,
											"value": "F645EEDF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7523,
											"end": 7546,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7523,
											"end": 7546,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7523,
											"end": 7546,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 7523,
											"end": 7546,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7523,
											"end": 7546,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7523,
											"end": 7546,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7523,
											"end": 7546,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7523,
											"end": 7546,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7523,
											"end": 7546,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 7523,
											"end": 7546,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7523,
											"end": 7546,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 7458,
											"end": 7806,
											"name": "tag",
											"source": 8,
											"value": "424"
										},
										{
											"begin": 7458,
											"end": 7806,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7576,
											"end": 7611,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 7567,
											"end": 7611,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 7567,
											"end": 7611,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7567,
											"end": 7611,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 7567,
											"end": 7611,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7567,
											"end": 7611,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "426"
										},
										{
											"begin": 7567,
											"end": 7611,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7567,
											"end": 7611,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "427"
										},
										{
											"begin": 7567,
											"end": 7611,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "415"
										},
										{
											"begin": 7567,
											"end": 7611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7567,
											"end": 7611,
											"name": "tag",
											"source": 8,
											"value": "427"
										},
										{
											"begin": 7567,
											"end": 7611,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7567,
											"end": 7611,
											"name": "tag",
											"source": 8,
											"value": "426"
										},
										{
											"begin": 7567,
											"end": 7611,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7567,
											"end": 7572,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7567,
											"end": 7611,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 7567,
											"end": 7611,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7567,
											"end": 7611,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 7567,
											"end": 7611,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7567,
											"end": 7611,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "428"
										},
										{
											"begin": 7567,
											"end": 7611,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7567,
											"end": 7611,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "429"
										},
										{
											"begin": 7567,
											"end": 7611,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "415"
										},
										{
											"begin": 7567,
											"end": 7611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7567,
											"end": 7611,
											"name": "tag",
											"source": 8,
											"value": "429"
										},
										{
											"begin": 7567,
											"end": 7611,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7567,
											"end": 7611,
											"name": "tag",
											"source": 8,
											"value": "428"
										},
										{
											"begin": 7567,
											"end": 7611,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7567,
											"end": 7611,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 7563,
											"end": 7806,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "430"
										},
										{
											"begin": 7563,
											"end": 7806,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7670,
											"end": 7678,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7662,
											"end": 7679,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7662,
											"end": 7679,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 7634,
											"end": 7680,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7634,
											"end": 7680,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7634,
											"end": 7680,
											"name": "PUSH",
											"source": 8,
											"value": "FCE698F700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7634,
											"end": 7680,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7634,
											"end": 7680,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7634,
											"end": 7680,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 7634,
											"end": 7680,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7634,
											"end": 7680,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "431"
										},
										{
											"begin": 7634,
											"end": 7680,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7634,
											"end": 7680,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7634,
											"end": 7680,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "53"
										},
										{
											"begin": 7634,
											"end": 7680,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7634,
											"end": 7680,
											"name": "tag",
											"source": 8,
											"value": "431"
										},
										{
											"begin": 7634,
											"end": 7680,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7634,
											"end": 7680,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7634,
											"end": 7680,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7634,
											"end": 7680,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7634,
											"end": 7680,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7634,
											"end": 7680,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 7634,
											"end": 7680,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7634,
											"end": 7680,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 7563,
											"end": 7806,
											"name": "tag",
											"source": 8,
											"value": "430"
										},
										{
											"begin": 7563,
											"end": 7806,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7710,
											"end": 7740,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 7701,
											"end": 7740,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7701,
											"end": 7740,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7701,
											"end": 7740,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 7701,
											"end": 7740,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7701,
											"end": 7740,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "433"
										},
										{
											"begin": 7701,
											"end": 7740,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7701,
											"end": 7740,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "434"
										},
										{
											"begin": 7701,
											"end": 7740,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "415"
										},
										{
											"begin": 7701,
											"end": 7740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7701,
											"end": 7740,
											"name": "tag",
											"source": 8,
											"value": "434"
										},
										{
											"begin": 7701,
											"end": 7740,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7701,
											"end": 7740,
											"name": "tag",
											"source": 8,
											"value": "433"
										},
										{
											"begin": 7701,
											"end": 7740,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7701,
											"end": 7706,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7701,
											"end": 7740,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 7701,
											"end": 7740,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7701,
											"end": 7740,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 7701,
											"end": 7740,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7701,
											"end": 7740,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "435"
										},
										{
											"begin": 7701,
											"end": 7740,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7701,
											"end": 7740,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "436"
										},
										{
											"begin": 7701,
											"end": 7740,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "415"
										},
										{
											"begin": 7701,
											"end": 7740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7701,
											"end": 7740,
											"name": "tag",
											"source": 8,
											"value": "436"
										},
										{
											"begin": 7701,
											"end": 7740,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7701,
											"end": 7740,
											"name": "tag",
											"source": 8,
											"value": "435"
										},
										{
											"begin": 7701,
											"end": 7740,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7701,
											"end": 7740,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 7697,
											"end": 7806,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "437"
										},
										{
											"begin": 7697,
											"end": 7806,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7786,
											"end": 7794,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7763,
											"end": 7795,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7763,
											"end": 7795,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7763,
											"end": 7795,
											"name": "PUSH",
											"source": 8,
											"value": "D78BCE0C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7763,
											"end": 7795,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7763,
											"end": 7795,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7763,
											"end": 7795,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 7763,
											"end": 7795,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7763,
											"end": 7795,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "438"
										},
										{
											"begin": 7763,
											"end": 7795,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7763,
											"end": 7795,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7763,
											"end": 7795,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "439"
										},
										{
											"begin": 7763,
											"end": 7795,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7763,
											"end": 7795,
											"name": "tag",
											"source": 8,
											"value": "438"
										},
										{
											"begin": 7763,
											"end": 7795,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7763,
											"end": 7795,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7763,
											"end": 7795,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7763,
											"end": 7795,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7763,
											"end": 7795,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7763,
											"end": 7795,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 7763,
											"end": 7795,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7763,
											"end": 7795,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 7697,
											"end": 7806,
											"name": "tag",
											"source": 8,
											"value": "437"
										},
										{
											"begin": 7697,
											"end": 7806,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7280,
											"end": 7812,
											"name": "tag",
											"source": 8,
											"value": "412"
										},
										{
											"begin": 7280,
											"end": 7812,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7280,
											"end": 7812,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7280,
											"end": 7812,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7280,
											"end": 7812,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5203,
											"end": 6754,
											"name": "tag",
											"source": 8,
											"value": "410"
										},
										{
											"begin": 5203,
											"end": 6754,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5329,
											"end": 5346,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5348,
											"end": 5364,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5366,
											"end": 5380,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6283,
											"end": 6349,
											"name": "PUSH",
											"source": 8,
											"value": "7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"
										},
										{
											"begin": 6278,
											"end": 6279,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6270,
											"end": 6280,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6270,
											"end": 6280,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 6270,
											"end": 6349,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 6266,
											"end": 6430,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6266,
											"end": 6430,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "441"
										},
										{
											"begin": 6266,
											"end": 6430,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6381,
											"end": 6382,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6385,
											"end": 6415,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 6417,
											"end": 6418,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 6365,
											"end": 6419,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6365,
											"end": 6419,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6365,
											"end": 6419,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6365,
											"end": 6419,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6365,
											"end": 6419,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6365,
											"end": 6419,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6365,
											"end": 6419,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "440"
										},
										{
											"begin": 6365,
											"end": 6419,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6266,
											"end": 6430,
											"name": "tag",
											"source": 8,
											"value": "441"
										},
										{
											"begin": 6266,
											"end": 6430,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6524,
											"end": 6538,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 6551,
											"end": 6555,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 6557,
											"end": 6558,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 6560,
											"end": 6561,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 6563,
											"end": 6564,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "442"
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "443"
										},
										{
											"begin": 6541,
											"end": 6565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "tag",
											"source": 8,
											"value": "442"
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "STATICCALL",
											"source": 8
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "445"
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "tag",
											"source": 8,
											"value": "445"
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6524,
											"end": 6565,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6524,
											"end": 6565,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6597,
											"end": 6598,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6579,
											"end": 6599,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6579,
											"end": 6599,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6579,
											"end": 6585,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6579,
											"end": 6599,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6579,
											"end": 6599,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6579,
											"end": 6599,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6575,
											"end": 6688,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "446"
										},
										{
											"begin": 6575,
											"end": 6688,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6631,
											"end": 6632,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6635,
											"end": 6664,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 6674,
											"end": 6675,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6666,
											"end": 6676,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6666,
											"end": 6676,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 6615,
											"end": 6677,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 6615,
											"end": 6677,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6615,
											"end": 6677,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 6615,
											"end": 6677,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6615,
											"end": 6677,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 6615,
											"end": 6677,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6615,
											"end": 6677,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6615,
											"end": 6677,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "440"
										},
										{
											"begin": 6615,
											"end": 6677,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6575,
											"end": 6688,
											"name": "tag",
											"source": 8,
											"value": "446"
										},
										{
											"begin": 6575,
											"end": 6688,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6706,
											"end": 6712,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6714,
											"end": 6734,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6744,
											"end": 6745,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6736,
											"end": 6746,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6736,
											"end": 6746,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 6698,
											"end": 6747,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 6698,
											"end": 6747,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6698,
											"end": 6747,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 6698,
											"end": 6747,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6698,
											"end": 6747,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 6698,
											"end": 6747,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6698,
											"end": 6747,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5203,
											"end": 6754,
											"name": "tag",
											"source": 8,
											"value": "440"
										},
										{
											"begin": 5203,
											"end": 6754,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5203,
											"end": 6754,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 5203,
											"end": 6754,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5203,
											"end": 6754,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 5203,
											"end": 6754,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5203,
											"end": 6754,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 5203,
											"end": 6754,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5203,
											"end": 6754,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5203,
											"end": 6754,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5203,
											"end": 6754,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 10,
											"value": "447"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 10,
											"value": "448"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 10,
											"value": "449"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 10,
											"value": "450"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 10,
											"value": "451"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "532"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "450"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 10,
											"value": "532"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 10,
											"value": "452"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "534"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "451"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 10,
											"value": "534"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "535"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 10,
											"value": "535"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 10,
											"value": "453"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "537"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "452"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 10,
											"value": "537"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "tag",
											"source": 10,
											"value": "50"
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 900,
											"end": 906,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 951,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 946,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 928,
											"end": 935,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 924,
											"end": 947,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 920,
											"end": 952,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "539"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "540"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "448"
										},
										{
											"begin": 955,
											"end": 1034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "tag",
											"source": 10,
											"value": "540"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "tag",
											"source": 10,
											"value": "539"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1075,
											"end": 1076,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "541"
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1125,
											"end": 1134,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1121,
											"end": 1143,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "453"
										},
										{
											"begin": 1100,
											"end": 1153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "tag",
											"source": 10,
											"value": "541"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1046,
											"end": 1163,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 841,
											"end": 1170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "tag",
											"source": 10,
											"value": "454"
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1213,
											"end": 1220,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1242,
											"end": 1247,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1231,
											"end": 1247,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1231,
											"end": 1247,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1176,
											"end": 1253,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "tag",
											"source": 10,
											"value": "455"
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "544"
										},
										{
											"begin": 1364,
											"end": 1369,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "454"
										},
										{
											"begin": 1346,
											"end": 1370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "tag",
											"source": 10,
											"value": "544"
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1344,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1334,
											"end": 1371,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1259,
											"end": 1377,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "tag",
											"source": 10,
											"value": "53"
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1476,
											"end": 1480,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1514,
											"end": 1516,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1503,
											"end": 1512,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1499,
											"end": 1517,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1491,
											"end": 1517,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1491,
											"end": 1517,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "546"
										},
										{
											"begin": 1595,
											"end": 1596,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1584,
											"end": 1593,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1580,
											"end": 1597,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1571,
											"end": 1577,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "455"
										},
										{
											"begin": 1527,
											"end": 1598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "tag",
											"source": 10,
											"value": "546"
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1383,
											"end": 1605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "tag",
											"source": 10,
											"value": "456"
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "548"
										},
										{
											"begin": 1702,
											"end": 1707,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "454"
										},
										{
											"begin": 1684,
											"end": 1708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "tag",
											"source": 10,
											"value": "548"
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1677,
											"end": 1682,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1674,
											"end": 1709,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "549"
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1723,
											"end": 1724,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1720,
											"end": 1721,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1713,
											"end": 1725,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "tag",
											"source": 10,
											"value": "549"
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1611,
											"end": 1733,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "tag",
											"source": 10,
											"value": "457"
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1823,
											"end": 1829,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1810,
											"end": 1830,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1801,
											"end": 1830,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1801,
											"end": 1830,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "551"
										},
										{
											"begin": 1866,
											"end": 1871,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "456"
										},
										{
											"begin": 1839,
											"end": 1872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "tag",
											"source": 10,
											"value": "551"
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1739,
											"end": 1878,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "tag",
											"source": 10,
											"value": "56"
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1943,
											"end": 1949,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1992,
											"end": 1994,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1980,
											"end": 1989,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1971,
											"end": 1978,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1967,
											"end": 1990,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1963,
											"end": 1995,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "553"
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1998,
											"end": 2077,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "554"
										},
										{
											"begin": 1998,
											"end": 2077,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "448"
										},
										{
											"begin": 1998,
											"end": 2077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1998,
											"end": 2077,
											"name": "tag",
											"source": 10,
											"value": "554"
										},
										{
											"begin": 1998,
											"end": 2077,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "tag",
											"source": 10,
											"value": "553"
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2118,
											"end": 2119,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2143,
											"end": 2196,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "555"
										},
										{
											"begin": 2188,
											"end": 2195,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2179,
											"end": 2185,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2168,
											"end": 2177,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2164,
											"end": 2186,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2143,
											"end": 2196,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "457"
										},
										{
											"begin": 2143,
											"end": 2196,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2143,
											"end": 2196,
											"name": "tag",
											"source": 10,
											"value": "555"
										},
										{
											"begin": 2143,
											"end": 2196,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2133,
											"end": 2196,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2133,
											"end": 2196,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2089,
											"end": 2206,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1884,
											"end": 2213,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2219,
											"end": 2772,
											"name": "tag",
											"source": 10,
											"value": "62"
										},
										{
											"begin": 2219,
											"end": 2772,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2396,
											"end": 2400,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2434,
											"end": 2437,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 2423,
											"end": 2432,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2419,
											"end": 2438,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2411,
											"end": 2438,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2411,
											"end": 2438,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2448,
											"end": 2519,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "557"
										},
										{
											"begin": 2516,
											"end": 2517,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2505,
											"end": 2514,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2501,
											"end": 2518,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2492,
											"end": 2498,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 2448,
											"end": 2519,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "455"
										},
										{
											"begin": 2448,
											"end": 2519,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2448,
											"end": 2519,
											"name": "tag",
											"source": 10,
											"value": "557"
										},
										{
											"begin": 2448,
											"end": 2519,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2529,
											"end": 2601,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "558"
										},
										{
											"begin": 2597,
											"end": 2599,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2586,
											"end": 2595,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2582,
											"end": 2600,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2573,
											"end": 2579,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2529,
											"end": 2601,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "455"
										},
										{
											"begin": 2529,
											"end": 2601,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2529,
											"end": 2601,
											"name": "tag",
											"source": 10,
											"value": "558"
										},
										{
											"begin": 2529,
											"end": 2601,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2611,
											"end": 2683,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "559"
										},
										{
											"begin": 2679,
											"end": 2681,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2668,
											"end": 2677,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2664,
											"end": 2682,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2655,
											"end": 2661,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2611,
											"end": 2683,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "455"
										},
										{
											"begin": 2611,
											"end": 2683,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2611,
											"end": 2683,
											"name": "tag",
											"source": 10,
											"value": "559"
										},
										{
											"begin": 2611,
											"end": 2683,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2693,
											"end": 2765,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "560"
										},
										{
											"begin": 2761,
											"end": 2763,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 2750,
											"end": 2759,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2746,
											"end": 2764,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2737,
											"end": 2743,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2693,
											"end": 2765,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "455"
										},
										{
											"begin": 2693,
											"end": 2765,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2693,
											"end": 2765,
											"name": "tag",
											"source": 10,
											"value": "560"
										},
										{
											"begin": 2693,
											"end": 2765,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2219,
											"end": 2772,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 2219,
											"end": 2772,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 2219,
											"end": 2772,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2219,
											"end": 2772,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2219,
											"end": 2772,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2219,
											"end": 2772,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2219,
											"end": 2772,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2219,
											"end": 2772,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2778,
											"end": 2838,
											"name": "tag",
											"source": 10,
											"value": "458"
										},
										{
											"begin": 2778,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2806,
											"end": 2809,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2827,
											"end": 2832,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2820,
											"end": 2832,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2820,
											"end": 2832,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2778,
											"end": 2838,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2778,
											"end": 2838,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2778,
											"end": 2838,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2778,
											"end": 2838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2844,
											"end": 2986,
											"name": "tag",
											"source": 10,
											"value": "459"
										},
										{
											"begin": 2844,
											"end": 2986,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2894,
											"end": 2903,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2927,
											"end": 2980,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "563"
										},
										{
											"begin": 2945,
											"end": 2979,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "564"
										},
										{
											"begin": 2954,
											"end": 2978,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "565"
										},
										{
											"begin": 2972,
											"end": 2977,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2954,
											"end": 2978,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "450"
										},
										{
											"begin": 2954,
											"end": 2978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2954,
											"end": 2978,
											"name": "tag",
											"source": 10,
											"value": "565"
										},
										{
											"begin": 2954,
											"end": 2978,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2945,
											"end": 2979,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "458"
										},
										{
											"begin": 2945,
											"end": 2979,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2945,
											"end": 2979,
											"name": "tag",
											"source": 10,
											"value": "564"
										},
										{
											"begin": 2945,
											"end": 2979,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2927,
											"end": 2980,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "450"
										},
										{
											"begin": 2927,
											"end": 2980,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2927,
											"end": 2980,
											"name": "tag",
											"source": 10,
											"value": "563"
										},
										{
											"begin": 2927,
											"end": 2980,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2914,
											"end": 2980,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2914,
											"end": 2980,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2844,
											"end": 2986,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2844,
											"end": 2986,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2844,
											"end": 2986,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2844,
											"end": 2986,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2992,
											"end": 3118,
											"name": "tag",
											"source": 10,
											"value": "460"
										},
										{
											"begin": 2992,
											"end": 3118,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3042,
											"end": 3051,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3075,
											"end": 3112,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "567"
										},
										{
											"begin": 3106,
											"end": 3111,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3075,
											"end": 3112,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "459"
										},
										{
											"begin": 3075,
											"end": 3112,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3075,
											"end": 3112,
											"name": "tag",
											"source": 10,
											"value": "567"
										},
										{
											"begin": 3075,
											"end": 3112,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3062,
											"end": 3112,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3062,
											"end": 3112,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2992,
											"end": 3118,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2992,
											"end": 3118,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2992,
											"end": 3118,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2992,
											"end": 3118,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3124,
											"end": 3268,
											"name": "tag",
											"source": 10,
											"value": "461"
										},
										{
											"begin": 3124,
											"end": 3268,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3192,
											"end": 3201,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3225,
											"end": 3262,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "569"
										},
										{
											"begin": 3256,
											"end": 3261,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3225,
											"end": 3262,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "460"
										},
										{
											"begin": 3225,
											"end": 3262,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3225,
											"end": 3262,
											"name": "tag",
											"source": 10,
											"value": "569"
										},
										{
											"begin": 3225,
											"end": 3262,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3212,
											"end": 3262,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3212,
											"end": 3262,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3124,
											"end": 3268,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3124,
											"end": 3268,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3124,
											"end": 3268,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3124,
											"end": 3268,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3274,
											"end": 3441,
											"name": "tag",
											"source": 10,
											"value": "462"
										},
										{
											"begin": 3274,
											"end": 3441,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3379,
											"end": 3434,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "571"
										},
										{
											"begin": 3428,
											"end": 3433,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3379,
											"end": 3434,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "461"
										},
										{
											"begin": 3379,
											"end": 3434,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3379,
											"end": 3434,
											"name": "tag",
											"source": 10,
											"value": "571"
										},
										{
											"begin": 3379,
											"end": 3434,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3374,
											"end": 3377,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3367,
											"end": 3435,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3274,
											"end": 3441,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3274,
											"end": 3441,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3274,
											"end": 3441,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3447,
											"end": 3705,
											"name": "tag",
											"source": 10,
											"value": "66"
										},
										{
											"begin": 3447,
											"end": 3705,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3558,
											"end": 3562,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3596,
											"end": 3598,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3585,
											"end": 3594,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3581,
											"end": 3599,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3573,
											"end": 3599,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3573,
											"end": 3599,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3609,
											"end": 3698,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "573"
										},
										{
											"begin": 3695,
											"end": 3696,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3684,
											"end": 3693,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3680,
											"end": 3697,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3671,
											"end": 3677,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3609,
											"end": 3698,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "462"
										},
										{
											"begin": 3609,
											"end": 3698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3609,
											"end": 3698,
											"name": "tag",
											"source": 10,
											"value": "573"
										},
										{
											"begin": 3609,
											"end": 3698,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3447,
											"end": 3705,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3447,
											"end": 3705,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3447,
											"end": 3705,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3447,
											"end": 3705,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3447,
											"end": 3705,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3711,
											"end": 3801,
											"name": "tag",
											"source": 10,
											"value": "463"
										},
										{
											"begin": 3711,
											"end": 3801,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3745,
											"end": 3752,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3788,
											"end": 3793,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3781,
											"end": 3794,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3774,
											"end": 3795,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3763,
											"end": 3795,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3763,
											"end": 3795,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3711,
											"end": 3801,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3711,
											"end": 3801,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3711,
											"end": 3801,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3711,
											"end": 3801,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3807,
											"end": 3916,
											"name": "tag",
											"source": 10,
											"value": "464"
										},
										{
											"begin": 3807,
											"end": 3916,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3888,
											"end": 3909,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "576"
										},
										{
											"begin": 3903,
											"end": 3908,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3888,
											"end": 3909,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "463"
										},
										{
											"begin": 3888,
											"end": 3909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3888,
											"end": 3909,
											"name": "tag",
											"source": 10,
											"value": "576"
										},
										{
											"begin": 3888,
											"end": 3909,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3883,
											"end": 3886,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3876,
											"end": 3910,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3807,
											"end": 3916,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3807,
											"end": 3916,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3807,
											"end": 3916,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3922,
											"end": 4132,
											"name": "tag",
											"source": 10,
											"value": "70"
										},
										{
											"begin": 3922,
											"end": 4132,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4009,
											"end": 4013,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4047,
											"end": 4049,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4036,
											"end": 4045,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4032,
											"end": 4050,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4024,
											"end": 4050,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4024,
											"end": 4050,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4060,
											"end": 4125,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "578"
										},
										{
											"begin": 4122,
											"end": 4123,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4111,
											"end": 4120,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4107,
											"end": 4124,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4098,
											"end": 4104,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4060,
											"end": 4125,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "464"
										},
										{
											"begin": 4060,
											"end": 4125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4060,
											"end": 4125,
											"name": "tag",
											"source": 10,
											"value": "578"
										},
										{
											"begin": 4060,
											"end": 4125,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3922,
											"end": 4132,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3922,
											"end": 4132,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3922,
											"end": 4132,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3922,
											"end": 4132,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3922,
											"end": 4132,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4138,
											"end": 4580,
											"name": "tag",
											"source": 10,
											"value": "78"
										},
										{
											"begin": 4138,
											"end": 4580,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4287,
											"end": 4291,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4325,
											"end": 4327,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 4314,
											"end": 4323,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4310,
											"end": 4328,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4302,
											"end": 4328,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4302,
											"end": 4328,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4338,
											"end": 4409,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "580"
										},
										{
											"begin": 4406,
											"end": 4407,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4395,
											"end": 4404,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4391,
											"end": 4408,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4382,
											"end": 4388,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4338,
											"end": 4409,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "455"
										},
										{
											"begin": 4338,
											"end": 4409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4338,
											"end": 4409,
											"name": "tag",
											"source": 10,
											"value": "580"
										},
										{
											"begin": 4338,
											"end": 4409,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4419,
											"end": 4491,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "581"
										},
										{
											"begin": 4487,
											"end": 4489,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4476,
											"end": 4485,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4472,
											"end": 4490,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4463,
											"end": 4469,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4419,
											"end": 4491,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "455"
										},
										{
											"begin": 4419,
											"end": 4491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4419,
											"end": 4491,
											"name": "tag",
											"source": 10,
											"value": "581"
										},
										{
											"begin": 4419,
											"end": 4491,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4501,
											"end": 4573,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "582"
										},
										{
											"begin": 4569,
											"end": 4571,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4558,
											"end": 4567,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4554,
											"end": 4572,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4545,
											"end": 4551,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4501,
											"end": 4573,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "455"
										},
										{
											"begin": 4501,
											"end": 4573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4501,
											"end": 4573,
											"name": "tag",
											"source": 10,
											"value": "582"
										},
										{
											"begin": 4501,
											"end": 4573,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4138,
											"end": 4580,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 4138,
											"end": 4580,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 4138,
											"end": 4580,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4138,
											"end": 4580,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4138,
											"end": 4580,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4138,
											"end": 4580,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4138,
											"end": 4580,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4586,
											"end": 4702,
											"name": "tag",
											"source": 10,
											"value": "465"
										},
										{
											"begin": 4586,
											"end": 4702,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4656,
											"end": 4677,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "584"
										},
										{
											"begin": 4671,
											"end": 4676,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4656,
											"end": 4677,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "463"
										},
										{
											"begin": 4656,
											"end": 4677,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4656,
											"end": 4677,
											"name": "tag",
											"source": 10,
											"value": "584"
										},
										{
											"begin": 4656,
											"end": 4677,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4649,
											"end": 4654,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4646,
											"end": 4678,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 4636,
											"end": 4696,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "585"
										},
										{
											"begin": 4636,
											"end": 4696,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4692,
											"end": 4693,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4689,
											"end": 4690,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4682,
											"end": 4694,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4636,
											"end": 4696,
											"name": "tag",
											"source": 10,
											"value": "585"
										},
										{
											"begin": 4636,
											"end": 4696,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4586,
											"end": 4702,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4586,
											"end": 4702,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4708,
											"end": 4841,
											"name": "tag",
											"source": 10,
											"value": "466"
										},
										{
											"begin": 4708,
											"end": 4841,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4751,
											"end": 4756,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4789,
											"end": 4795,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4776,
											"end": 4796,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 4767,
											"end": 4796,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4767,
											"end": 4796,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4805,
											"end": 4835,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "587"
										},
										{
											"begin": 4829,
											"end": 4834,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4805,
											"end": 4835,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "465"
										},
										{
											"begin": 4805,
											"end": 4835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4805,
											"end": 4835,
											"name": "tag",
											"source": 10,
											"value": "587"
										},
										{
											"begin": 4805,
											"end": 4835,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4708,
											"end": 4841,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4708,
											"end": 4841,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4708,
											"end": 4841,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4708,
											"end": 4841,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4708,
											"end": 4841,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4847,
											"end": 5170,
											"name": "tag",
											"source": 10,
											"value": "81"
										},
										{
											"begin": 4847,
											"end": 5170,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4903,
											"end": 4909,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4952,
											"end": 4954,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4940,
											"end": 4949,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4931,
											"end": 4938,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4927,
											"end": 4950,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4923,
											"end": 4955,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 4920,
											"end": 5039,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4920,
											"end": 5039,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "589"
										},
										{
											"begin": 4920,
											"end": 5039,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4958,
											"end": 5037,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "590"
										},
										{
											"begin": 4958,
											"end": 5037,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "448"
										},
										{
											"begin": 4958,
											"end": 5037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4958,
											"end": 5037,
											"name": "tag",
											"source": 10,
											"value": "590"
										},
										{
											"begin": 4958,
											"end": 5037,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4920,
											"end": 5039,
											"name": "tag",
											"source": 10,
											"value": "589"
										},
										{
											"begin": 4920,
											"end": 5039,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5078,
											"end": 5079,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5103,
											"end": 5153,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "591"
										},
										{
											"begin": 5145,
											"end": 5152,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5136,
											"end": 5142,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5125,
											"end": 5134,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5121,
											"end": 5143,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5103,
											"end": 5153,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "466"
										},
										{
											"begin": 5103,
											"end": 5153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5103,
											"end": 5153,
											"name": "tag",
											"source": 10,
											"value": "591"
										},
										{
											"begin": 5103,
											"end": 5153,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5093,
											"end": 5153,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5093,
											"end": 5153,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5049,
											"end": 5163,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4847,
											"end": 5170,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4847,
											"end": 5170,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4847,
											"end": 5170,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4847,
											"end": 5170,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4847,
											"end": 5170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5176,
											"end": 5650,
											"name": "tag",
											"source": 10,
											"value": "91"
										},
										{
											"begin": 5176,
											"end": 5650,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5244,
											"end": 5250,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5252,
											"end": 5258,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5301,
											"end": 5303,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5289,
											"end": 5298,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5280,
											"end": 5287,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5276,
											"end": 5299,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5272,
											"end": 5304,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 5269,
											"end": 5388,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5269,
											"end": 5388,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "593"
										},
										{
											"begin": 5269,
											"end": 5388,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5307,
											"end": 5386,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "594"
										},
										{
											"begin": 5307,
											"end": 5386,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "448"
										},
										{
											"begin": 5307,
											"end": 5386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5307,
											"end": 5386,
											"name": "tag",
											"source": 10,
											"value": "594"
										},
										{
											"begin": 5307,
											"end": 5386,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5269,
											"end": 5388,
											"name": "tag",
											"source": 10,
											"value": "593"
										},
										{
											"begin": 5269,
											"end": 5388,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5427,
											"end": 5428,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5452,
											"end": 5505,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "595"
										},
										{
											"begin": 5497,
											"end": 5504,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5488,
											"end": 5494,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5477,
											"end": 5486,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 5473,
											"end": 5495,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5452,
											"end": 5505,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "453"
										},
										{
											"begin": 5452,
											"end": 5505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5452,
											"end": 5505,
											"name": "tag",
											"source": 10,
											"value": "595"
										},
										{
											"begin": 5452,
											"end": 5505,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5442,
											"end": 5505,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5442,
											"end": 5505,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5398,
											"end": 5515,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5554,
											"end": 5556,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5580,
											"end": 5633,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "596"
										},
										{
											"begin": 5625,
											"end": 5632,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5616,
											"end": 5622,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5605,
											"end": 5614,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 5601,
											"end": 5623,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5580,
											"end": 5633,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "457"
										},
										{
											"begin": 5580,
											"end": 5633,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5580,
											"end": 5633,
											"name": "tag",
											"source": 10,
											"value": "596"
										},
										{
											"begin": 5580,
											"end": 5633,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5570,
											"end": 5633,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5570,
											"end": 5633,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5525,
											"end": 5643,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5176,
											"end": 5650,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5176,
											"end": 5650,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5176,
											"end": 5650,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5176,
											"end": 5650,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5176,
											"end": 5650,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5176,
											"end": 5650,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5656,
											"end": 5774,
											"name": "tag",
											"source": 10,
											"value": "467"
										},
										{
											"begin": 5656,
											"end": 5774,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5743,
											"end": 5767,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "598"
										},
										{
											"begin": 5761,
											"end": 5766,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5743,
											"end": 5767,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "451"
										},
										{
											"begin": 5743,
											"end": 5767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5743,
											"end": 5767,
											"name": "tag",
											"source": 10,
											"value": "598"
										},
										{
											"begin": 5743,
											"end": 5767,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5738,
											"end": 5741,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5731,
											"end": 5768,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5656,
											"end": 5774,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5656,
											"end": 5774,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5656,
											"end": 5774,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5780,
											"end": 6002,
											"name": "tag",
											"source": 10,
											"value": "96"
										},
										{
											"begin": 5780,
											"end": 6002,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5873,
											"end": 5877,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5911,
											"end": 5913,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5900,
											"end": 5909,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5896,
											"end": 5914,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5888,
											"end": 5914,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5888,
											"end": 5914,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5924,
											"end": 5995,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "600"
										},
										{
											"begin": 5992,
											"end": 5993,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5981,
											"end": 5990,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5977,
											"end": 5994,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5968,
											"end": 5974,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5924,
											"end": 5995,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "467"
										},
										{
											"begin": 5924,
											"end": 5995,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5924,
											"end": 5995,
											"name": "tag",
											"source": 10,
											"value": "600"
										},
										{
											"begin": 5924,
											"end": 5995,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5780,
											"end": 6002,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5780,
											"end": 6002,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5780,
											"end": 6002,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5780,
											"end": 6002,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5780,
											"end": 6002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6008,
											"end": 6122,
											"name": "tag",
											"source": 10,
											"value": "468"
										},
										{
											"begin": 6008,
											"end": 6122,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6063,
											"end": 6070,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6092,
											"end": 6116,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "602"
										},
										{
											"begin": 6110,
											"end": 6115,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6092,
											"end": 6116,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "451"
										},
										{
											"begin": 6092,
											"end": 6116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6092,
											"end": 6116,
											"name": "tag",
											"source": 10,
											"value": "602"
										},
										{
											"begin": 6092,
											"end": 6116,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6081,
											"end": 6116,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6081,
											"end": 6116,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6008,
											"end": 6122,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6008,
											"end": 6122,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6008,
											"end": 6122,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6008,
											"end": 6122,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6128,
											"end": 6286,
											"name": "tag",
											"source": 10,
											"value": "469"
										},
										{
											"begin": 6128,
											"end": 6286,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6219,
											"end": 6261,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "604"
										},
										{
											"begin": 6255,
											"end": 6260,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6219,
											"end": 6261,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "468"
										},
										{
											"begin": 6219,
											"end": 6261,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6219,
											"end": 6261,
											"name": "tag",
											"source": 10,
											"value": "604"
										},
										{
											"begin": 6219,
											"end": 6261,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6212,
											"end": 6217,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6209,
											"end": 6262,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 6199,
											"end": 6280,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "605"
										},
										{
											"begin": 6199,
											"end": 6280,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6276,
											"end": 6277,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6273,
											"end": 6274,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6266,
											"end": 6278,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 6199,
											"end": 6280,
											"name": "tag",
											"source": 10,
											"value": "605"
										},
										{
											"begin": 6199,
											"end": 6280,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6128,
											"end": 6286,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6128,
											"end": 6286,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6292,
											"end": 6467,
											"name": "tag",
											"source": 10,
											"value": "470"
										},
										{
											"begin": 6292,
											"end": 6467,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6356,
											"end": 6361,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6394,
											"end": 6400,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6381,
											"end": 6401,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 6372,
											"end": 6401,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6372,
											"end": 6401,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6410,
											"end": 6461,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "607"
										},
										{
											"begin": 6455,
											"end": 6460,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6410,
											"end": 6461,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "469"
										},
										{
											"begin": 6410,
											"end": 6461,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6410,
											"end": 6461,
											"name": "tag",
											"source": 10,
											"value": "607"
										},
										{
											"begin": 6410,
											"end": 6461,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6292,
											"end": 6467,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6292,
											"end": 6467,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6292,
											"end": 6467,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6292,
											"end": 6467,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6292,
											"end": 6467,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6473,
											"end": 7858,
											"name": "tag",
											"source": 10,
											"value": "136"
										},
										{
											"begin": 6473,
											"end": 7858,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6613,
											"end": 6619,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6621,
											"end": 6627,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6629,
											"end": 6635,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6637,
											"end": 6643,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6645,
											"end": 6651,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6653,
											"end": 6659,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6661,
											"end": 6667,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6669,
											"end": 6675,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6718,
											"end": 6721,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 6706,
											"end": 6715,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 6697,
											"end": 6704,
											"name": "DUP12",
											"source": 10
										},
										{
											"begin": 6693,
											"end": 6716,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6689,
											"end": 6722,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 6686,
											"end": 6806,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6686,
											"end": 6806,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "609"
										},
										{
											"begin": 6686,
											"end": 6806,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6725,
											"end": 6804,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "610"
										},
										{
											"begin": 6725,
											"end": 6804,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "448"
										},
										{
											"begin": 6725,
											"end": 6804,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6725,
											"end": 6804,
											"name": "tag",
											"source": 10,
											"value": "610"
										},
										{
											"begin": 6725,
											"end": 6804,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6686,
											"end": 6806,
											"name": "tag",
											"source": 10,
											"value": "609"
										},
										{
											"begin": 6686,
											"end": 6806,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6845,
											"end": 6846,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6870,
											"end": 6941,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "611"
										},
										{
											"begin": 6933,
											"end": 6940,
											"name": "DUP12",
											"source": 10
										},
										{
											"begin": 6924,
											"end": 6930,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6913,
											"end": 6922,
											"name": "DUP13",
											"source": 10
										},
										{
											"begin": 6909,
											"end": 6931,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6870,
											"end": 6941,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "470"
										},
										{
											"begin": 6870,
											"end": 6941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6870,
											"end": 6941,
											"name": "tag",
											"source": 10,
											"value": "611"
										},
										{
											"begin": 6870,
											"end": 6941,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6860,
											"end": 6941,
											"name": "SWAP9",
											"source": 10
										},
										{
											"begin": 6860,
											"end": 6941,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6816,
											"end": 6951,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6990,
											"end": 6992,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7016,
											"end": 7069,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "612"
										},
										{
											"begin": 7061,
											"end": 7068,
											"name": "DUP12",
											"source": 10
										},
										{
											"begin": 7052,
											"end": 7058,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7041,
											"end": 7050,
											"name": "DUP13",
											"source": 10
										},
										{
											"begin": 7037,
											"end": 7059,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7016,
											"end": 7069,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "457"
										},
										{
											"begin": 7016,
											"end": 7069,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7016,
											"end": 7069,
											"name": "tag",
											"source": 10,
											"value": "612"
										},
										{
											"begin": 7016,
											"end": 7069,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7006,
											"end": 7069,
											"name": "SWAP8",
											"source": 10
										},
										{
											"begin": 7006,
											"end": 7069,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6961,
											"end": 7079,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7118,
											"end": 7120,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7144,
											"end": 7197,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "613"
										},
										{
											"begin": 7189,
											"end": 7196,
											"name": "DUP12",
											"source": 10
										},
										{
											"begin": 7180,
											"end": 7186,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7169,
											"end": 7178,
											"name": "DUP13",
											"source": 10
										},
										{
											"begin": 7165,
											"end": 7187,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7144,
											"end": 7197,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "457"
										},
										{
											"begin": 7144,
											"end": 7197,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7144,
											"end": 7197,
											"name": "tag",
											"source": 10,
											"value": "613"
										},
										{
											"begin": 7144,
											"end": 7197,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7134,
											"end": 7197,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": 7134,
											"end": 7197,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7089,
											"end": 7207,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7246,
											"end": 7248,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 7272,
											"end": 7325,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "614"
										},
										{
											"begin": 7317,
											"end": 7324,
											"name": "DUP12",
											"source": 10
										},
										{
											"begin": 7308,
											"end": 7314,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7297,
											"end": 7306,
											"name": "DUP13",
											"source": 10
										},
										{
											"begin": 7293,
											"end": 7315,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7272,
											"end": 7325,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "457"
										},
										{
											"begin": 7272,
											"end": 7325,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7272,
											"end": 7325,
											"name": "tag",
											"source": 10,
											"value": "614"
										},
										{
											"begin": 7272,
											"end": 7325,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7262,
											"end": 7325,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 7262,
											"end": 7325,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7217,
											"end": 7335,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7374,
											"end": 7377,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 7401,
											"end": 7454,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "615"
										},
										{
											"begin": 7446,
											"end": 7453,
											"name": "DUP12",
											"source": 10
										},
										{
											"begin": 7437,
											"end": 7443,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7426,
											"end": 7435,
											"name": "DUP13",
											"source": 10
										},
										{
											"begin": 7422,
											"end": 7444,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7401,
											"end": 7454,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "457"
										},
										{
											"begin": 7401,
											"end": 7454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7401,
											"end": 7454,
											"name": "tag",
											"source": 10,
											"value": "615"
										},
										{
											"begin": 7401,
											"end": 7454,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7391,
											"end": 7454,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 7391,
											"end": 7454,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7345,
											"end": 7464,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7503,
											"end": 7506,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 7530,
											"end": 7583,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "616"
										},
										{
											"begin": 7575,
											"end": 7582,
											"name": "DUP12",
											"source": 10
										},
										{
											"begin": 7566,
											"end": 7572,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7555,
											"end": 7564,
											"name": "DUP13",
											"source": 10
										},
										{
											"begin": 7551,
											"end": 7573,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7530,
											"end": 7583,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "457"
										},
										{
											"begin": 7530,
											"end": 7583,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7530,
											"end": 7583,
											"name": "tag",
											"source": 10,
											"value": "616"
										},
										{
											"begin": 7530,
											"end": 7583,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7520,
											"end": 7583,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 7520,
											"end": 7583,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7474,
											"end": 7593,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7632,
											"end": 7635,
											"name": "PUSH",
											"source": 10,
											"value": "C0"
										},
										{
											"begin": 7659,
											"end": 7712,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "617"
										},
										{
											"begin": 7704,
											"end": 7711,
											"name": "DUP12",
											"source": 10
										},
										{
											"begin": 7695,
											"end": 7701,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7684,
											"end": 7693,
											"name": "DUP13",
											"source": 10
										},
										{
											"begin": 7680,
											"end": 7702,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7659,
											"end": 7712,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "457"
										},
										{
											"begin": 7659,
											"end": 7712,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7659,
											"end": 7712,
											"name": "tag",
											"source": 10,
											"value": "617"
										},
										{
											"begin": 7659,
											"end": 7712,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7649,
											"end": 7712,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7649,
											"end": 7712,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7603,
											"end": 7722,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7761,
											"end": 7764,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 7788,
											"end": 7841,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "618"
										},
										{
											"begin": 7833,
											"end": 7840,
											"name": "DUP12",
											"source": 10
										},
										{
											"begin": 7824,
											"end": 7830,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7813,
											"end": 7822,
											"name": "DUP13",
											"source": 10
										},
										{
											"begin": 7809,
											"end": 7831,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7788,
											"end": 7841,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "453"
										},
										{
											"begin": 7788,
											"end": 7841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7788,
											"end": 7841,
											"name": "tag",
											"source": 10,
											"value": "618"
										},
										{
											"begin": 7788,
											"end": 7841,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7778,
											"end": 7841,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7778,
											"end": 7841,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7732,
											"end": 7851,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6473,
											"end": 7858,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6473,
											"end": 7858,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 6473,
											"end": 7858,
											"name": "SWAP9",
											"source": 10
										},
										{
											"begin": 6473,
											"end": 7858,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6473,
											"end": 7858,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6473,
											"end": 7858,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 6473,
											"end": 7858,
											"name": "SWAP9",
											"source": 10
										},
										{
											"begin": 6473,
											"end": 7858,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6473,
											"end": 7858,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 6473,
											"end": 7858,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": 6473,
											"end": 7858,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6473,
											"end": 7858,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7864,
											"end": 7981,
											"name": "tag",
											"source": 10,
											"value": "471"
										},
										{
											"begin": 7864,
											"end": 7981,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7973,
											"end": 7974,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7970,
											"end": 7971,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7963,
											"end": 7975,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7987,
											"end": 8104,
											"name": "tag",
											"source": 10,
											"value": "472"
										},
										{
											"begin": 7987,
											"end": 8104,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8096,
											"end": 8097,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8093,
											"end": 8094,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8086,
											"end": 8098,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 8110,
											"end": 8212,
											"name": "tag",
											"source": 10,
											"value": "473"
										},
										{
											"begin": 8110,
											"end": 8212,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8151,
											"end": 8157,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8202,
											"end": 8204,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 8198,
											"end": 8205,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 8193,
											"end": 8195,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 8186,
											"end": 8191,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8182,
											"end": 8196,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8178,
											"end": 8206,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8168,
											"end": 8206,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8168,
											"end": 8206,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8110,
											"end": 8212,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8110,
											"end": 8212,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8110,
											"end": 8212,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8110,
											"end": 8212,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8218,
											"end": 8398,
											"name": "tag",
											"source": 10,
											"value": "474"
										},
										{
											"begin": 8218,
											"end": 8398,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8266,
											"end": 8343,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8263,
											"end": 8264,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8256,
											"end": 8344,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8363,
											"end": 8367,
											"name": "PUSH",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 8360,
											"end": 8361,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 8353,
											"end": 8368,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8387,
											"end": 8391,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 8384,
											"end": 8385,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8377,
											"end": 8392,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 8404,
											"end": 8685,
											"name": "tag",
											"source": 10,
											"value": "475"
										},
										{
											"begin": 8404,
											"end": 8685,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8487,
											"end": 8514,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "624"
										},
										{
											"begin": 8509,
											"end": 8513,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8487,
											"end": 8514,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "473"
										},
										{
											"begin": 8487,
											"end": 8514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8487,
											"end": 8514,
											"name": "tag",
											"source": 10,
											"value": "624"
										},
										{
											"begin": 8487,
											"end": 8514,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8479,
											"end": 8485,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8475,
											"end": 8515,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8617,
											"end": 8623,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8605,
											"end": 8615,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8602,
											"end": 8624,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 8581,
											"end": 8599,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8569,
											"end": 8579,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8566,
											"end": 8600,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 8563,
											"end": 8625,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 8560,
											"end": 8648,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8560,
											"end": 8648,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "625"
										},
										{
											"begin": 8560,
											"end": 8648,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8628,
											"end": 8646,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "626"
										},
										{
											"begin": 8628,
											"end": 8646,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "474"
										},
										{
											"begin": 8628,
											"end": 8646,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8628,
											"end": 8646,
											"name": "tag",
											"source": 10,
											"value": "626"
										},
										{
											"begin": 8628,
											"end": 8646,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8560,
											"end": 8648,
											"name": "tag",
											"source": 10,
											"value": "625"
										},
										{
											"begin": 8560,
											"end": 8648,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8668,
											"end": 8678,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8664,
											"end": 8666,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8657,
											"end": 8679,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8447,
											"end": 8685,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8404,
											"end": 8685,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8404,
											"end": 8685,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8404,
											"end": 8685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8691,
											"end": 8820,
											"name": "tag",
											"source": 10,
											"value": "476"
										},
										{
											"begin": 8691,
											"end": 8820,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8725,
											"end": 8731,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8752,
											"end": 8772,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "628"
										},
										{
											"begin": 8752,
											"end": 8772,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "447"
										},
										{
											"begin": 8752,
											"end": 8772,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8752,
											"end": 8772,
											"name": "tag",
											"source": 10,
											"value": "628"
										},
										{
											"begin": 8752,
											"end": 8772,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8742,
											"end": 8772,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8742,
											"end": 8772,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8781,
											"end": 8814,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "629"
										},
										{
											"begin": 8809,
											"end": 8813,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8801,
											"end": 8807,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8781,
											"end": 8814,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "475"
										},
										{
											"begin": 8781,
											"end": 8814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8781,
											"end": 8814,
											"name": "tag",
											"source": 10,
											"value": "629"
										},
										{
											"begin": 8781,
											"end": 8814,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8691,
											"end": 8820,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8691,
											"end": 8820,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8691,
											"end": 8820,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8691,
											"end": 8820,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8826,
											"end": 9133,
											"name": "tag",
											"source": 10,
											"value": "477"
										},
										{
											"begin": 8826,
											"end": 9133,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8887,
											"end": 8891,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8977,
											"end": 8995,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8969,
											"end": 8975,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8966,
											"end": 8996,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 8963,
											"end": 9019,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8963,
											"end": 9019,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "631"
										},
										{
											"begin": 8963,
											"end": 9019,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8999,
											"end": 9017,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "632"
										},
										{
											"begin": 8999,
											"end": 9017,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "474"
										},
										{
											"begin": 8999,
											"end": 9017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8999,
											"end": 9017,
											"name": "tag",
											"source": 10,
											"value": "632"
										},
										{
											"begin": 8999,
											"end": 9017,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8963,
											"end": 9019,
											"name": "tag",
											"source": 10,
											"value": "631"
										},
										{
											"begin": 8963,
											"end": 9019,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9037,
											"end": 9066,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "633"
										},
										{
											"begin": 9059,
											"end": 9065,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9037,
											"end": 9066,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "473"
										},
										{
											"begin": 9037,
											"end": 9066,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9037,
											"end": 9066,
											"name": "tag",
											"source": 10,
											"value": "633"
										},
										{
											"begin": 9037,
											"end": 9066,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9029,
											"end": 9066,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9029,
											"end": 9066,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9121,
											"end": 9125,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9115,
											"end": 9119,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9111,
											"end": 9126,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9103,
											"end": 9126,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9103,
											"end": 9126,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8826,
											"end": 9133,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8826,
											"end": 9133,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8826,
											"end": 9133,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8826,
											"end": 9133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9139,
											"end": 9287,
											"name": "tag",
											"source": 10,
											"value": "478"
										},
										{
											"begin": 9139,
											"end": 9287,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9237,
											"end": 9243,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9232,
											"end": 9235,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9227,
											"end": 9230,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9214,
											"end": 9244,
											"name": "CALLDATACOPY",
											"source": 10
										},
										{
											"begin": 9278,
											"end": 9279,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9269,
											"end": 9275,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9264,
											"end": 9267,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9260,
											"end": 9276,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9253,
											"end": 9280,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9139,
											"end": 9287,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9139,
											"end": 9287,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9139,
											"end": 9287,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9139,
											"end": 9287,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9293,
											"end": 9716,
											"name": "tag",
											"source": 10,
											"value": "479"
										},
										{
											"begin": 9293,
											"end": 9716,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9370,
											"end": 9375,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9395,
											"end": 9460,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "636"
										},
										{
											"begin": 9411,
											"end": 9459,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "637"
										},
										{
											"begin": 9452,
											"end": 9458,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 9411,
											"end": 9459,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "477"
										},
										{
											"begin": 9411,
											"end": 9459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9411,
											"end": 9459,
											"name": "tag",
											"source": 10,
											"value": "637"
										},
										{
											"begin": 9411,
											"end": 9459,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9395,
											"end": 9460,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "476"
										},
										{
											"begin": 9395,
											"end": 9460,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9395,
											"end": 9460,
											"name": "tag",
											"source": 10,
											"value": "636"
										},
										{
											"begin": 9395,
											"end": 9460,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9386,
											"end": 9460,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9386,
											"end": 9460,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9483,
											"end": 9489,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9476,
											"end": 9481,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9469,
											"end": 9490,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9521,
											"end": 9525,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9514,
											"end": 9519,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9510,
											"end": 9526,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9559,
											"end": 9562,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 9550,
											"end": 9556,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 9545,
											"end": 9548,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 9541,
											"end": 9557,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9538,
											"end": 9563,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 9535,
											"end": 9647,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 9535,
											"end": 9647,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "638"
										},
										{
											"begin": 9535,
											"end": 9647,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 9566,
											"end": 9645,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "639"
										},
										{
											"begin": 9566,
											"end": 9645,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "472"
										},
										{
											"begin": 9566,
											"end": 9645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9566,
											"end": 9645,
											"name": "tag",
											"source": 10,
											"value": "639"
										},
										{
											"begin": 9566,
											"end": 9645,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9535,
											"end": 9647,
											"name": "tag",
											"source": 10,
											"value": "638"
										},
										{
											"begin": 9535,
											"end": 9647,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9656,
											"end": 9710,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "640"
										},
										{
											"begin": 9703,
											"end": 9709,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 9698,
											"end": 9701,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9693,
											"end": 9696,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 9656,
											"end": 9710,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "478"
										},
										{
											"begin": 9656,
											"end": 9710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9656,
											"end": 9710,
											"name": "tag",
											"source": 10,
											"value": "640"
										},
										{
											"begin": 9656,
											"end": 9710,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9376,
											"end": 9716,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9293,
											"end": 9716,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 9293,
											"end": 9716,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9293,
											"end": 9716,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9293,
											"end": 9716,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9293,
											"end": 9716,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9293,
											"end": 9716,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9735,
											"end": 10073,
											"name": "tag",
											"source": 10,
											"value": "480"
										},
										{
											"begin": 9735,
											"end": 10073,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9790,
											"end": 9795,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9839,
											"end": 9842,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9832,
											"end": 9836,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 9824,
											"end": 9830,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9820,
											"end": 9837,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9816,
											"end": 9843,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 9806,
											"end": 9928,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "642"
										},
										{
											"begin": 9806,
											"end": 9928,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 9847,
											"end": 9926,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "643"
										},
										{
											"begin": 9847,
											"end": 9926,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "471"
										},
										{
											"begin": 9847,
											"end": 9926,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9847,
											"end": 9926,
											"name": "tag",
											"source": 10,
											"value": "643"
										},
										{
											"begin": 9847,
											"end": 9926,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9806,
											"end": 9928,
											"name": "tag",
											"source": 10,
											"value": "642"
										},
										{
											"begin": 9806,
											"end": 9928,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9964,
											"end": 9970,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9951,
											"end": 9971,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 9989,
											"end": 10067,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "644"
										},
										{
											"begin": 10063,
											"end": 10066,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 10055,
											"end": 10061,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10048,
											"end": 10052,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10040,
											"end": 10046,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 10036,
											"end": 10053,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9989,
											"end": 10067,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "479"
										},
										{
											"begin": 9989,
											"end": 10067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9989,
											"end": 10067,
											"name": "tag",
											"source": 10,
											"value": "644"
										},
										{
											"begin": 9989,
											"end": 10067,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9980,
											"end": 10067,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9980,
											"end": 10067,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9796,
											"end": 10073,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9735,
											"end": 10073,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9735,
											"end": 10073,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9735,
											"end": 10073,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9735,
											"end": 10073,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9735,
											"end": 10073,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10079,
											"end": 10731,
											"name": "tag",
											"source": 10,
											"value": "158"
										},
										{
											"begin": 10079,
											"end": 10731,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10156,
											"end": 10162,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10164,
											"end": 10170,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10213,
											"end": 10215,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10201,
											"end": 10210,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10192,
											"end": 10199,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 10188,
											"end": 10211,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 10184,
											"end": 10216,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 10181,
											"end": 10300,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 10181,
											"end": 10300,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "646"
										},
										{
											"begin": 10181,
											"end": 10300,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10219,
											"end": 10298,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "647"
										},
										{
											"begin": 10219,
											"end": 10298,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "448"
										},
										{
											"begin": 10219,
											"end": 10298,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10219,
											"end": 10298,
											"name": "tag",
											"source": 10,
											"value": "647"
										},
										{
											"begin": 10219,
											"end": 10298,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10181,
											"end": 10300,
											"name": "tag",
											"source": 10,
											"value": "646"
										},
										{
											"begin": 10181,
											"end": 10300,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10339,
											"end": 10340,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10364,
											"end": 10417,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "648"
										},
										{
											"begin": 10409,
											"end": 10416,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 10400,
											"end": 10406,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10389,
											"end": 10398,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 10385,
											"end": 10407,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10364,
											"end": 10417,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "457"
										},
										{
											"begin": 10364,
											"end": 10417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10364,
											"end": 10417,
											"name": "tag",
											"source": 10,
											"value": "648"
										},
										{
											"begin": 10364,
											"end": 10417,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10354,
											"end": 10417,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 10354,
											"end": 10417,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10310,
											"end": 10427,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10494,
											"end": 10496,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10483,
											"end": 10492,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10479,
											"end": 10497,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10466,
											"end": 10498,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 10525,
											"end": 10543,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10517,
											"end": 10523,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10514,
											"end": 10544,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 10511,
											"end": 10628,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 10511,
											"end": 10628,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "649"
										},
										{
											"begin": 10511,
											"end": 10628,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10547,
											"end": 10626,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "650"
										},
										{
											"begin": 10547,
											"end": 10626,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "449"
										},
										{
											"begin": 10547,
											"end": 10626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10547,
											"end": 10626,
											"name": "tag",
											"source": 10,
											"value": "650"
										},
										{
											"begin": 10547,
											"end": 10626,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10511,
											"end": 10628,
											"name": "tag",
											"source": 10,
											"value": "649"
										},
										{
											"begin": 10511,
											"end": 10628,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10652,
											"end": 10714,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "651"
										},
										{
											"begin": 10706,
											"end": 10713,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 10697,
											"end": 10703,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10686,
											"end": 10695,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 10682,
											"end": 10704,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10652,
											"end": 10714,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "480"
										},
										{
											"begin": 10652,
											"end": 10714,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10652,
											"end": 10714,
											"name": "tag",
											"source": 10,
											"value": "651"
										},
										{
											"begin": 10652,
											"end": 10714,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10642,
											"end": 10714,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10642,
											"end": 10714,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10437,
											"end": 10724,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10079,
											"end": 10731,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 10079,
											"end": 10731,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10079,
											"end": 10731,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 10079,
											"end": 10731,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10079,
											"end": 10731,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10079,
											"end": 10731,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10737,
											"end": 11205,
											"name": "tag",
											"source": 10,
											"value": "162"
										},
										{
											"begin": 10737,
											"end": 11205,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10802,
											"end": 10808,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10810,
											"end": 10816,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10859,
											"end": 10861,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10847,
											"end": 10856,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10838,
											"end": 10845,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 10834,
											"end": 10857,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 10830,
											"end": 10862,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 10827,
											"end": 10946,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 10827,
											"end": 10946,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "653"
										},
										{
											"begin": 10827,
											"end": 10946,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10865,
											"end": 10944,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "654"
										},
										{
											"begin": 10865,
											"end": 10944,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "448"
										},
										{
											"begin": 10865,
											"end": 10944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10865,
											"end": 10944,
											"name": "tag",
											"source": 10,
											"value": "654"
										},
										{
											"begin": 10865,
											"end": 10944,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10827,
											"end": 10946,
											"name": "tag",
											"source": 10,
											"value": "653"
										},
										{
											"begin": 10827,
											"end": 10946,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10985,
											"end": 10986,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11010,
											"end": 11063,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "655"
										},
										{
											"begin": 11055,
											"end": 11062,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 11046,
											"end": 11052,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11035,
											"end": 11044,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 11031,
											"end": 11053,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11010,
											"end": 11063,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "457"
										},
										{
											"begin": 11010,
											"end": 11063,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11010,
											"end": 11063,
											"name": "tag",
											"source": 10,
											"value": "655"
										},
										{
											"begin": 11010,
											"end": 11063,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11000,
											"end": 11063,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 11000,
											"end": 11063,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10956,
											"end": 11073,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11112,
											"end": 11114,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11138,
											"end": 11188,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "656"
										},
										{
											"begin": 11180,
											"end": 11187,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 11171,
											"end": 11177,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11160,
											"end": 11169,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 11156,
											"end": 11178,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11138,
											"end": 11188,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "466"
										},
										{
											"begin": 11138,
											"end": 11188,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11138,
											"end": 11188,
											"name": "tag",
											"source": 10,
											"value": "656"
										},
										{
											"begin": 11138,
											"end": 11188,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11128,
											"end": 11188,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11128,
											"end": 11188,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11083,
											"end": 11198,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10737,
											"end": 11205,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 10737,
											"end": 11205,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10737,
											"end": 11205,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 10737,
											"end": 11205,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10737,
											"end": 11205,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10737,
											"end": 11205,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11211,
											"end": 11380,
											"name": "tag",
											"source": 10,
											"value": "481"
										},
										{
											"begin": 11211,
											"end": 11380,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11295,
											"end": 11306,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11329,
											"end": 11335,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11324,
											"end": 11327,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11317,
											"end": 11336,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11369,
											"end": 11373,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11364,
											"end": 11367,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11360,
											"end": 11374,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11345,
											"end": 11374,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11345,
											"end": 11374,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11211,
											"end": 11380,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 11211,
											"end": 11380,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11211,
											"end": 11380,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11211,
											"end": 11380,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11211,
											"end": 11380,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11386,
											"end": 11554,
											"name": "tag",
											"source": 10,
											"value": "482"
										},
										{
											"begin": 11386,
											"end": 11554,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11526,
											"end": 11546,
											"name": "PUSH",
											"source": 10,
											"value": "436F6E7472616374206973207061757365640000000000000000000000000000"
										},
										{
											"begin": 11522,
											"end": 11523,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11514,
											"end": 11520,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11510,
											"end": 11524,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11503,
											"end": 11547,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11386,
											"end": 11554,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11386,
											"end": 11554,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11560,
											"end": 11926,
											"name": "tag",
											"source": 10,
											"value": "483"
										},
										{
											"begin": 11560,
											"end": 11926,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11702,
											"end": 11705,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11723,
											"end": 11790,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "660"
										},
										{
											"begin": 11787,
											"end": 11789,
											"name": "PUSH",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 11782,
											"end": 11785,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11723,
											"end": 11790,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "481"
										},
										{
											"begin": 11723,
											"end": 11790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11723,
											"end": 11790,
											"name": "tag",
											"source": 10,
											"value": "660"
										},
										{
											"begin": 11723,
											"end": 11790,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11716,
											"end": 11790,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11716,
											"end": 11790,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11799,
											"end": 11892,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "661"
										},
										{
											"begin": 11888,
											"end": 11891,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11799,
											"end": 11892,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "482"
										},
										{
											"begin": 11799,
											"end": 11892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11799,
											"end": 11892,
											"name": "tag",
											"source": 10,
											"value": "661"
										},
										{
											"begin": 11799,
											"end": 11892,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11917,
											"end": 11919,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11912,
											"end": 11915,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11908,
											"end": 11920,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11901,
											"end": 11920,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11901,
											"end": 11920,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11560,
											"end": 11926,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11560,
											"end": 11926,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11560,
											"end": 11926,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11560,
											"end": 11926,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11932,
											"end": 12351,
											"name": "tag",
											"source": 10,
											"value": "186"
										},
										{
											"begin": 11932,
											"end": 12351,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12098,
											"end": 12102,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12136,
											"end": 12138,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12125,
											"end": 12134,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12121,
											"end": 12139,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12113,
											"end": 12139,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12113,
											"end": 12139,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12185,
											"end": 12194,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12179,
											"end": 12183,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12175,
											"end": 12195,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 12171,
											"end": 12172,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12160,
											"end": 12169,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12156,
											"end": 12173,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12149,
											"end": 12196,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12213,
											"end": 12344,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "663"
										},
										{
											"begin": 12339,
											"end": 12343,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12213,
											"end": 12344,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "483"
										},
										{
											"begin": 12213,
											"end": 12344,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12213,
											"end": 12344,
											"name": "tag",
											"source": 10,
											"value": "663"
										},
										{
											"begin": 12213,
											"end": 12344,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12205,
											"end": 12344,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12205,
											"end": 12344,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11932,
											"end": 12351,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11932,
											"end": 12351,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11932,
											"end": 12351,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11932,
											"end": 12351,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12357,
											"end": 12522,
											"name": "tag",
											"source": 10,
											"value": "484"
										},
										{
											"begin": 12357,
											"end": 12522,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12497,
											"end": 12514,
											"name": "PUSH",
											"source": 10,
											"value": "4E6F7420696E697469616C697A65640000000000000000000000000000000000"
										},
										{
											"begin": 12493,
											"end": 12494,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12485,
											"end": 12491,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12481,
											"end": 12495,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12474,
											"end": 12515,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12357,
											"end": 12522,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12357,
											"end": 12522,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12528,
											"end": 12894,
											"name": "tag",
											"source": 10,
											"value": "485"
										},
										{
											"begin": 12528,
											"end": 12894,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12670,
											"end": 12673,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12691,
											"end": 12758,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "666"
										},
										{
											"begin": 12755,
											"end": 12757,
											"name": "PUSH",
											"source": 10,
											"value": "F"
										},
										{
											"begin": 12750,
											"end": 12753,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12691,
											"end": 12758,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "481"
										},
										{
											"begin": 12691,
											"end": 12758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12691,
											"end": 12758,
											"name": "tag",
											"source": 10,
											"value": "666"
										},
										{
											"begin": 12691,
											"end": 12758,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12684,
											"end": 12758,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12684,
											"end": 12758,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12767,
											"end": 12860,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "667"
										},
										{
											"begin": 12856,
											"end": 12859,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12767,
											"end": 12860,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "484"
										},
										{
											"begin": 12767,
											"end": 12860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12767,
											"end": 12860,
											"name": "tag",
											"source": 10,
											"value": "667"
										},
										{
											"begin": 12767,
											"end": 12860,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12885,
											"end": 12887,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12880,
											"end": 12883,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12876,
											"end": 12888,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12869,
											"end": 12888,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12869,
											"end": 12888,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12528,
											"end": 12894,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12528,
											"end": 12894,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12528,
											"end": 12894,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12528,
											"end": 12894,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12900,
											"end": 13319,
											"name": "tag",
											"source": 10,
											"value": "193"
										},
										{
											"begin": 12900,
											"end": 13319,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13066,
											"end": 13070,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13104,
											"end": 13106,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13093,
											"end": 13102,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13089,
											"end": 13107,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13081,
											"end": 13107,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13081,
											"end": 13107,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13153,
											"end": 13162,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13147,
											"end": 13151,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13143,
											"end": 13163,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 13139,
											"end": 13140,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13128,
											"end": 13137,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13124,
											"end": 13141,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13117,
											"end": 13164,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13181,
											"end": 13312,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "669"
										},
										{
											"begin": 13307,
											"end": 13311,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13181,
											"end": 13312,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "485"
										},
										{
											"begin": 13181,
											"end": 13312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13181,
											"end": 13312,
											"name": "tag",
											"source": 10,
											"value": "669"
										},
										{
											"begin": 13181,
											"end": 13312,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13173,
											"end": 13312,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13173,
											"end": 13312,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12900,
											"end": 13319,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12900,
											"end": 13319,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12900,
											"end": 13319,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12900,
											"end": 13319,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13325,
											"end": 13767,
											"name": "tag",
											"source": 10,
											"value": "195"
										},
										{
											"begin": 13325,
											"end": 13767,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13474,
											"end": 13478,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13512,
											"end": 13514,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 13501,
											"end": 13510,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13497,
											"end": 13515,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13489,
											"end": 13515,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13489,
											"end": 13515,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13525,
											"end": 13596,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "671"
										},
										{
											"begin": 13593,
											"end": 13594,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13582,
											"end": 13591,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13578,
											"end": 13595,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13569,
											"end": 13575,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 13525,
											"end": 13596,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "467"
										},
										{
											"begin": 13525,
											"end": 13596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13525,
											"end": 13596,
											"name": "tag",
											"source": 10,
											"value": "671"
										},
										{
											"begin": 13525,
											"end": 13596,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13606,
											"end": 13678,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "672"
										},
										{
											"begin": 13674,
											"end": 13676,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13663,
											"end": 13672,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13659,
											"end": 13677,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13650,
											"end": 13656,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 13606,
											"end": 13678,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "467"
										},
										{
											"begin": 13606,
											"end": 13678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13606,
											"end": 13678,
											"name": "tag",
											"source": 10,
											"value": "672"
										},
										{
											"begin": 13606,
											"end": 13678,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13688,
											"end": 13760,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "673"
										},
										{
											"begin": 13756,
											"end": 13758,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 13745,
											"end": 13754,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13741,
											"end": 13759,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13732,
											"end": 13738,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 13688,
											"end": 13760,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "455"
										},
										{
											"begin": 13688,
											"end": 13760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13688,
											"end": 13760,
											"name": "tag",
											"source": 10,
											"value": "673"
										},
										{
											"begin": 13688,
											"end": 13760,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13325,
											"end": 13767,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 13325,
											"end": 13767,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 13325,
											"end": 13767,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13325,
											"end": 13767,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13325,
											"end": 13767,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13325,
											"end": 13767,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13325,
											"end": 13767,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13773,
											"end": 13910,
											"name": "tag",
											"source": 10,
											"value": "486"
										},
										{
											"begin": 13773,
											"end": 13910,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13827,
											"end": 13832,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13858,
											"end": 13864,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13852,
											"end": 13865,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 13843,
											"end": 13865,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13843,
											"end": 13865,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13874,
											"end": 13904,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "675"
										},
										{
											"begin": 13898,
											"end": 13903,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13874,
											"end": 13904,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "465"
										},
										{
											"begin": 13874,
											"end": 13904,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13874,
											"end": 13904,
											"name": "tag",
											"source": 10,
											"value": "675"
										},
										{
											"begin": 13874,
											"end": 13904,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13773,
											"end": 13910,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 13773,
											"end": 13910,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13773,
											"end": 13910,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13773,
											"end": 13910,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13773,
											"end": 13910,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13916,
											"end": 14261,
											"name": "tag",
											"source": 10,
											"value": "199"
										},
										{
											"begin": 13916,
											"end": 14261,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13983,
											"end": 13989,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14032,
											"end": 14034,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 14020,
											"end": 14029,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14011,
											"end": 14018,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 14007,
											"end": 14030,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 14003,
											"end": 14035,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 14000,
											"end": 14119,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 14000,
											"end": 14119,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "677"
										},
										{
											"begin": 14000,
											"end": 14119,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 14038,
											"end": 14117,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "678"
										},
										{
											"begin": 14038,
											"end": 14117,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "448"
										},
										{
											"begin": 14038,
											"end": 14117,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14038,
											"end": 14117,
											"name": "tag",
											"source": 10,
											"value": "678"
										},
										{
											"begin": 14038,
											"end": 14117,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14000,
											"end": 14119,
											"name": "tag",
											"source": 10,
											"value": "677"
										},
										{
											"begin": 14000,
											"end": 14119,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14158,
											"end": 14159,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14183,
											"end": 14244,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "679"
										},
										{
											"begin": 14236,
											"end": 14243,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 14227,
											"end": 14233,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14216,
											"end": 14225,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 14212,
											"end": 14234,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14183,
											"end": 14244,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "486"
										},
										{
											"begin": 14183,
											"end": 14244,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14183,
											"end": 14244,
											"name": "tag",
											"source": 10,
											"value": "679"
										},
										{
											"begin": 14183,
											"end": 14244,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14173,
											"end": 14244,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14173,
											"end": 14244,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14129,
											"end": 14254,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13916,
											"end": 14261,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 13916,
											"end": 14261,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13916,
											"end": 14261,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13916,
											"end": 14261,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13916,
											"end": 14261,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14267,
											"end": 14432,
											"name": "tag",
											"source": 10,
											"value": "487"
										},
										{
											"begin": 14267,
											"end": 14432,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14407,
											"end": 14424,
											"name": "PUSH",
											"source": 10,
											"value": "5472616E73666572206661696C65640000000000000000000000000000000000"
										},
										{
											"begin": 14403,
											"end": 14404,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14395,
											"end": 14401,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14391,
											"end": 14405,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14384,
											"end": 14425,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14267,
											"end": 14432,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14267,
											"end": 14432,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14438,
											"end": 14804,
											"name": "tag",
											"source": 10,
											"value": "488"
										},
										{
											"begin": 14438,
											"end": 14804,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14580,
											"end": 14583,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14601,
											"end": 14668,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "682"
										},
										{
											"begin": 14665,
											"end": 14667,
											"name": "PUSH",
											"source": 10,
											"value": "F"
										},
										{
											"begin": 14660,
											"end": 14663,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14601,
											"end": 14668,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "481"
										},
										{
											"begin": 14601,
											"end": 14668,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14601,
											"end": 14668,
											"name": "tag",
											"source": 10,
											"value": "682"
										},
										{
											"begin": 14601,
											"end": 14668,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14594,
											"end": 14668,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14594,
											"end": 14668,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14677,
											"end": 14770,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "683"
										},
										{
											"begin": 14766,
											"end": 14769,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14677,
											"end": 14770,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "487"
										},
										{
											"begin": 14677,
											"end": 14770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14677,
											"end": 14770,
											"name": "tag",
											"source": 10,
											"value": "683"
										},
										{
											"begin": 14677,
											"end": 14770,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14795,
											"end": 14797,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 14790,
											"end": 14793,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14786,
											"end": 14798,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14779,
											"end": 14798,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14779,
											"end": 14798,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14438,
											"end": 14804,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14438,
											"end": 14804,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14438,
											"end": 14804,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14438,
											"end": 14804,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14810,
											"end": 15229,
											"name": "tag",
											"source": 10,
											"value": "202"
										},
										{
											"begin": 14810,
											"end": 15229,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14976,
											"end": 14980,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15014,
											"end": 15016,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15003,
											"end": 15012,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14999,
											"end": 15017,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14991,
											"end": 15017,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14991,
											"end": 15017,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15063,
											"end": 15072,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15057,
											"end": 15061,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15053,
											"end": 15073,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 15049,
											"end": 15050,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15038,
											"end": 15047,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 15034,
											"end": 15051,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15027,
											"end": 15074,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15091,
											"end": 15222,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "685"
										},
										{
											"begin": 15217,
											"end": 15221,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15091,
											"end": 15222,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "488"
										},
										{
											"begin": 15091,
											"end": 15222,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15091,
											"end": 15222,
											"name": "tag",
											"source": 10,
											"value": "685"
										},
										{
											"begin": 15091,
											"end": 15222,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15083,
											"end": 15222,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15083,
											"end": 15222,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14810,
											"end": 15229,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14810,
											"end": 15229,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14810,
											"end": 15229,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14810,
											"end": 15229,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15235,
											"end": 15415,
											"name": "tag",
											"source": 10,
											"value": "489"
										},
										{
											"begin": 15235,
											"end": 15415,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15283,
											"end": 15360,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15280,
											"end": 15281,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15273,
											"end": 15361,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15380,
											"end": 15384,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 15377,
											"end": 15378,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 15370,
											"end": 15385,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15404,
											"end": 15408,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 15401,
											"end": 15402,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15394,
											"end": 15409,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 15421,
											"end": 15612,
											"name": "tag",
											"source": 10,
											"value": "206"
										},
										{
											"begin": 15421,
											"end": 15612,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15461,
											"end": 15464,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15480,
											"end": 15500,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "688"
										},
										{
											"begin": 15498,
											"end": 15499,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15480,
											"end": 15500,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "454"
										},
										{
											"begin": 15480,
											"end": 15500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15480,
											"end": 15500,
											"name": "tag",
											"source": 10,
											"value": "688"
										},
										{
											"begin": 15480,
											"end": 15500,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15475,
											"end": 15500,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15475,
											"end": 15500,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15514,
											"end": 15534,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "689"
										},
										{
											"begin": 15532,
											"end": 15533,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 15514,
											"end": 15534,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "454"
										},
										{
											"begin": 15514,
											"end": 15534,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15514,
											"end": 15534,
											"name": "tag",
											"source": 10,
											"value": "689"
										},
										{
											"begin": 15514,
											"end": 15534,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15509,
											"end": 15534,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 15509,
											"end": 15534,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15557,
											"end": 15558,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15554,
											"end": 15555,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15550,
											"end": 15559,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15543,
											"end": 15559,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15543,
											"end": 15559,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15578,
											"end": 15581,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 15575,
											"end": 15576,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15572,
											"end": 15582,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 15569,
											"end": 15605,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 15569,
											"end": 15605,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "690"
										},
										{
											"begin": 15569,
											"end": 15605,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 15585,
											"end": 15603,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "691"
										},
										{
											"begin": 15585,
											"end": 15603,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "489"
										},
										{
											"begin": 15585,
											"end": 15603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15585,
											"end": 15603,
											"name": "tag",
											"source": 10,
											"value": "691"
										},
										{
											"begin": 15585,
											"end": 15603,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15569,
											"end": 15605,
											"name": "tag",
											"source": 10,
											"value": "690"
										},
										{
											"begin": 15569,
											"end": 15605,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15421,
											"end": 15612,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 15421,
											"end": 15612,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15421,
											"end": 15612,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15421,
											"end": 15612,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15421,
											"end": 15612,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15618,
											"end": 15794,
											"name": "tag",
											"source": 10,
											"value": "490"
										},
										{
											"begin": 15618,
											"end": 15794,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15758,
											"end": 15786,
											"name": "PUSH",
											"source": 10,
											"value": "496E73756666696369656E74207374616B656420616D6F756E74000000000000"
										},
										{
											"begin": 15754,
											"end": 15755,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15746,
											"end": 15752,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15742,
											"end": 15756,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15735,
											"end": 15787,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15618,
											"end": 15794,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15618,
											"end": 15794,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15800,
											"end": 16166,
											"name": "tag",
											"source": 10,
											"value": "491"
										},
										{
											"begin": 15800,
											"end": 16166,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15942,
											"end": 15945,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15963,
											"end": 16030,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "694"
										},
										{
											"begin": 16027,
											"end": 16029,
											"name": "PUSH",
											"source": 10,
											"value": "1A"
										},
										{
											"begin": 16022,
											"end": 16025,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 15963,
											"end": 16030,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "481"
										},
										{
											"begin": 15963,
											"end": 16030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15963,
											"end": 16030,
											"name": "tag",
											"source": 10,
											"value": "694"
										},
										{
											"begin": 15963,
											"end": 16030,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15956,
											"end": 16030,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15956,
											"end": 16030,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16039,
											"end": 16132,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "695"
										},
										{
											"begin": 16128,
											"end": 16131,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16039,
											"end": 16132,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "490"
										},
										{
											"begin": 16039,
											"end": 16132,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16039,
											"end": 16132,
											"name": "tag",
											"source": 10,
											"value": "695"
										},
										{
											"begin": 16039,
											"end": 16132,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16157,
											"end": 16159,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 16152,
											"end": 16155,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16148,
											"end": 16160,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16141,
											"end": 16160,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16141,
											"end": 16160,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15800,
											"end": 16166,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15800,
											"end": 16166,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15800,
											"end": 16166,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15800,
											"end": 16166,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16172,
											"end": 16591,
											"name": "tag",
											"source": 10,
											"value": "226"
										},
										{
											"begin": 16172,
											"end": 16591,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16338,
											"end": 16342,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16376,
											"end": 16378,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 16365,
											"end": 16374,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16361,
											"end": 16379,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16353,
											"end": 16379,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16353,
											"end": 16379,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16425,
											"end": 16434,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16419,
											"end": 16423,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16415,
											"end": 16435,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 16411,
											"end": 16412,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16400,
											"end": 16409,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 16396,
											"end": 16413,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16389,
											"end": 16436,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16453,
											"end": 16584,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "697"
										},
										{
											"begin": 16579,
											"end": 16583,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16453,
											"end": 16584,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "491"
										},
										{
											"begin": 16453,
											"end": 16584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16453,
											"end": 16584,
											"name": "tag",
											"source": 10,
											"value": "697"
										},
										{
											"begin": 16453,
											"end": 16584,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16445,
											"end": 16584,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16445,
											"end": 16584,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16172,
											"end": 16591,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16172,
											"end": 16591,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16172,
											"end": 16591,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16172,
											"end": 16591,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16597,
											"end": 17007,
											"name": "tag",
											"source": 10,
											"value": "230"
										},
										{
											"begin": 16597,
											"end": 17007,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16637,
											"end": 16644,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16660,
											"end": 16680,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "699"
										},
										{
											"begin": 16678,
											"end": 16679,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16660,
											"end": 16680,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "454"
										},
										{
											"begin": 16660,
											"end": 16680,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16660,
											"end": 16680,
											"name": "tag",
											"source": 10,
											"value": "699"
										},
										{
											"begin": 16660,
											"end": 16680,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16655,
											"end": 16680,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16655,
											"end": 16680,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16694,
											"end": 16714,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "700"
										},
										{
											"begin": 16712,
											"end": 16713,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 16694,
											"end": 16714,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "454"
										},
										{
											"begin": 16694,
											"end": 16714,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16694,
											"end": 16714,
											"name": "tag",
											"source": 10,
											"value": "700"
										},
										{
											"begin": 16694,
											"end": 16714,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16689,
											"end": 16714,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 16689,
											"end": 16714,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16749,
											"end": 16750,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16746,
											"end": 16747,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16742,
											"end": 16751,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 16771,
											"end": 16801,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "701"
										},
										{
											"begin": 16789,
											"end": 16800,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16771,
											"end": 16801,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "454"
										},
										{
											"begin": 16771,
											"end": 16801,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16771,
											"end": 16801,
											"name": "tag",
											"source": 10,
											"value": "701"
										},
										{
											"begin": 16771,
											"end": 16801,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16760,
											"end": 16801,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16760,
											"end": 16801,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16950,
											"end": 16951,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16941,
											"end": 16948,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16937,
											"end": 16952,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 16934,
											"end": 16935,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 16931,
											"end": 16953,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 16911,
											"end": 16912,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 16904,
											"end": 16913,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 16884,
											"end": 16967,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 16861,
											"end": 17000,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "702"
										},
										{
											"begin": 16861,
											"end": 17000,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 16980,
											"end": 16998,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "703"
										},
										{
											"begin": 16980,
											"end": 16998,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "489"
										},
										{
											"begin": 16980,
											"end": 16998,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16980,
											"end": 16998,
											"name": "tag",
											"source": 10,
											"value": "703"
										},
										{
											"begin": 16980,
											"end": 16998,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16861,
											"end": 17000,
											"name": "tag",
											"source": 10,
											"value": "702"
										},
										{
											"begin": 16861,
											"end": 17000,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16645,
											"end": 17007,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16597,
											"end": 17007,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 16597,
											"end": 17007,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16597,
											"end": 17007,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16597,
											"end": 17007,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16597,
											"end": 17007,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17013,
											"end": 17193,
											"name": "tag",
											"source": 10,
											"value": "492"
										},
										{
											"begin": 17013,
											"end": 17193,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17061,
											"end": 17138,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17058,
											"end": 17059,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17051,
											"end": 17139,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17158,
											"end": 17162,
											"name": "PUSH",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 17155,
											"end": 17156,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 17148,
											"end": 17163,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17182,
											"end": 17186,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 17179,
											"end": 17180,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17172,
											"end": 17187,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 17199,
											"end": 17384,
											"name": "tag",
											"source": 10,
											"value": "232"
										},
										{
											"begin": 17199,
											"end": 17384,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17239,
											"end": 17240,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17256,
											"end": 17276,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "706"
										},
										{
											"begin": 17274,
											"end": 17275,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17256,
											"end": 17276,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "454"
										},
										{
											"begin": 17256,
											"end": 17276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17256,
											"end": 17276,
											"name": "tag",
											"source": 10,
											"value": "706"
										},
										{
											"begin": 17256,
											"end": 17276,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17251,
											"end": 17276,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 17251,
											"end": 17276,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17290,
											"end": 17310,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "707"
										},
										{
											"begin": 17308,
											"end": 17309,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 17290,
											"end": 17310,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "454"
										},
										{
											"begin": 17290,
											"end": 17310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17290,
											"end": 17310,
											"name": "tag",
											"source": 10,
											"value": "707"
										},
										{
											"begin": 17290,
											"end": 17310,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17285,
											"end": 17310,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 17285,
											"end": 17310,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17329,
											"end": 17330,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17319,
											"end": 17354,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "708"
										},
										{
											"begin": 17319,
											"end": 17354,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 17334,
											"end": 17352,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "709"
										},
										{
											"begin": 17334,
											"end": 17352,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "492"
										},
										{
											"begin": 17334,
											"end": 17352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17334,
											"end": 17352,
											"name": "tag",
											"source": 10,
											"value": "709"
										},
										{
											"begin": 17334,
											"end": 17352,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17319,
											"end": 17354,
											"name": "tag",
											"source": 10,
											"value": "708"
										},
										{
											"begin": 17319,
											"end": 17354,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17376,
											"end": 17377,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17373,
											"end": 17374,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17369,
											"end": 17378,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 17364,
											"end": 17378,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17364,
											"end": 17378,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17199,
											"end": 17384,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 17199,
											"end": 17384,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 17199,
											"end": 17384,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17199,
											"end": 17384,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17199,
											"end": 17384,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17390,
											"end": 17584,
											"name": "tag",
											"source": 10,
											"value": "234"
										},
										{
											"begin": 17390,
											"end": 17584,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17430,
											"end": 17434,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17450,
											"end": 17470,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "711"
										},
										{
											"begin": 17468,
											"end": 17469,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17450,
											"end": 17470,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "454"
										},
										{
											"begin": 17450,
											"end": 17470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17450,
											"end": 17470,
											"name": "tag",
											"source": 10,
											"value": "711"
										},
										{
											"begin": 17450,
											"end": 17470,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17445,
											"end": 17470,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 17445,
											"end": 17470,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17484,
											"end": 17504,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "712"
										},
										{
											"begin": 17502,
											"end": 17503,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 17484,
											"end": 17504,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "454"
										},
										{
											"begin": 17484,
											"end": 17504,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17484,
											"end": 17504,
											"name": "tag",
											"source": 10,
											"value": "712"
										},
										{
											"begin": 17484,
											"end": 17504,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17479,
											"end": 17504,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 17479,
											"end": 17504,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17528,
											"end": 17529,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17525,
											"end": 17526,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17521,
											"end": 17530,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 17513,
											"end": 17530,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17513,
											"end": 17530,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17552,
											"end": 17553,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17546,
											"end": 17550,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17543,
											"end": 17554,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 17540,
											"end": 17577,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 17540,
											"end": 17577,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "713"
										},
										{
											"begin": 17540,
											"end": 17577,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 17557,
											"end": 17575,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "714"
										},
										{
											"begin": 17557,
											"end": 17575,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "489"
										},
										{
											"begin": 17557,
											"end": 17575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17557,
											"end": 17575,
											"name": "tag",
											"source": 10,
											"value": "714"
										},
										{
											"begin": 17557,
											"end": 17575,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17540,
											"end": 17577,
											"name": "tag",
											"source": 10,
											"value": "713"
										},
										{
											"begin": 17540,
											"end": 17577,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17390,
											"end": 17584,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 17390,
											"end": 17584,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 17390,
											"end": 17584,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17390,
											"end": 17584,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17390,
											"end": 17584,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17590,
											"end": 17922,
											"name": "tag",
											"source": 10,
											"value": "237"
										},
										{
											"begin": 17590,
											"end": 17922,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17711,
											"end": 17715,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17749,
											"end": 17751,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 17738,
											"end": 17747,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17734,
											"end": 17752,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17726,
											"end": 17752,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17726,
											"end": 17752,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17762,
											"end": 17833,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "716"
										},
										{
											"begin": 17830,
											"end": 17831,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17819,
											"end": 17828,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 17815,
											"end": 17832,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17806,
											"end": 17812,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 17762,
											"end": 17833,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "467"
										},
										{
											"begin": 17762,
											"end": 17833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17762,
											"end": 17833,
											"name": "tag",
											"source": 10,
											"value": "716"
										},
										{
											"begin": 17762,
											"end": 17833,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17843,
											"end": 17915,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "717"
										},
										{
											"begin": 17911,
											"end": 17913,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 17900,
											"end": 17909,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 17896,
											"end": 17914,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17887,
											"end": 17893,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 17843,
											"end": 17915,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "455"
										},
										{
											"begin": 17843,
											"end": 17915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17843,
											"end": 17915,
											"name": "tag",
											"source": 10,
											"value": "717"
										},
										{
											"begin": 17843,
											"end": 17915,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17590,
											"end": 17922,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 17590,
											"end": 17922,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 17590,
											"end": 17922,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17590,
											"end": 17922,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17590,
											"end": 17922,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17590,
											"end": 17922,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17928,
											"end": 18260,
											"name": "tag",
											"source": 10,
											"value": "248"
										},
										{
											"begin": 17928,
											"end": 18260,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18049,
											"end": 18053,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18087,
											"end": 18089,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 18076,
											"end": 18085,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18072,
											"end": 18090,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18064,
											"end": 18090,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18064,
											"end": 18090,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18100,
											"end": 18171,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "719"
										},
										{
											"begin": 18168,
											"end": 18169,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18157,
											"end": 18166,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 18153,
											"end": 18170,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18144,
											"end": 18150,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 18100,
											"end": 18171,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "455"
										},
										{
											"begin": 18100,
											"end": 18171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18100,
											"end": 18171,
											"name": "tag",
											"source": 10,
											"value": "719"
										},
										{
											"begin": 18100,
											"end": 18171,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18181,
											"end": 18253,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "720"
										},
										{
											"begin": 18249,
											"end": 18251,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 18238,
											"end": 18247,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 18234,
											"end": 18252,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18225,
											"end": 18231,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 18181,
											"end": 18253,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "455"
										},
										{
											"begin": 18181,
											"end": 18253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18181,
											"end": 18253,
											"name": "tag",
											"source": 10,
											"value": "720"
										},
										{
											"begin": 18181,
											"end": 18253,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17928,
											"end": 18260,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 17928,
											"end": 18260,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 17928,
											"end": 18260,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17928,
											"end": 18260,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17928,
											"end": 18260,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17928,
											"end": 18260,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18266,
											"end": 18435,
											"name": "tag",
											"source": 10,
											"value": "493"
										},
										{
											"begin": 18266,
											"end": 18435,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18406,
											"end": 18427,
											"name": "PUSH",
											"source": 10,
											"value": "416C726561647920696E697469616C697A656400000000000000000000000000"
										},
										{
											"begin": 18402,
											"end": 18403,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18394,
											"end": 18400,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18390,
											"end": 18404,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18383,
											"end": 18428,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 18266,
											"end": 18435,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18266,
											"end": 18435,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18441,
											"end": 18807,
											"name": "tag",
											"source": 10,
											"value": "494"
										},
										{
											"begin": 18441,
											"end": 18807,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18583,
											"end": 18586,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18604,
											"end": 18671,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "723"
										},
										{
											"begin": 18668,
											"end": 18670,
											"name": "PUSH",
											"source": 10,
											"value": "13"
										},
										{
											"begin": 18663,
											"end": 18666,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 18604,
											"end": 18671,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "481"
										},
										{
											"begin": 18604,
											"end": 18671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18604,
											"end": 18671,
											"name": "tag",
											"source": 10,
											"value": "723"
										},
										{
											"begin": 18604,
											"end": 18671,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18597,
											"end": 18671,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 18597,
											"end": 18671,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18680,
											"end": 18773,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "724"
										},
										{
											"begin": 18769,
											"end": 18772,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18680,
											"end": 18773,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "493"
										},
										{
											"begin": 18680,
											"end": 18773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18680,
											"end": 18773,
											"name": "tag",
											"source": 10,
											"value": "724"
										},
										{
											"begin": 18680,
											"end": 18773,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18798,
											"end": 18800,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 18793,
											"end": 18796,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18789,
											"end": 18801,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18782,
											"end": 18801,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18782,
											"end": 18801,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18441,
											"end": 18807,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 18441,
											"end": 18807,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18441,
											"end": 18807,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18441,
											"end": 18807,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18813,
											"end": 19232,
											"name": "tag",
											"source": 10,
											"value": "268"
										},
										{
											"begin": 18813,
											"end": 19232,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18979,
											"end": 18983,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19017,
											"end": 19019,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 19006,
											"end": 19015,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19002,
											"end": 19020,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18994,
											"end": 19020,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18994,
											"end": 19020,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19066,
											"end": 19075,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19060,
											"end": 19064,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19056,
											"end": 19076,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 19052,
											"end": 19053,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19041,
											"end": 19050,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 19037,
											"end": 19054,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19030,
											"end": 19077,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 19094,
											"end": 19225,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "726"
										},
										{
											"begin": 19220,
											"end": 19224,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19094,
											"end": 19225,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "494"
										},
										{
											"begin": 19094,
											"end": 19225,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19094,
											"end": 19225,
											"name": "tag",
											"source": 10,
											"value": "726"
										},
										{
											"begin": 19094,
											"end": 19225,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19086,
											"end": 19225,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19086,
											"end": 19225,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18813,
											"end": 19232,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 18813,
											"end": 19232,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18813,
											"end": 19232,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18813,
											"end": 19232,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19238,
											"end": 19401,
											"name": "tag",
											"source": 10,
											"value": "495"
										},
										{
											"begin": 19238,
											"end": 19401,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19378,
											"end": 19393,
											"name": "PUSH",
											"source": 10,
											"value": "496E76616C6964206E6F6E636500000000000000000000000000000000000000"
										},
										{
											"begin": 19374,
											"end": 19375,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19366,
											"end": 19372,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19362,
											"end": 19376,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19355,
											"end": 19394,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 19238,
											"end": 19401,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19238,
											"end": 19401,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19407,
											"end": 19773,
											"name": "tag",
											"source": 10,
											"value": "496"
										},
										{
											"begin": 19407,
											"end": 19773,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19549,
											"end": 19552,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19570,
											"end": 19637,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "729"
										},
										{
											"begin": 19634,
											"end": 19636,
											"name": "PUSH",
											"source": 10,
											"value": "D"
										},
										{
											"begin": 19629,
											"end": 19632,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 19570,
											"end": 19637,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "481"
										},
										{
											"begin": 19570,
											"end": 19637,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19570,
											"end": 19637,
											"name": "tag",
											"source": 10,
											"value": "729"
										},
										{
											"begin": 19570,
											"end": 19637,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19563,
											"end": 19637,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 19563,
											"end": 19637,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19646,
											"end": 19739,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "730"
										},
										{
											"begin": 19735,
											"end": 19738,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19646,
											"end": 19739,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "495"
										},
										{
											"begin": 19646,
											"end": 19739,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19646,
											"end": 19739,
											"name": "tag",
											"source": 10,
											"value": "730"
										},
										{
											"begin": 19646,
											"end": 19739,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19764,
											"end": 19766,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 19759,
											"end": 19762,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19755,
											"end": 19767,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19748,
											"end": 19767,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19748,
											"end": 19767,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19407,
											"end": 19773,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 19407,
											"end": 19773,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19407,
											"end": 19773,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19407,
											"end": 19773,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19779,
											"end": 20198,
											"name": "tag",
											"source": 10,
											"value": "280"
										},
										{
											"begin": 19779,
											"end": 20198,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19945,
											"end": 19949,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19983,
											"end": 19985,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 19972,
											"end": 19981,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19968,
											"end": 19986,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19960,
											"end": 19986,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19960,
											"end": 19986,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20032,
											"end": 20041,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 20026,
											"end": 20030,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 20022,
											"end": 20042,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 20018,
											"end": 20019,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20007,
											"end": 20016,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 20003,
											"end": 20020,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19996,
											"end": 20043,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 20060,
											"end": 20191,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "732"
										},
										{
											"begin": 20186,
											"end": 20190,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 20060,
											"end": 20191,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "496"
										},
										{
											"begin": 20060,
											"end": 20191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20060,
											"end": 20191,
											"name": "tag",
											"source": 10,
											"value": "732"
										},
										{
											"begin": 20060,
											"end": 20191,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20052,
											"end": 20191,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20052,
											"end": 20191,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19779,
											"end": 20198,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 19779,
											"end": 20198,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19779,
											"end": 20198,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19779,
											"end": 20198,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20204,
											"end": 20437,
											"name": "tag",
											"source": 10,
											"value": "282"
										},
										{
											"begin": 20204,
											"end": 20437,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20243,
											"end": 20246,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20266,
											"end": 20290,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "734"
										},
										{
											"begin": 20284,
											"end": 20289,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20266,
											"end": 20290,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "454"
										},
										{
											"begin": 20266,
											"end": 20290,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20266,
											"end": 20290,
											"name": "tag",
											"source": 10,
											"value": "734"
										},
										{
											"begin": 20266,
											"end": 20290,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20257,
											"end": 20290,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 20257,
											"end": 20290,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20312,
											"end": 20378,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20305,
											"end": 20310,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20302,
											"end": 20379,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 20299,
											"end": 20402,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "735"
										},
										{
											"begin": 20299,
											"end": 20402,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 20382,
											"end": 20400,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "736"
										},
										{
											"begin": 20382,
											"end": 20400,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "489"
										},
										{
											"begin": 20382,
											"end": 20400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20382,
											"end": 20400,
											"name": "tag",
											"source": 10,
											"value": "736"
										},
										{
											"begin": 20382,
											"end": 20400,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20299,
											"end": 20402,
											"name": "tag",
											"source": 10,
											"value": "735"
										},
										{
											"begin": 20299,
											"end": 20402,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20429,
											"end": 20430,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 20422,
											"end": 20427,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20418,
											"end": 20431,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20411,
											"end": 20431,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20411,
											"end": 20431,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20204,
											"end": 20437,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 20204,
											"end": 20437,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20204,
											"end": 20437,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20204,
											"end": 20437,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20443,
											"end": 20607,
											"name": "tag",
											"source": 10,
											"value": "497"
										},
										{
											"begin": 20443,
											"end": 20607,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20583,
											"end": 20599,
											"name": "PUSH",
											"source": 10,
											"value": "4E6F207374616B6520666F756E64000000000000000000000000000000000000"
										},
										{
											"begin": 20579,
											"end": 20580,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20571,
											"end": 20577,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20567,
											"end": 20581,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20560,
											"end": 20600,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 20443,
											"end": 20607,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20443,
											"end": 20607,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20613,
											"end": 20979,
											"name": "tag",
											"source": 10,
											"value": "498"
										},
										{
											"begin": 20613,
											"end": 20979,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20755,
											"end": 20758,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20776,
											"end": 20843,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "739"
										},
										{
											"begin": 20840,
											"end": 20842,
											"name": "PUSH",
											"source": 10,
											"value": "E"
										},
										{
											"begin": 20835,
											"end": 20838,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 20776,
											"end": 20843,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "481"
										},
										{
											"begin": 20776,
											"end": 20843,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20776,
											"end": 20843,
											"name": "tag",
											"source": 10,
											"value": "739"
										},
										{
											"begin": 20776,
											"end": 20843,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20769,
											"end": 20843,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 20769,
											"end": 20843,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20852,
											"end": 20945,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "740"
										},
										{
											"begin": 20941,
											"end": 20944,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20852,
											"end": 20945,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "497"
										},
										{
											"begin": 20852,
											"end": 20945,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20852,
											"end": 20945,
											"name": "tag",
											"source": 10,
											"value": "740"
										},
										{
											"begin": 20852,
											"end": 20945,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20970,
											"end": 20972,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 20965,
											"end": 20968,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20961,
											"end": 20973,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20954,
											"end": 20973,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20954,
											"end": 20973,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20613,
											"end": 20979,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 20613,
											"end": 20979,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20613,
											"end": 20979,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20613,
											"end": 20979,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20985,
											"end": 21404,
											"name": "tag",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 20985,
											"end": 21404,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21151,
											"end": 21155,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 21189,
											"end": 21191,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 21178,
											"end": 21187,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 21174,
											"end": 21192,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 21166,
											"end": 21192,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 21166,
											"end": 21192,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21238,
											"end": 21247,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 21232,
											"end": 21236,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 21228,
											"end": 21248,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 21224,
											"end": 21225,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 21213,
											"end": 21222,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 21209,
											"end": 21226,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 21202,
											"end": 21249,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 21266,
											"end": 21397,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "742"
										},
										{
											"begin": 21392,
											"end": 21396,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 21266,
											"end": 21397,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "498"
										},
										{
											"begin": 21266,
											"end": 21397,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21266,
											"end": 21397,
											"name": "tag",
											"source": 10,
											"value": "742"
										},
										{
											"begin": 21266,
											"end": 21397,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21258,
											"end": 21397,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 21258,
											"end": 21397,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20985,
											"end": 21404,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 20985,
											"end": 21404,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20985,
											"end": 21404,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20985,
											"end": 21404,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21410,
											"end": 21575,
											"name": "tag",
											"source": 10,
											"value": "499"
										},
										{
											"begin": 21410,
											"end": 21575,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21550,
											"end": 21567,
											"name": "PUSH",
											"source": 10,
											"value": "4E6F2074696D6520656C61707365640000000000000000000000000000000000"
										},
										{
											"begin": 21546,
											"end": 21547,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 21538,
											"end": 21544,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 21534,
											"end": 21548,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 21527,
											"end": 21568,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 21410,
											"end": 21575,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21410,
											"end": 21575,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21581,
											"end": 21947,
											"name": "tag",
											"source": 10,
											"value": "500"
										},
										{
											"begin": 21581,
											"end": 21947,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21723,
											"end": 21726,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 21744,
											"end": 21811,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "745"
										},
										{
											"begin": 21808,
											"end": 21810,
											"name": "PUSH",
											"source": 10,
											"value": "F"
										},
										{
											"begin": 21803,
											"end": 21806,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 21744,
											"end": 21811,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "481"
										},
										{
											"begin": 21744,
											"end": 21811,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21744,
											"end": 21811,
											"name": "tag",
											"source": 10,
											"value": "745"
										},
										{
											"begin": 21744,
											"end": 21811,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21737,
											"end": 21811,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 21737,
											"end": 21811,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21820,
											"end": 21913,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "746"
										},
										{
											"begin": 21909,
											"end": 21912,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 21820,
											"end": 21913,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "499"
										},
										{
											"begin": 21820,
											"end": 21913,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21820,
											"end": 21913,
											"name": "tag",
											"source": 10,
											"value": "746"
										},
										{
											"begin": 21820,
											"end": 21913,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21938,
											"end": 21940,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 21933,
											"end": 21936,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 21929,
											"end": 21941,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 21922,
											"end": 21941,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 21922,
											"end": 21941,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21581,
											"end": 21947,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 21581,
											"end": 21947,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 21581,
											"end": 21947,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21581,
											"end": 21947,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21953,
											"end": 22372,
											"name": "tag",
											"source": 10,
											"value": "289"
										},
										{
											"begin": 21953,
											"end": 22372,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22119,
											"end": 22123,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 22157,
											"end": 22159,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 22146,
											"end": 22155,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 22142,
											"end": 22160,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 22134,
											"end": 22160,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 22134,
											"end": 22160,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22206,
											"end": 22215,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 22200,
											"end": 22204,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 22196,
											"end": 22216,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 22192,
											"end": 22193,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 22181,
											"end": 22190,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 22177,
											"end": 22194,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 22170,
											"end": 22217,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 22234,
											"end": 22365,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "748"
										},
										{
											"begin": 22360,
											"end": 22364,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 22234,
											"end": 22365,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "500"
										},
										{
											"begin": 22234,
											"end": 22365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22234,
											"end": 22365,
											"name": "tag",
											"source": 10,
											"value": "748"
										},
										{
											"begin": 22234,
											"end": 22365,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22226,
											"end": 22365,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 22226,
											"end": 22365,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21953,
											"end": 22372,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 21953,
											"end": 22372,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 21953,
											"end": 22372,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21953,
											"end": 22372,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22378,
											"end": 22545,
											"name": "tag",
											"source": 10,
											"value": "501"
										},
										{
											"begin": 22378,
											"end": 22545,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22518,
											"end": 22537,
											"name": "PUSH",
											"source": 10,
											"value": "496E76616C6964207369676E6174757265000000000000000000000000000000"
										},
										{
											"begin": 22514,
											"end": 22515,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 22506,
											"end": 22512,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 22502,
											"end": 22516,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 22495,
											"end": 22538,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 22378,
											"end": 22545,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22378,
											"end": 22545,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22551,
											"end": 22917,
											"name": "tag",
											"source": 10,
											"value": "502"
										},
										{
											"begin": 22551,
											"end": 22917,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22693,
											"end": 22696,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 22714,
											"end": 22781,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "751"
										},
										{
											"begin": 22778,
											"end": 22780,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 22773,
											"end": 22776,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 22714,
											"end": 22781,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "481"
										},
										{
											"begin": 22714,
											"end": 22781,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22714,
											"end": 22781,
											"name": "tag",
											"source": 10,
											"value": "751"
										},
										{
											"begin": 22714,
											"end": 22781,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22707,
											"end": 22781,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 22707,
											"end": 22781,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22790,
											"end": 22883,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "752"
										},
										{
											"begin": 22879,
											"end": 22882,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 22790,
											"end": 22883,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "501"
										},
										{
											"begin": 22790,
											"end": 22883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22790,
											"end": 22883,
											"name": "tag",
											"source": 10,
											"value": "752"
										},
										{
											"begin": 22790,
											"end": 22883,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22908,
											"end": 22910,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 22903,
											"end": 22906,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 22899,
											"end": 22911,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 22892,
											"end": 22911,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 22892,
											"end": 22911,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22551,
											"end": 22917,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 22551,
											"end": 22917,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 22551,
											"end": 22917,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22551,
											"end": 22917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22923,
											"end": 23342,
											"name": "tag",
											"source": 10,
											"value": "326"
										},
										{
											"begin": 22923,
											"end": 23342,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23089,
											"end": 23093,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 23127,
											"end": 23129,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 23116,
											"end": 23125,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 23112,
											"end": 23130,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 23104,
											"end": 23130,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 23104,
											"end": 23130,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23176,
											"end": 23185,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 23170,
											"end": 23174,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 23166,
											"end": 23186,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 23162,
											"end": 23163,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 23151,
											"end": 23160,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 23147,
											"end": 23164,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 23140,
											"end": 23187,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 23204,
											"end": 23335,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "754"
										},
										{
											"begin": 23330,
											"end": 23334,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 23204,
											"end": 23335,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "502"
										},
										{
											"begin": 23204,
											"end": 23335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23204,
											"end": 23335,
											"name": "tag",
											"source": 10,
											"value": "754"
										},
										{
											"begin": 23204,
											"end": 23335,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23196,
											"end": 23335,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 23196,
											"end": 23335,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22923,
											"end": 23342,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 22923,
											"end": 23342,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 22923,
											"end": 23342,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22923,
											"end": 23342,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23348,
											"end": 23522,
											"name": "tag",
											"source": 10,
											"value": "503"
										},
										{
											"begin": 23348,
											"end": 23522,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23488,
											"end": 23514,
											"name": "PUSH",
											"source": 10,
											"value": "45706F6368206475726174696F6E206E6F7420656E6465640000000000000000"
										},
										{
											"begin": 23484,
											"end": 23485,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 23476,
											"end": 23482,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 23472,
											"end": 23486,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 23465,
											"end": 23515,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 23348,
											"end": 23522,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23348,
											"end": 23522,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23528,
											"end": 23894,
											"name": "tag",
											"source": 10,
											"value": "504"
										},
										{
											"begin": 23528,
											"end": 23894,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23670,
											"end": 23673,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 23691,
											"end": 23758,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "757"
										},
										{
											"begin": 23755,
											"end": 23757,
											"name": "PUSH",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 23750,
											"end": 23753,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 23691,
											"end": 23758,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "481"
										},
										{
											"begin": 23691,
											"end": 23758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23691,
											"end": 23758,
											"name": "tag",
											"source": 10,
											"value": "757"
										},
										{
											"begin": 23691,
											"end": 23758,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23684,
											"end": 23758,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 23684,
											"end": 23758,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23767,
											"end": 23860,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "758"
										},
										{
											"begin": 23856,
											"end": 23859,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 23767,
											"end": 23860,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "503"
										},
										{
											"begin": 23767,
											"end": 23860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23767,
											"end": 23860,
											"name": "tag",
											"source": 10,
											"value": "758"
										},
										{
											"begin": 23767,
											"end": 23860,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23885,
											"end": 23887,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 23880,
											"end": 23883,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 23876,
											"end": 23888,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 23869,
											"end": 23888,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 23869,
											"end": 23888,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23528,
											"end": 23894,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 23528,
											"end": 23894,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 23528,
											"end": 23894,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23528,
											"end": 23894,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23900,
											"end": 24319,
											"name": "tag",
											"source": 10,
											"value": "331"
										},
										{
											"begin": 23900,
											"end": 24319,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24066,
											"end": 24070,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 24104,
											"end": 24106,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 24093,
											"end": 24102,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 24089,
											"end": 24107,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 24081,
											"end": 24107,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 24081,
											"end": 24107,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24153,
											"end": 24162,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 24147,
											"end": 24151,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 24143,
											"end": 24163,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 24139,
											"end": 24140,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 24128,
											"end": 24137,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 24124,
											"end": 24141,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 24117,
											"end": 24164,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 24181,
											"end": 24312,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "760"
										},
										{
											"begin": 24307,
											"end": 24311,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 24181,
											"end": 24312,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "504"
										},
										{
											"begin": 24181,
											"end": 24312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 24181,
											"end": 24312,
											"name": "tag",
											"source": 10,
											"value": "760"
										},
										{
											"begin": 24181,
											"end": 24312,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24173,
											"end": 24312,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 24173,
											"end": 24312,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23900,
											"end": 24319,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 23900,
											"end": 24319,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 23900,
											"end": 24319,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23900,
											"end": 24319,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 24325,
											"end": 24493,
											"name": "tag",
											"source": 10,
											"value": "505"
										},
										{
											"begin": 24325,
											"end": 24493,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24465,
											"end": 24485,
											"name": "PUSH",
											"source": 10,
											"value": "4E6F2070656E64696E6720726577617264730000000000000000000000000000"
										},
										{
											"begin": 24461,
											"end": 24462,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 24453,
											"end": 24459,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 24449,
											"end": 24463,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 24442,
											"end": 24486,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 24325,
											"end": 24493,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24325,
											"end": 24493,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 24499,
											"end": 24865,
											"name": "tag",
											"source": 10,
											"value": "506"
										},
										{
											"begin": 24499,
											"end": 24865,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24641,
											"end": 24644,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 24662,
											"end": 24729,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "763"
										},
										{
											"begin": 24726,
											"end": 24728,
											"name": "PUSH",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 24721,
											"end": 24724,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 24662,
											"end": 24729,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "481"
										},
										{
											"begin": 24662,
											"end": 24729,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 24662,
											"end": 24729,
											"name": "tag",
											"source": 10,
											"value": "763"
										},
										{
											"begin": 24662,
											"end": 24729,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24655,
											"end": 24729,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 24655,
											"end": 24729,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24738,
											"end": 24831,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "764"
										},
										{
											"begin": 24827,
											"end": 24830,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 24738,
											"end": 24831,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "505"
										},
										{
											"begin": 24738,
											"end": 24831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 24738,
											"end": 24831,
											"name": "tag",
											"source": 10,
											"value": "764"
										},
										{
											"begin": 24738,
											"end": 24831,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24856,
											"end": 24858,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 24851,
											"end": 24854,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 24847,
											"end": 24859,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 24840,
											"end": 24859,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 24840,
											"end": 24859,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24499,
											"end": 24865,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 24499,
											"end": 24865,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 24499,
											"end": 24865,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24499,
											"end": 24865,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 24871,
											"end": 25290,
											"name": "tag",
											"source": 10,
											"value": "334"
										},
										{
											"begin": 24871,
											"end": 25290,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 25037,
											"end": 25041,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 25075,
											"end": 25077,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 25064,
											"end": 25073,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 25060,
											"end": 25078,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 25052,
											"end": 25078,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 25052,
											"end": 25078,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 25124,
											"end": 25133,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 25118,
											"end": 25122,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 25114,
											"end": 25134,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 25110,
											"end": 25111,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 25099,
											"end": 25108,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 25095,
											"end": 25112,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 25088,
											"end": 25135,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 25152,
											"end": 25283,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "766"
										},
										{
											"begin": 25278,
											"end": 25282,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 25152,
											"end": 25283,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "506"
										},
										{
											"begin": 25152,
											"end": 25283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 25152,
											"end": 25283,
											"name": "tag",
											"source": 10,
											"value": "766"
										},
										{
											"begin": 25152,
											"end": 25283,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 25144,
											"end": 25283,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 25144,
											"end": 25283,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24871,
											"end": 25290,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 24871,
											"end": 25290,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 24871,
											"end": 25290,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24871,
											"end": 25290,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 25296,
											"end": 25474,
											"name": "tag",
											"source": 10,
											"value": "507"
										},
										{
											"begin": 25296,
											"end": 25474,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 25436,
											"end": 25466,
											"name": "PUSH",
											"source": 10,
											"value": "5265776172642065786365656473206D617820636C61696D61626C6500000000"
										},
										{
											"begin": 25432,
											"end": 25433,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 25424,
											"end": 25430,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 25420,
											"end": 25434,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 25413,
											"end": 25467,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 25296,
											"end": 25474,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 25296,
											"end": 25474,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 25480,
											"end": 25846,
											"name": "tag",
											"source": 10,
											"value": "508"
										},
										{
											"begin": 25480,
											"end": 25846,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 25622,
											"end": 25625,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 25643,
											"end": 25710,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "769"
										},
										{
											"begin": 25707,
											"end": 25709,
											"name": "PUSH",
											"source": 10,
											"value": "1C"
										},
										{
											"begin": 25702,
											"end": 25705,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 25643,
											"end": 25710,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "481"
										},
										{
											"begin": 25643,
											"end": 25710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 25643,
											"end": 25710,
											"name": "tag",
											"source": 10,
											"value": "769"
										},
										{
											"begin": 25643,
											"end": 25710,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 25636,
											"end": 25710,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 25636,
											"end": 25710,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 25719,
											"end": 25812,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "770"
										},
										{
											"begin": 25808,
											"end": 25811,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 25719,
											"end": 25812,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "507"
										},
										{
											"begin": 25719,
											"end": 25812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 25719,
											"end": 25812,
											"name": "tag",
											"source": 10,
											"value": "770"
										},
										{
											"begin": 25719,
											"end": 25812,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 25837,
											"end": 25839,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 25832,
											"end": 25835,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 25828,
											"end": 25840,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 25821,
											"end": 25840,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 25821,
											"end": 25840,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 25480,
											"end": 25846,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 25480,
											"end": 25846,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 25480,
											"end": 25846,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 25480,
											"end": 25846,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 25852,
											"end": 26271,
											"name": "tag",
											"source": 10,
											"value": "337"
										},
										{
											"begin": 25852,
											"end": 26271,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 26018,
											"end": 26022,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 26056,
											"end": 26058,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 26045,
											"end": 26054,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 26041,
											"end": 26059,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 26033,
											"end": 26059,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 26033,
											"end": 26059,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 26105,
											"end": 26114,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 26099,
											"end": 26103,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 26095,
											"end": 26115,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 26091,
											"end": 26092,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 26080,
											"end": 26089,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 26076,
											"end": 26093,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 26069,
											"end": 26116,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 26133,
											"end": 26264,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "772"
										},
										{
											"begin": 26259,
											"end": 26263,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 26133,
											"end": 26264,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "508"
										},
										{
											"begin": 26133,
											"end": 26264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 26133,
											"end": 26264,
											"name": "tag",
											"source": 10,
											"value": "772"
										},
										{
											"begin": 26133,
											"end": 26264,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 26125,
											"end": 26264,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 26125,
											"end": 26264,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 25852,
											"end": 26271,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 25852,
											"end": 26271,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 25852,
											"end": 26271,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 25852,
											"end": 26271,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 26277,
											"end": 26597,
											"name": "tag",
											"source": 10,
											"value": "373"
										},
										{
											"begin": 26277,
											"end": 26597,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 26392,
											"end": 26396,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 26430,
											"end": 26432,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 26419,
											"end": 26428,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 26415,
											"end": 26433,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 26407,
											"end": 26433,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 26407,
											"end": 26433,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 26443,
											"end": 26514,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "774"
										},
										{
											"begin": 26511,
											"end": 26512,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 26500,
											"end": 26509,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 26496,
											"end": 26513,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 26487,
											"end": 26493,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 26443,
											"end": 26514,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "455"
										},
										{
											"begin": 26443,
											"end": 26514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 26443,
											"end": 26514,
											"name": "tag",
											"source": 10,
											"value": "774"
										},
										{
											"begin": 26443,
											"end": 26514,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 26524,
											"end": 26590,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "775"
										},
										{
											"begin": 26586,
											"end": 26588,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 26575,
											"end": 26584,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 26571,
											"end": 26589,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 26562,
											"end": 26568,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 26524,
											"end": 26590,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "464"
										},
										{
											"begin": 26524,
											"end": 26590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 26524,
											"end": 26590,
											"name": "tag",
											"source": 10,
											"value": "775"
										},
										{
											"begin": 26524,
											"end": 26590,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 26277,
											"end": 26597,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 26277,
											"end": 26597,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 26277,
											"end": 26597,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 26277,
											"end": 26597,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 26277,
											"end": 26597,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 26277,
											"end": 26597,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 26603,
											"end": 26784,
											"name": "tag",
											"source": 10,
											"value": "509"
										},
										{
											"begin": 26603,
											"end": 26784,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 26743,
											"end": 26776,
											"name": "PUSH",
											"source": 10,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 26739,
											"end": 26740,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 26731,
											"end": 26737,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 26727,
											"end": 26741,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 26720,
											"end": 26777,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 26603,
											"end": 26784,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 26603,
											"end": 26784,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 26790,
											"end": 27156,
											"name": "tag",
											"source": 10,
											"value": "510"
										},
										{
											"begin": 26790,
											"end": 27156,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 26932,
											"end": 26935,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 26953,
											"end": 27020,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "778"
										},
										{
											"begin": 27017,
											"end": 27019,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 27012,
											"end": 27015,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 26953,
											"end": 27020,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "481"
										},
										{
											"begin": 26953,
											"end": 27020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 26953,
											"end": 27020,
											"name": "tag",
											"source": 10,
											"value": "778"
										},
										{
											"begin": 26953,
											"end": 27020,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 26946,
											"end": 27020,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 26946,
											"end": 27020,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 27029,
											"end": 27122,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "779"
										},
										{
											"begin": 27118,
											"end": 27121,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 27029,
											"end": 27122,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "509"
										},
										{
											"begin": 27029,
											"end": 27122,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 27029,
											"end": 27122,
											"name": "tag",
											"source": 10,
											"value": "779"
										},
										{
											"begin": 27029,
											"end": 27122,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 27147,
											"end": 27149,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 27142,
											"end": 27145,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 27138,
											"end": 27150,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 27131,
											"end": 27150,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 27131,
											"end": 27150,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 26790,
											"end": 27156,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 26790,
											"end": 27156,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 26790,
											"end": 27156,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 26790,
											"end": 27156,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 27162,
											"end": 27581,
											"name": "tag",
											"source": 10,
											"value": "384"
										},
										{
											"begin": 27162,
											"end": 27581,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 27328,
											"end": 27332,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 27366,
											"end": 27368,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 27355,
											"end": 27364,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 27351,
											"end": 27369,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 27343,
											"end": 27369,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 27343,
											"end": 27369,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 27415,
											"end": 27424,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 27409,
											"end": 27413,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 27405,
											"end": 27425,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 27401,
											"end": 27402,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 27390,
											"end": 27399,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 27386,
											"end": 27403,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 27379,
											"end": 27426,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 27443,
											"end": 27574,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "781"
										},
										{
											"begin": 27569,
											"end": 27573,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 27443,
											"end": 27574,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "510"
										},
										{
											"begin": 27443,
											"end": 27574,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 27443,
											"end": 27574,
											"name": "tag",
											"source": 10,
											"value": "781"
										},
										{
											"begin": 27443,
											"end": 27574,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 27435,
											"end": 27574,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 27435,
											"end": 27574,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 27162,
											"end": 27581,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 27162,
											"end": 27581,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 27162,
											"end": 27581,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 27162,
											"end": 27581,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 27587,
											"end": 27681,
											"name": "tag",
											"source": 10,
											"value": "511"
										},
										{
											"begin": 27587,
											"end": 27681,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 27620,
											"end": 27628,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 27668,
											"end": 27673,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 27664,
											"end": 27666,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 27660,
											"end": 27674,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 27639,
											"end": 27674,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 27639,
											"end": 27674,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 27587,
											"end": 27681,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 27587,
											"end": 27681,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 27587,
											"end": 27681,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 27587,
											"end": 27681,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 27687,
											"end": 27781,
											"name": "tag",
											"source": 10,
											"value": "512"
										},
										{
											"begin": 27687,
											"end": 27781,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 27726,
											"end": 27733,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 27755,
											"end": 27775,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "784"
										},
										{
											"begin": 27769,
											"end": 27774,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 27755,
											"end": 27775,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "511"
										},
										{
											"begin": 27755,
											"end": 27775,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 27755,
											"end": 27775,
											"name": "tag",
											"source": 10,
											"value": "784"
										},
										{
											"begin": 27755,
											"end": 27775,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 27744,
											"end": 27775,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 27744,
											"end": 27775,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 27687,
											"end": 27781,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 27687,
											"end": 27781,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 27687,
											"end": 27781,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 27687,
											"end": 27781,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 27787,
											"end": 27887,
											"name": "tag",
											"source": 10,
											"value": "513"
										},
										{
											"begin": 27787,
											"end": 27887,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 27826,
											"end": 27833,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 27855,
											"end": 27881,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "786"
										},
										{
											"begin": 27875,
											"end": 27880,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 27855,
											"end": 27881,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "512"
										},
										{
											"begin": 27855,
											"end": 27881,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 27855,
											"end": 27881,
											"name": "tag",
											"source": 10,
											"value": "786"
										},
										{
											"begin": 27855,
											"end": 27881,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 27844,
											"end": 27881,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 27844,
											"end": 27881,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 27787,
											"end": 27887,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 27787,
											"end": 27887,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 27787,
											"end": 27887,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 27787,
											"end": 27887,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 27893,
											"end": 28050,
											"name": "tag",
											"source": 10,
											"value": "514"
										},
										{
											"begin": 27893,
											"end": 28050,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 27998,
											"end": 28043,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "788"
										},
										{
											"begin": 28018,
											"end": 28042,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "789"
										},
										{
											"begin": 28036,
											"end": 28041,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 28018,
											"end": 28042,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "451"
										},
										{
											"begin": 28018,
											"end": 28042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 28018,
											"end": 28042,
											"name": "tag",
											"source": 10,
											"value": "789"
										},
										{
											"begin": 28018,
											"end": 28042,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 27998,
											"end": 28043,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "513"
										},
										{
											"begin": 27998,
											"end": 28043,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 27998,
											"end": 28043,
											"name": "tag",
											"source": 10,
											"value": "788"
										},
										{
											"begin": 27998,
											"end": 28043,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 27993,
											"end": 27996,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 27986,
											"end": 28044,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 27893,
											"end": 28050,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 27893,
											"end": 28050,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 27893,
											"end": 28050,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 28056,
											"end": 28135,
											"name": "tag",
											"source": 10,
											"value": "515"
										},
										{
											"begin": 28056,
											"end": 28135,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 28095,
											"end": 28102,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 28124,
											"end": 28129,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 28113,
											"end": 28129,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 28113,
											"end": 28129,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 28056,
											"end": 28135,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 28056,
											"end": 28135,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 28056,
											"end": 28135,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 28056,
											"end": 28135,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 28141,
											"end": 28298,
											"name": "tag",
											"source": 10,
											"value": "516"
										},
										{
											"begin": 28141,
											"end": 28298,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 28246,
											"end": 28291,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "792"
										},
										{
											"begin": 28266,
											"end": 28290,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "793"
										},
										{
											"begin": 28284,
											"end": 28289,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 28266,
											"end": 28290,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "454"
										},
										{
											"begin": 28266,
											"end": 28290,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 28266,
											"end": 28290,
											"name": "tag",
											"source": 10,
											"value": "793"
										},
										{
											"begin": 28266,
											"end": 28290,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 28246,
											"end": 28291,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "515"
										},
										{
											"begin": 28246,
											"end": 28291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 28246,
											"end": 28291,
											"name": "tag",
											"source": 10,
											"value": "792"
										},
										{
											"begin": 28246,
											"end": 28291,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 28241,
											"end": 28244,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 28234,
											"end": 28292,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 28141,
											"end": 28298,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 28141,
											"end": 28298,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 28141,
											"end": 28298,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 28304,
											"end": 28701,
											"name": "tag",
											"source": 10,
											"value": "396"
										},
										{
											"begin": 28304,
											"end": 28701,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 28444,
											"end": 28447,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 28459,
											"end": 28534,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "795"
										},
										{
											"begin": 28530,
											"end": 28533,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 28521,
											"end": 28527,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 28459,
											"end": 28534,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "514"
										},
										{
											"begin": 28459,
											"end": 28534,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 28459,
											"end": 28534,
											"name": "tag",
											"source": 10,
											"value": "795"
										},
										{
											"begin": 28459,
											"end": 28534,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 28559,
											"end": 28561,
											"name": "PUSH",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 28554,
											"end": 28557,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 28550,
											"end": 28562,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 28543,
											"end": 28562,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 28543,
											"end": 28562,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 28572,
											"end": 28647,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "796"
										},
										{
											"begin": 28643,
											"end": 28646,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 28634,
											"end": 28640,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 28572,
											"end": 28647,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "516"
										},
										{
											"begin": 28572,
											"end": 28647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 28572,
											"end": 28647,
											"name": "tag",
											"source": 10,
											"value": "796"
										},
										{
											"begin": 28572,
											"end": 28647,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 28672,
											"end": 28674,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 28667,
											"end": 28670,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 28663,
											"end": 28675,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 28656,
											"end": 28675,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 28656,
											"end": 28675,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 28692,
											"end": 28695,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 28685,
											"end": 28695,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 28685,
											"end": 28695,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 28304,
											"end": 28701,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 28304,
											"end": 28701,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 28304,
											"end": 28701,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 28304,
											"end": 28701,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 28304,
											"end": 28701,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 28304,
											"end": 28701,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 28707,
											"end": 28855,
											"name": "tag",
											"source": 10,
											"value": "517"
										},
										{
											"begin": 28707,
											"end": 28855,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 28809,
											"end": 28820,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 28846,
											"end": 28849,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 28831,
											"end": 28849,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 28831,
											"end": 28849,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 28707,
											"end": 28855,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 28707,
											"end": 28855,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 28707,
											"end": 28855,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 28707,
											"end": 28855,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 28707,
											"end": 28855,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 28861,
											"end": 29075,
											"name": "tag",
											"source": 10,
											"value": "518"
										},
										{
											"begin": 28861,
											"end": 29075,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 29001,
											"end": 29067,
											"name": "PUSH",
											"source": 10,
											"value": "19457468657265756D205369676E6564204D6573736167653A0A333200000000"
										},
										{
											"begin": 28997,
											"end": 28998,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 28989,
											"end": 28995,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 28985,
											"end": 28999,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 28978,
											"end": 29068,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 28861,
											"end": 29075,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 28861,
											"end": 29075,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 29081,
											"end": 29483,
											"name": "tag",
											"source": 10,
											"value": "519"
										},
										{
											"begin": 29081,
											"end": 29483,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 29241,
											"end": 29244,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 29262,
											"end": 29347,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "800"
										},
										{
											"begin": 29344,
											"end": 29346,
											"name": "PUSH",
											"source": 10,
											"value": "1C"
										},
										{
											"begin": 29339,
											"end": 29342,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 29262,
											"end": 29347,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "517"
										},
										{
											"begin": 29262,
											"end": 29347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 29262,
											"end": 29347,
											"name": "tag",
											"source": 10,
											"value": "800"
										},
										{
											"begin": 29262,
											"end": 29347,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 29255,
											"end": 29347,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 29255,
											"end": 29347,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 29356,
											"end": 29449,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "801"
										},
										{
											"begin": 29445,
											"end": 29448,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 29356,
											"end": 29449,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "518"
										},
										{
											"begin": 29356,
											"end": 29449,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 29356,
											"end": 29449,
											"name": "tag",
											"source": 10,
											"value": "801"
										},
										{
											"begin": 29356,
											"end": 29449,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 29474,
											"end": 29476,
											"name": "PUSH",
											"source": 10,
											"value": "1C"
										},
										{
											"begin": 29469,
											"end": 29472,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 29465,
											"end": 29477,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 29458,
											"end": 29477,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 29458,
											"end": 29477,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 29081,
											"end": 29483,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 29081,
											"end": 29483,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 29081,
											"end": 29483,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 29081,
											"end": 29483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 29489,
											"end": 29566,
											"name": "tag",
											"source": 10,
											"value": "520"
										},
										{
											"begin": 29489,
											"end": 29566,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 29526,
											"end": 29533,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 29555,
											"end": 29560,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 29544,
											"end": 29560,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 29544,
											"end": 29560,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 29489,
											"end": 29566,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 29489,
											"end": 29566,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 29489,
											"end": 29566,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 29489,
											"end": 29566,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 29572,
											"end": 29651,
											"name": "tag",
											"source": 10,
											"value": "521"
										},
										{
											"begin": 29572,
											"end": 29651,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 29611,
											"end": 29618,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 29640,
											"end": 29645,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 29629,
											"end": 29645,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 29629,
											"end": 29645,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 29572,
											"end": 29651,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 29572,
											"end": 29651,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 29572,
											"end": 29651,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 29572,
											"end": 29651,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 29657,
											"end": 29814,
											"name": "tag",
											"source": 10,
											"value": "522"
										},
										{
											"begin": 29657,
											"end": 29814,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 29762,
											"end": 29807,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "805"
										},
										{
											"begin": 29782,
											"end": 29806,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "806"
										},
										{
											"begin": 29800,
											"end": 29805,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 29782,
											"end": 29806,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "520"
										},
										{
											"begin": 29782,
											"end": 29806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 29782,
											"end": 29806,
											"name": "tag",
											"source": 10,
											"value": "806"
										},
										{
											"begin": 29782,
											"end": 29806,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 29762,
											"end": 29807,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "521"
										},
										{
											"begin": 29762,
											"end": 29807,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 29762,
											"end": 29807,
											"name": "tag",
											"source": 10,
											"value": "805"
										},
										{
											"begin": 29762,
											"end": 29807,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 29757,
											"end": 29760,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 29750,
											"end": 29808,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 29657,
											"end": 29814,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 29657,
											"end": 29814,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 29657,
											"end": 29814,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 29820,
											"end": 30342,
											"name": "tag",
											"source": 10,
											"value": "398"
										},
										{
											"begin": 29820,
											"end": 30342,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 30033,
											"end": 30036,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 30055,
											"end": 30203,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "808"
										},
										{
											"begin": 30199,
											"end": 30202,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 30055,
											"end": 30203,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "519"
										},
										{
											"begin": 30055,
											"end": 30203,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 30055,
											"end": 30203,
											"name": "tag",
											"source": 10,
											"value": "808"
										},
										{
											"begin": 30055,
											"end": 30203,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 30048,
											"end": 30203,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 30048,
											"end": 30203,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 30213,
											"end": 30288,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "809"
										},
										{
											"begin": 30284,
											"end": 30287,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 30275,
											"end": 30281,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 30213,
											"end": 30288,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "522"
										},
										{
											"begin": 30213,
											"end": 30288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 30213,
											"end": 30288,
											"name": "tag",
											"source": 10,
											"value": "809"
										},
										{
											"begin": 30213,
											"end": 30288,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 30313,
											"end": 30315,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 30308,
											"end": 30311,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 30304,
											"end": 30316,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 30297,
											"end": 30316,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 30297,
											"end": 30316,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 30333,
											"end": 30336,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 30326,
											"end": 30336,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 30326,
											"end": 30336,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 29820,
											"end": 30342,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 29820,
											"end": 30342,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 29820,
											"end": 30342,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 29820,
											"end": 30342,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 29820,
											"end": 30342,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 30348,
											"end": 30528,
											"name": "tag",
											"source": 10,
											"value": "415"
										},
										{
											"begin": 30348,
											"end": 30528,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 30396,
											"end": 30473,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 30393,
											"end": 30394,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 30386,
											"end": 30474,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 30493,
											"end": 30497,
											"name": "PUSH",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 30490,
											"end": 30491,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 30483,
											"end": 30498,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 30517,
											"end": 30521,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 30514,
											"end": 30515,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 30507,
											"end": 30522,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 30534,
											"end": 30652,
											"name": "tag",
											"source": 10,
											"value": "523"
										},
										{
											"begin": 30534,
											"end": 30652,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 30621,
											"end": 30645,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "812"
										},
										{
											"begin": 30639,
											"end": 30644,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 30621,
											"end": 30645,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "520"
										},
										{
											"begin": 30621,
											"end": 30645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 30621,
											"end": 30645,
											"name": "tag",
											"source": 10,
											"value": "812"
										},
										{
											"begin": 30621,
											"end": 30645,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 30616,
											"end": 30619,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 30609,
											"end": 30646,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 30534,
											"end": 30652,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 30534,
											"end": 30652,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 30534,
											"end": 30652,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 30658,
											"end": 30880,
											"name": "tag",
											"source": 10,
											"value": "439"
										},
										{
											"begin": 30658,
											"end": 30880,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 30751,
											"end": 30755,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 30789,
											"end": 30791,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 30778,
											"end": 30787,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 30774,
											"end": 30792,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 30766,
											"end": 30792,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 30766,
											"end": 30792,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 30802,
											"end": 30873,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "814"
										},
										{
											"begin": 30870,
											"end": 30871,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 30859,
											"end": 30868,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 30855,
											"end": 30872,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 30846,
											"end": 30852,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 30802,
											"end": 30873,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "523"
										},
										{
											"begin": 30802,
											"end": 30873,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 30802,
											"end": 30873,
											"name": "tag",
											"source": 10,
											"value": "814"
										},
										{
											"begin": 30802,
											"end": 30873,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 30658,
											"end": 30880,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 30658,
											"end": 30880,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 30658,
											"end": 30880,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 30658,
											"end": 30880,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 30658,
											"end": 30880,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 30886,
											"end": 30972,
											"name": "tag",
											"source": 10,
											"value": "524"
										},
										{
											"begin": 30886,
											"end": 30972,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 30921,
											"end": 30928,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 30961,
											"end": 30965,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 30954,
											"end": 30959,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 30950,
											"end": 30966,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 30939,
											"end": 30966,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 30939,
											"end": 30966,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 30886,
											"end": 30972,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 30886,
											"end": 30972,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 30886,
											"end": 30972,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 30886,
											"end": 30972,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 30978,
											"end": 31090,
											"name": "tag",
											"source": 10,
											"value": "525"
										},
										{
											"begin": 30978,
											"end": 31090,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 31061,
											"end": 31083,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "817"
										},
										{
											"begin": 31077,
											"end": 31082,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 31061,
											"end": 31083,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "524"
										},
										{
											"begin": 31061,
											"end": 31083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 31061,
											"end": 31083,
											"name": "tag",
											"source": 10,
											"value": "817"
										},
										{
											"begin": 31061,
											"end": 31083,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 31056,
											"end": 31059,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 31049,
											"end": 31084,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 30978,
											"end": 31090,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 30978,
											"end": 31090,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 30978,
											"end": 31090,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 31096,
											"end": 31641,
											"name": "tag",
											"source": 10,
											"value": "443"
										},
										{
											"begin": 31096,
											"end": 31641,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 31269,
											"end": 31273,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 31307,
											"end": 31310,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 31296,
											"end": 31305,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 31292,
											"end": 31311,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 31284,
											"end": 31311,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 31284,
											"end": 31311,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 31321,
											"end": 31392,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "819"
										},
										{
											"begin": 31389,
											"end": 31390,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 31378,
											"end": 31387,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 31374,
											"end": 31391,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 31365,
											"end": 31371,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 31321,
											"end": 31392,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "523"
										},
										{
											"begin": 31321,
											"end": 31392,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 31321,
											"end": 31392,
											"name": "tag",
											"source": 10,
											"value": "819"
										},
										{
											"begin": 31321,
											"end": 31392,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 31402,
											"end": 31470,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "820"
										},
										{
											"begin": 31466,
											"end": 31468,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 31455,
											"end": 31464,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 31451,
											"end": 31469,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 31442,
											"end": 31448,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 31402,
											"end": 31470,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "525"
										},
										{
											"begin": 31402,
											"end": 31470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 31402,
											"end": 31470,
											"name": "tag",
											"source": 10,
											"value": "820"
										},
										{
											"begin": 31402,
											"end": 31470,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 31480,
											"end": 31552,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "821"
										},
										{
											"begin": 31548,
											"end": 31550,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 31537,
											"end": 31546,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 31533,
											"end": 31551,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 31524,
											"end": 31530,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 31480,
											"end": 31552,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "523"
										},
										{
											"begin": 31480,
											"end": 31552,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 31480,
											"end": 31552,
											"name": "tag",
											"source": 10,
											"value": "821"
										},
										{
											"begin": 31480,
											"end": 31552,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 31562,
											"end": 31634,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "822"
										},
										{
											"begin": 31630,
											"end": 31632,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 31619,
											"end": 31628,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 31615,
											"end": 31633,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 31606,
											"end": 31612,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 31562,
											"end": 31634,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "523"
										},
										{
											"begin": 31562,
											"end": 31634,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 31562,
											"end": 31634,
											"name": "tag",
											"source": 10,
											"value": "822"
										},
										{
											"begin": 31562,
											"end": 31634,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 31096,
											"end": 31641,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 31096,
											"end": 31641,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 31096,
											"end": 31641,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 31096,
											"end": 31641,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 31096,
											"end": 31641,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 31096,
											"end": 31641,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 31096,
											"end": 31641,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 31096,
											"end": 31641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
								"contracts/LiquidityAccelerationToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"claimStakeRewards(uint256)": "dd69becd",
							"claimTradeRewards(uint256,bytes)": "e90b0d76",
							"earlyWithdrawalFee()": "16330d40",
							"epochDuration()": "4ff0876a",
							"epochTradeVolume()": "519445e2",
							"inactivityPenaltyRate()": "94d9b235",
							"inactivitySlashingTime()": "8119185b",
							"initialize(address,uint256,uint256,uint256,uint256,uint256,uint256,address)": "848ff684",
							"initialized()": "158ef93e",
							"lastEpochBlock()": "c2362dd5",
							"lastSignedClaim(address)": "f3482650",
							"latToken()": "0fd7bf50",
							"liquidityBoostMultiplier(address)": "5829b3c7",
							"makerRebates(address)": "5e2a9fa2",
							"maxClaimable()": "f03f80c3",
							"nonces(address)": "7ecebe00",
							"owner()": "8da5cb5b",
							"paused()": "5c975abb",
							"poolBoostMultiplier()": "1bff38cd",
							"poolTradingVolume()": "eab35b77",
							"poolVolumeThreshold()": "64cb6142",
							"recordTrade(uint256,bool)": "e927e7c0",
							"renounceOwnership()": "715018a6",
							"setPaused(bool)": "16c38b3c",
							"stakeLat(uint256)": "0524fb7e",
							"stakeRewardRate()": "ccc8362c",
							"stakedWeight(address)": "58ba9d27",
							"stakes(address)": "16934fc4",
							"takerFees(address)": "011a4568",
							"totalTrades()": "e275c997",
							"tradeEpochDuration()": "f1ea7692",
							"tradeRewardRate()": "f6cc5157",
							"traderStats(address)": "05c50a35",
							"transferOwnership(address)": "f2fde38b",
							"updateLiquidityMultiplier(address,uint256)": "31fdc2ba",
							"vaultAddress()": "430bf08a",
							"vestingSchedules(address,uint256)": "45626bd6",
							"withdrawStake(uint256)": "25d5971f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"multiplier\",\"type\":\"uint256\"}],\"name\":\"LiquidityMultiplierUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isPaused\",\"type\":\"bool\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"StakeLat\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"StakeRewardsClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountAfterPenalty\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"penalty\",\"type\":\"uint256\"}],\"name\":\"StakeWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tradeVolume\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isMaker\",\"type\":\"bool\"}],\"name\":\"TradeRecorded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"TradeRewardsClaimed\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"expectedNonce\",\"type\":\"uint256\"}],\"name\":\"claimStakeRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"expectedNonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"claimTradeRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"earlyWithdrawalFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"epochDuration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"epochTradeVolume\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"inactivityPenaltyRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"inactivitySlashingTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ILatToken\",\"name\":\"_latToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tradeRewardRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_stakeRewardRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_tradeEpochDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_poolVolumeThreshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_poolBoostMultiplier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_epochDuration\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_vaultAddress\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastEpochBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"lastSignedClaim\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latToken\",\"outputs\":[{\"internalType\":\"contract ILatToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"liquidityBoostMultiplier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"makerRebates\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxClaimable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolBoostMultiplier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolTradingVolume\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolVolumeThreshold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tradeVolume\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isMaker\",\"type\":\"bool\"}],\"name\":\"recordTrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_paused\",\"type\":\"bool\"}],\"name\":\"setPaused\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"stakeLat\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakeRewardRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakedWeight\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdated\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stakeStart\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"takerFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalTrades\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tradeEpochDuration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tradeRewardRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"traderStats\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tradeCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalVolume\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pendingTradeRewards\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastClaim\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"lpTokens\",\"type\":\"uint256\"}],\"name\":\"updateLiquidityMultiplier\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vaultAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"vestingSchedules\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalReward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"claimed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"claimStakeRewards(uint256)\":{\"params\":{\"expectedNonce\":\"The expected nonce for msg.sender.\"}},\"claimTradeRewards(uint256,bytes)\":{\"params\":{\"expectedNonce\":\"The expected nonce for msg.sender.\",\"signature\":\"The signature over (msg.sender, expectedNonce).\"}},\"initialize(address,uint256,uint256,uint256,uint256,uint256,uint256,address)\":{\"params\":{\"_epochDuration\":\"Epoch duration in blocks (for checkpointing).\",\"_latToken\":\"The mintable LAT token.\",\"_poolBoostMultiplier\":\"Boost multiplier (in percentage) for staking rewards.\",\"_poolVolumeThreshold\":\"Threshold to trigger liquidity pool boost.\",\"_stakeRewardRate\":\"Base reward rate for staking.\",\"_tradeEpochDuration\":\"Duration (in seconds) for trade reward epochs.\",\"_tradeRewardRate\":\"Base reward rate for trades.\",\"_vaultAddress\":\"The treasury vault address to hold staked tokens.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"recordTrade(uint256,bool)\":{\"params\":{\"isMaker\":\"Whether the trader is a market maker.\",\"tradeVolume\":\"The volume of the trade.\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"stakeLat(uint256)\":{\"params\":{\"amount\":\"The amount of LAT tokens to stake.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"updateLiquidityMultiplier(address,uint256)\":{\"params\":{\"lpTokens\":\"The amount of liquidity provider tokens held (if > 0, multiplier is set to 120).\",\"trader\":\"The address of the trader.\"}},\"withdrawStake(uint256)\":{\"params\":{\"amount\":\"The amount of staked tokens to withdraw.\"}}},\"title\":\"LiquidityAccelerationToken\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"claimStakeRewards(uint256)\":{\"notice\":\"Claims staking rewards based on the staked amount and elapsed time. Applies pool boosts, liquidity boosts, staked weight, and inactivity slashing if applicable. Uses nonce-based replay protection.\"},\"claimTradeRewards(uint256,bytes)\":{\"notice\":\"Allows traders to claim accumulated trade rewards after the epoch duration. Uses a nonce and off\\u2011chain EIP\\u2011712 style signature for replay protection.\"},\"initialize(address,uint256,uint256,uint256,uint256,uint256,uint256,address)\":{\"notice\":\"Initializes the global state. Can only be called once by the owner.\"},\"recordTrade(uint256,bool)\":{\"notice\":\"Records a trade and updates global and per-trader statistics. If a new epoch has started, the epoch trade volume is reset. Also records maker rebates or taker fees.\"},\"setPaused(bool)\":{\"notice\":\"Emergency pause function to disable critical functions.\"},\"stakeLat(uint256)\":{\"notice\":\"Stakes LAT tokens by transferring them to a treasury vault. The user must approve this contract beforehand. Also updates the staked weight (used for long\\u2011term reward multipliers).\"},\"updateLiquidityMultiplier(address,uint256)\":{\"notice\":\"Admin-only function to update a trader's liquidity boost multiplier.\"},\"withdrawStake(uint256)\":{\"notice\":\"Withdraws staked LAT tokens from the treasury vault. If withdrawn before 7 days from staking, an early withdrawal fee is applied.\"}},\"notice\":\"This contract mimics a Solana Anchor program by implementing epoch\\u2011based trading rewards, off\\u2011chain signature verification, staking (with vesting, weighted rewards, and inactivity slashing), early withdrawal penalties, and a separate treasury vault for staked tokens. It also includes reentrancy protection and an emergency pause.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LiquidityAccelerationToken.sol\":\"LiquidityAccelerationToken\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26\",\"dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]},\"contracts/LiquidityAccelerationToken.sol\":{\"keccak256\":\"0x7685fa7df91ee893cbc41916f564ef2d7f97ea76fa53b1c18d3009973f8e54b1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5345d4bd3ea581e64e2b8d4d09bd9a5e0334eff2f3dab6d42004c3939c16b886\",\"dweb:/ipfs/QmWBGQChw2AXm33jQc8gjDx4zE8EBL7YNGohP9LwcbVrbq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "contracts/LiquidityAccelerationToken.sol:LiquidityAccelerationToken",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 295,
								"contract": "contracts/LiquidityAccelerationToken.sol:LiquidityAccelerationToken",
								"label": "_status",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 1430,
								"contract": "contracts/LiquidityAccelerationToken.sol:LiquidityAccelerationToken",
								"label": "latToken",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(ILatToken)1410"
							},
							{
								"astId": 1432,
								"contract": "contracts/LiquidityAccelerationToken.sol:LiquidityAccelerationToken",
								"label": "tradeRewardRate",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 1434,
								"contract": "contracts/LiquidityAccelerationToken.sol:LiquidityAccelerationToken",
								"label": "stakeRewardRate",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 1436,
								"contract": "contracts/LiquidityAccelerationToken.sol:LiquidityAccelerationToken",
								"label": "totalTrades",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 1438,
								"contract": "contracts/LiquidityAccelerationToken.sol:LiquidityAccelerationToken",
								"label": "epochTradeVolume",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 1440,
								"contract": "contracts/LiquidityAccelerationToken.sol:LiquidityAccelerationToken",
								"label": "tradeEpochDuration",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 1442,
								"contract": "contracts/LiquidityAccelerationToken.sol:LiquidityAccelerationToken",
								"label": "poolTradingVolume",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 1444,
								"contract": "contracts/LiquidityAccelerationToken.sol:LiquidityAccelerationToken",
								"label": "poolVolumeThreshold",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							},
							{
								"astId": 1446,
								"contract": "contracts/LiquidityAccelerationToken.sol:LiquidityAccelerationToken",
								"label": "poolBoostMultiplier",
								"offset": 0,
								"slot": "10",
								"type": "t_uint256"
							},
							{
								"astId": 1449,
								"contract": "contracts/LiquidityAccelerationToken.sol:LiquidityAccelerationToken",
								"label": "earlyWithdrawalFee",
								"offset": 0,
								"slot": "11",
								"type": "t_uint256"
							},
							{
								"astId": 1451,
								"contract": "contracts/LiquidityAccelerationToken.sol:LiquidityAccelerationToken",
								"label": "lastEpochBlock",
								"offset": 0,
								"slot": "12",
								"type": "t_uint256"
							},
							{
								"astId": 1453,
								"contract": "contracts/LiquidityAccelerationToken.sol:LiquidityAccelerationToken",
								"label": "epochDuration",
								"offset": 0,
								"slot": "13",
								"type": "t_uint256"
							},
							{
								"astId": 1456,
								"contract": "contracts/LiquidityAccelerationToken.sol:LiquidityAccelerationToken",
								"label": "inactivitySlashingTime",
								"offset": 0,
								"slot": "14",
								"type": "t_uint256"
							},
							{
								"astId": 1459,
								"contract": "contracts/LiquidityAccelerationToken.sol:LiquidityAccelerationToken",
								"label": "inactivityPenaltyRate",
								"offset": 0,
								"slot": "15",
								"type": "t_uint256"
							},
							{
								"astId": 1466,
								"contract": "contracts/LiquidityAccelerationToken.sol:LiquidityAccelerationToken",
								"label": "maxClaimable",
								"offset": 0,
								"slot": "16",
								"type": "t_uint256"
							},
							{
								"astId": 1468,
								"contract": "contracts/LiquidityAccelerationToken.sol:LiquidityAccelerationToken",
								"label": "paused",
								"offset": 0,
								"slot": "17",
								"type": "t_bool"
							},
							{
								"astId": 1470,
								"contract": "contracts/LiquidityAccelerationToken.sol:LiquidityAccelerationToken",
								"label": "initialized",
								"offset": 1,
								"slot": "17",
								"type": "t_bool"
							},
							{
								"astId": 1474,
								"contract": "contracts/LiquidityAccelerationToken.sol:LiquidityAccelerationToken",
								"label": "nonces",
								"offset": 0,
								"slot": "18",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1478,
								"contract": "contracts/LiquidityAccelerationToken.sol:LiquidityAccelerationToken",
								"label": "lastSignedClaim",
								"offset": 0,
								"slot": "19",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1482,
								"contract": "contracts/LiquidityAccelerationToken.sol:LiquidityAccelerationToken",
								"label": "makerRebates",
								"offset": 0,
								"slot": "20",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1486,
								"contract": "contracts/LiquidityAccelerationToken.sol:LiquidityAccelerationToken",
								"label": "takerFees",
								"offset": 0,
								"slot": "21",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1490,
								"contract": "contracts/LiquidityAccelerationToken.sol:LiquidityAccelerationToken",
								"label": "liquidityBoostMultiplier",
								"offset": 0,
								"slot": "22",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1504,
								"contract": "contracts/LiquidityAccelerationToken.sol:LiquidityAccelerationToken",
								"label": "traderStats",
								"offset": 0,
								"slot": "23",
								"type": "t_mapping(t_address,t_struct(TraderStats)1499_storage)"
							},
							{
								"astId": 1516,
								"contract": "contracts/LiquidityAccelerationToken.sol:LiquidityAccelerationToken",
								"label": "stakes",
								"offset": 0,
								"slot": "24",
								"type": "t_mapping(t_address,t_struct(Stake)1511_storage)"
							},
							{
								"astId": 1520,
								"contract": "contracts/LiquidityAccelerationToken.sol:LiquidityAccelerationToken",
								"label": "stakedWeight",
								"offset": 0,
								"slot": "25",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1535,
								"contract": "contracts/LiquidityAccelerationToken.sol:LiquidityAccelerationToken",
								"label": "vestingSchedules",
								"offset": 0,
								"slot": "26",
								"type": "t_mapping(t_address,t_array(t_struct(VestingEntry)1529_storage)dyn_storage)"
							},
							{
								"astId": 1537,
								"contract": "contracts/LiquidityAccelerationToken.sol:LiquidityAccelerationToken",
								"label": "vaultAddress",
								"offset": 0,
								"slot": "27",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(VestingEntry)1529_storage)dyn_storage": {
								"base": "t_struct(VestingEntry)1529_storage",
								"encoding": "dynamic_array",
								"label": "struct LiquidityAccelerationToken.VestingEntry[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(ILatToken)1410": {
								"encoding": "inplace",
								"label": "contract ILatToken",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_array(t_struct(VestingEntry)1529_storage)dyn_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct LiquidityAccelerationToken.VestingEntry[])",
								"numberOfBytes": "32",
								"value": "t_array(t_struct(VestingEntry)1529_storage)dyn_storage"
							},
							"t_mapping(t_address,t_struct(Stake)1511_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct LiquidityAccelerationToken.Stake)",
								"numberOfBytes": "32",
								"value": "t_struct(Stake)1511_storage"
							},
							"t_mapping(t_address,t_struct(TraderStats)1499_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct LiquidityAccelerationToken.TraderStats)",
								"numberOfBytes": "32",
								"value": "t_struct(TraderStats)1499_storage"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(Stake)1511_storage": {
								"encoding": "inplace",
								"label": "struct LiquidityAccelerationToken.Stake",
								"members": [
									{
										"astId": 1506,
										"contract": "contracts/LiquidityAccelerationToken.sol:LiquidityAccelerationToken",
										"label": "amount",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 1508,
										"contract": "contracts/LiquidityAccelerationToken.sol:LiquidityAccelerationToken",
										"label": "lastUpdated",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 1510,
										"contract": "contracts/LiquidityAccelerationToken.sol:LiquidityAccelerationToken",
										"label": "stakeStart",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "96"
							},
							"t_struct(TraderStats)1499_storage": {
								"encoding": "inplace",
								"label": "struct LiquidityAccelerationToken.TraderStats",
								"members": [
									{
										"astId": 1492,
										"contract": "contracts/LiquidityAccelerationToken.sol:LiquidityAccelerationToken",
										"label": "tradeCount",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 1494,
										"contract": "contracts/LiquidityAccelerationToken.sol:LiquidityAccelerationToken",
										"label": "totalVolume",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 1496,
										"contract": "contracts/LiquidityAccelerationToken.sol:LiquidityAccelerationToken",
										"label": "pendingTradeRewards",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 1498,
										"contract": "contracts/LiquidityAccelerationToken.sol:LiquidityAccelerationToken",
										"label": "lastClaim",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "128"
							},
							"t_struct(VestingEntry)1529_storage": {
								"encoding": "inplace",
								"label": "struct LiquidityAccelerationToken.VestingEntry",
								"members": [
									{
										"astId": 1522,
										"contract": "contracts/LiquidityAccelerationToken.sol:LiquidityAccelerationToken",
										"label": "totalReward",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 1524,
										"contract": "contracts/LiquidityAccelerationToken.sol:LiquidityAccelerationToken",
										"label": "claimed",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 1526,
										"contract": "contracts/LiquidityAccelerationToken.sol:LiquidityAccelerationToken",
										"label": "startTime",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 1528,
										"contract": "contracts/LiquidityAccelerationToken.sol:LiquidityAccelerationToken",
										"label": "duration",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "128"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"claimStakeRewards(uint256)": {
								"notice": "Claims staking rewards based on the staked amount and elapsed time. Applies pool boosts, liquidity boosts, staked weight, and inactivity slashing if applicable. Uses nonce-based replay protection."
							},
							"claimTradeRewards(uint256,bytes)": {
								"notice": "Allows traders to claim accumulated trade rewards after the epoch duration. Uses a nonce and off‑chain EIP‑712 style signature for replay protection."
							},
							"initialize(address,uint256,uint256,uint256,uint256,uint256,uint256,address)": {
								"notice": "Initializes the global state. Can only be called once by the owner."
							},
							"recordTrade(uint256,bool)": {
								"notice": "Records a trade and updates global and per-trader statistics. If a new epoch has started, the epoch trade volume is reset. Also records maker rebates or taker fees."
							},
							"setPaused(bool)": {
								"notice": "Emergency pause function to disable critical functions."
							},
							"stakeLat(uint256)": {
								"notice": "Stakes LAT tokens by transferring them to a treasury vault. The user must approve this contract beforehand. Also updates the staked weight (used for long‑term reward multipliers)."
							},
							"updateLiquidityMultiplier(address,uint256)": {
								"notice": "Admin-only function to update a trader's liquidity boost multiplier."
							},
							"withdrawStake(uint256)": {
								"notice": "Withdraws staked LAT tokens from the treasury vault. If withdrawn before 7 days from staking, an early withdrawal fee is applied."
							}
						},
						"notice": "This contract mimics a Solana Anchor program by implementing epoch‑based trading rewards, off‑chain signature verification, staking (with vesting, weighted rewards, and inactivity slashing), early withdrawal penalties, and a separate treasury vault for staked tokens. It also includes reentrancy protection and an emergency pause.",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1044
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 1045,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1044,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1044,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								1044
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1026,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1026,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							284
						],
						"IERC20Errors": [
							189
						],
						"IERC721Errors": [
							237
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:1",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 159,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "654:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "670:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "687:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:1"
									},
									"src": "623:80:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 164,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "891:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:1"
									},
									"src": "866:41:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 169,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1104:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:1"
									},
									"src": "1077:45:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 178,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1511:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1528:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1547:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:1"
									},
									"src": "1478:85:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 183,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1775:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:1"
									},
									"src": "1748:45:1"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 188,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2025:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:1"
									},
									"src": "1999:43:1"
								}
							],
							"scope": 285,
							"src": "280:1764:1",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:1",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 195,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2469:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:1"
									},
									"src": "2444:40:1"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 200,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2656:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:1"
									},
									"src": "2627:46:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 209,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3000:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3016:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3033:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:1"
									},
									"src": "2973:75:1"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 214,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3237:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:1"
									},
									"src": "3211:42:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 219,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3451:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:1"
									},
									"src": "3423:46:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 226,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3760:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3778:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:1"
									},
									"src": "3727:68:1"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 231,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4008:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:1"
									},
									"src": "3980:46:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 236,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4262:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:1"
									},
									"src": "4234:46:1"
								}
							],
							"scope": 285,
							"src": "2190:2092:1",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:1",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 249,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4860:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4876:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4893:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4909:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:1"
									},
									"src": "4827:99:1"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 254,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5116:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:1"
									},
									"src": "5089:43:1"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 259,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5331:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:1"
									},
									"src": "5302:47:1"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 266,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5651:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5669:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:1"
									},
									"src": "5616:68:1"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 271,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5898:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:1"
									},
									"src": "5869:47:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 276,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6153:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:1"
									},
									"src": "6124:47:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 283,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6494:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6513:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:1"
									},
									"src": "6462:73:1"
								}
							],
							"scope": 285,
							"src": "4430:2107:1",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							349
						]
					},
					"id": 350,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 287,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:2",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 349,
							"linearizedBaseContracts": [
								349
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 290,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 349,
									"src": "1676:41:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 288,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 289,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 293,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:2",
									"nodeType": "VariableDeclaration",
									"scope": 349,
									"src": "1723:37:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 291,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 292,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 295,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 349,
									"src": "1767:23:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 294,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 302,
										"nodeType": "Block",
										"src": "1811:39:2",
										"statements": [
											{
												"expression": {
													"id": 300,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 298,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "1821:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 299,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 290,
														"src": "1831:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 301,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:2"
											}
										]
									},
									"id": 303,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:2"
									},
									"returnParameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:2"
									},
									"scope": 349,
									"src": "1797:53:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 313,
										"nodeType": "Block",
										"src": "2251:79:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 306,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 329,
														"src": "2261:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 308,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:2"
											},
											{
												"id": 309,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:2"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 310,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 337,
														"src": "2303:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 312,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:2"
											}
										]
									},
									"documentation": {
										"id": 304,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:2",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 314,
									"name": "nonReentrant",
									"nameLocation": "2236:12:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:2"
									},
									"src": "2227:103:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 328,
										"nodeType": "Block",
										"src": "2375:248:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 320,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 318,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 295,
																"src": "2468:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 319,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 293,
																"src": "2479:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 321,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 317,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 323,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:2"
											},
											{
												"expression": {
													"id": 326,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 324,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "2598:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 325,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 293,
														"src": "2608:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 327,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:2"
											}
										]
									},
									"id": 329,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:2"
									},
									"returnParameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:2"
									},
									"scope": 349,
									"src": "2336:287:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 336,
										"nodeType": "Block",
										"src": "2667:171:2",
										"statements": [
											{
												"expression": {
													"id": 334,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 332,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "2809:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 333,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 290,
														"src": "2819:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 335,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:2"
											}
										]
									},
									"id": 337,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 330,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:2"
									},
									"returnParameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:2"
									},
									"scope": 349,
									"src": "2629:209:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 347,
										"nodeType": "Block",
										"src": "3081:43:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 343,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "3098:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 344,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 293,
														"src": "3109:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 342,
												"id": 346,
												"nodeType": "Return",
												"src": "3091:26:2"
											}
										]
									},
									"documentation": {
										"id": 338,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:2",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 348,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:2"
									},
									"returnParameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "3075:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 340,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:2"
									},
									"scope": 349,
									"src": "3017:107:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 350,
							"src": "888:2238:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3015:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							1044
						],
						"ERC20": [
							864
						],
						"IERC20": [
							942
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							1014
						]
					},
					"id": 865,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 351,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 353,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 865,
							"sourceUnit": 943,
							"src": "131:36:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 352,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 942,
										"src": "139:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 355,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 865,
							"sourceUnit": 1015,
							"src": "168:63:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 354,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1014,
										"src": "176:14:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 357,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 865,
							"sourceUnit": 1045,
							"src": "232:48:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 356,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1044,
										"src": "240:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 359,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 865,
							"sourceUnit": 285,
							"src": "281:65:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 358,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 189,
										"src": "289:12:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 361,
										"name": "Context",
										"nameLocations": [
											"1133:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1044,
										"src": "1133:7:3"
									},
									"id": 362,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:3"
								},
								{
									"baseName": {
										"id": 363,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 942,
										"src": "1142:6:3"
									},
									"id": 364,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:3"
								},
								{
									"baseName": {
										"id": 365,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1014,
										"src": "1150:14:3"
									},
									"id": 366,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:3"
								},
								{
									"baseName": {
										"id": 367,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 189,
										"src": "1166:12:3"
									},
									"id": 368,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:3"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 360,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:3",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 864,
							"linearizedBaseContracts": [
								864,
								189,
								1014,
								942,
								1044
							],
							"name": "ERC20",
							"nameLocation": "1124:5:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 372,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:3",
									"nodeType": "VariableDeclaration",
									"scope": 864,
									"src": "1185:53:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 371,
										"keyName": "account",
										"keyNameLocation": "1201:7:3",
										"keyType": {
											"id": 369,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 370,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 378,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:3",
									"nodeType": "VariableDeclaration",
									"scope": 864,
									"src": "1245:83:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 377,
										"keyName": "account",
										"keyNameLocation": "1261:7:3",
										"keyType": {
											"id": 373,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 376,
											"keyName": "spender",
											"keyNameLocation": "1288:7:3",
											"keyType": {
												"id": 374,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:3",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 375,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 380,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:3",
									"nodeType": "VariableDeclaration",
									"scope": 864,
									"src": "1335:28:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 379,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 382,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:3",
									"nodeType": "VariableDeclaration",
									"scope": 864,
									"src": "1370:20:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 381,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 384,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 864,
									"src": "1396:22:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 383,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 400,
										"nodeType": "Block",
										"src": "1657:57:3",
										"statements": [
											{
												"expression": {
													"id": 394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 392,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 382,
														"src": "1667:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 393,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 387,
														"src": "1675:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1667:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 395,
												"nodeType": "ExpressionStatement",
												"src": "1667:13:3"
											},
											{
												"expression": {
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 396,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 384,
														"src": "1690:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 397,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 389,
														"src": "1700:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1690:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 399,
												"nodeType": "ExpressionStatement",
												"src": "1690:17:3"
											}
										]
									},
									"documentation": {
										"id": 385,
										"nodeType": "StructuredDocumentation",
										"src": "1425:171:3",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 401,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 387,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1627:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "1613:19:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 386,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1613:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1648:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "1634:21:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 388,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1634:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1612:44:3"
									},
									"returnParameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1657:0:3"
									},
									"scope": 864,
									"src": "1601:113:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1001
									],
									"body": {
										"id": 409,
										"nodeType": "Block",
										"src": "1839:29:3",
										"statements": [
											{
												"expression": {
													"id": 407,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 382,
													"src": "1856:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 406,
												"id": 408,
												"nodeType": "Return",
												"src": "1849:12:3"
											}
										]
									},
									"documentation": {
										"id": 402,
										"nodeType": "StructuredDocumentation",
										"src": "1720:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 410,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1788:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 403,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:2:3"
									},
									"returnParameters": {
										"id": 406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "1824:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 404,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1824:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1823:15:3"
									},
									"scope": 864,
									"src": "1779:89:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1007
									],
									"body": {
										"id": 418,
										"nodeType": "Block",
										"src": "2043:31:3",
										"statements": [
											{
												"expression": {
													"id": 416,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 384,
													"src": "2060:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 415,
												"id": 417,
												"nodeType": "Return",
												"src": "2053:14:3"
											}
										]
									},
									"documentation": {
										"id": 411,
										"nodeType": "StructuredDocumentation",
										"src": "1874:102:3",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 419,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1990:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 412,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1996:2:3"
									},
									"returnParameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 419,
												"src": "2028:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 413,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2028:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:15:3"
									},
									"scope": 864,
									"src": "1981:93:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1013
									],
									"body": {
										"id": 427,
										"nodeType": "Block",
										"src": "2763:26:3",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 425,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2780:2:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 424,
												"id": 426,
												"nodeType": "Return",
												"src": "2773:9:3"
											}
										]
									},
									"documentation": {
										"id": 420,
										"nodeType": "StructuredDocumentation",
										"src": "2080:622:3",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 428,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2716:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2724:2:3"
									},
									"returnParameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 428,
												"src": "2756:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 422,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2756:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2755:7:3"
									},
									"scope": 864,
									"src": "2707:82:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										891
									],
									"body": {
										"id": 436,
										"nodeType": "Block",
										"src": "2910:36:3",
										"statements": [
											{
												"expression": {
													"id": 434,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 380,
													"src": "2927:12:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 433,
												"id": 435,
												"nodeType": "Return",
												"src": "2920:19:3"
											}
										]
									},
									"documentation": {
										"id": 429,
										"nodeType": "StructuredDocumentation",
										"src": "2795:49:3",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 437,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2858:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2869:2:3"
									},
									"returnParameters": {
										"id": 433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 432,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 437,
												"src": "2901:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 431,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2901:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2900:9:3"
									},
									"scope": 864,
									"src": "2849:97:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										899
									],
									"body": {
										"id": 449,
										"nodeType": "Block",
										"src": "3078:42:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 445,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 372,
														"src": "3095:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 447,
													"indexExpression": {
														"id": 446,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 440,
														"src": "3105:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3095:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 444,
												"id": 448,
												"nodeType": "Return",
												"src": "3088:25:3"
											}
										]
									},
									"documentation": {
										"id": 438,
										"nodeType": "StructuredDocumentation",
										"src": "2952:47:3",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3013:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 441,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 440,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3031:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "3023:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 439,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3023:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3022:17:3"
									},
									"returnParameters": {
										"id": 444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "3069:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 442,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3069:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3068:9:3"
									},
									"scope": 864,
									"src": "3004:116:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										909
									],
									"body": {
										"id": 473,
										"nodeType": "Block",
										"src": "3390:103:3",
										"statements": [
											{
												"assignments": [
													461
												],
												"declarations": [
													{
														"constant": false,
														"id": 461,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3408:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 473,
														"src": "3400:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 460,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3400:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 464,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 462,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1026,
														"src": "3416:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 463,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3416:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3400:28:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 466,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "3448:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 467,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "3455:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 468,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "3459:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 465,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 594,
														"src": "3438:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3438:27:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 470,
												"nodeType": "ExpressionStatement",
												"src": "3438:27:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3482:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 459,
												"id": 472,
												"nodeType": "Return",
												"src": "3475:11:3"
											}
										]
									},
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "3126:184:3",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 474,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3324:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3341:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "3333:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3333:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3353:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "3345:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 454,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3345:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3332:27:3"
									},
									"returnParameters": {
										"id": 459,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 458,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "3384:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 457,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3384:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3383:6:3"
									},
									"scope": 864,
									"src": "3315:178:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										919
									],
									"body": {
										"id": 490,
										"nodeType": "Block",
										"src": "3640:51:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 484,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 378,
															"src": "3657:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 486,
														"indexExpression": {
															"id": 485,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 477,
															"src": "3669:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3657:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 488,
													"indexExpression": {
														"id": 487,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 479,
														"src": "3676:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3657:27:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 483,
												"id": 489,
												"nodeType": "Return",
												"src": "3650:34:3"
											}
										]
									},
									"documentation": {
										"id": 475,
										"nodeType": "StructuredDocumentation",
										"src": "3499:47:3",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 491,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3560:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3578:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "3570:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 476,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3570:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3593:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "3585:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 478,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3585:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3569:32:3"
									},
									"returnParameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "3631:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 481,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3631:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3630:9:3"
									},
									"scope": 864,
									"src": "3551:140:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										929
									],
									"body": {
										"id": 514,
										"nodeType": "Block",
										"src": "4077:107:3",
										"statements": [
											{
												"assignments": [
													502
												],
												"declarations": [
													{
														"constant": false,
														"id": 502,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4095:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 514,
														"src": "4087:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 501,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4087:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 505,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 503,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1026,
														"src": "4103:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4103:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4087:28:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 507,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 502,
															"src": "4134:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 508,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 494,
															"src": "4141:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 509,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 496,
															"src": "4150:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 506,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															755,
															815
														],
														"referencedDeclaration": 755,
														"src": "4125:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4125:31:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 511,
												"nodeType": "ExpressionStatement",
												"src": "4125:31:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4173:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 500,
												"id": 513,
												"nodeType": "Return",
												"src": "4166:11:3"
											}
										]
									},
									"documentation": {
										"id": 492,
										"nodeType": "StructuredDocumentation",
										"src": "3697:296:3",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 515,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4007:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4023:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "4015:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4015:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4040:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "4032:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4032:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4014:32:3"
									},
									"returnParameters": {
										"id": 500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 499,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "4071:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 498,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4071:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4070:6:3"
									},
									"scope": 864,
									"src": "3998:186:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										941
									],
									"body": {
										"id": 546,
										"nodeType": "Block",
										"src": "4869:151:3",
										"statements": [
											{
												"assignments": [
													528
												],
												"declarations": [
													{
														"constant": false,
														"id": 528,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4887:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 546,
														"src": "4879:15:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 527,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4879:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 531,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 529,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1026,
														"src": "4897:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 530,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4897:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4879:30:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 533,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 518,
															"src": "4935:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 534,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 528,
															"src": "4941:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 535,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 522,
															"src": "4950:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 532,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 863,
														"src": "4919:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 536,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4919:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 537,
												"nodeType": "ExpressionStatement",
												"src": "4919:37:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 539,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 518,
															"src": "4976:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 540,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 520,
															"src": "4982:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 541,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 522,
															"src": "4986:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 538,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 594,
														"src": "4966:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4966:26:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 543,
												"nodeType": "ExpressionStatement",
												"src": "4966:26:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5009:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 526,
												"id": 545,
												"nodeType": "Return",
												"src": "5002:11:3"
											}
										]
									},
									"documentation": {
										"id": 516,
										"nodeType": "StructuredDocumentation",
										"src": "4190:581:3",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 547,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4785:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 518,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4806:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 547,
												"src": "4798:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 517,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4798:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 520,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4820:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 547,
												"src": "4812:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 519,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4812:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4832:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 547,
												"src": "4824:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 521,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4824:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4797:41:3"
									},
									"returnParameters": {
										"id": 526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 525,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 547,
												"src": "4863:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 524,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4863:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4862:6:3"
									},
									"scope": 864,
									"src": "4776:244:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 593,
										"nodeType": "Block",
										"src": "5462:231:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 557,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 550,
														"src": "5476:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 560,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5492:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 559,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5484:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 558,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5484:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 561,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5484:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5476:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 571,
												"nodeType": "IfStatement",
												"src": "5472:86:3",
												"trueBody": {
													"id": 570,
													"nodeType": "Block",
													"src": "5496:62:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 566,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5544:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 565,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5536:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 564,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5536:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 567,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5536:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 563,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "5517:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 568,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5517:30:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 569,
															"nodeType": "RevertStatement",
															"src": "5510:37:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 577,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 572,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 552,
														"src": "5571:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 575,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5585:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 574,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5577:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 573,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5577:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 576,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5577:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5571:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 586,
												"nodeType": "IfStatement",
												"src": "5567:86:3",
												"trueBody": {
													"id": 585,
													"nodeType": "Block",
													"src": "5589:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 581,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5639:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 580,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5631:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 579,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5631:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 582,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5631:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 578,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "5610:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 583,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5610:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 584,
															"nodeType": "RevertStatement",
															"src": "5603:39:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 588,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 550,
															"src": "5670:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 589,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 552,
															"src": "5676:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 590,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 554,
															"src": "5680:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 587,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 671,
														"src": "5662:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5662:24:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 592,
												"nodeType": "ExpressionStatement",
												"src": "5662:24:3"
											}
										]
									},
									"documentation": {
										"id": 548,
										"nodeType": "StructuredDocumentation",
										"src": "5026:362:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 594,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5402:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 550,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5420:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "5412:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 549,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5412:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 552,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5434:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "5426:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 551,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5426:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 554,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5446:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "5438:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 553,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5438:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5411:41:3"
									},
									"returnParameters": {
										"id": 556,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5462:0:3"
									},
									"scope": 864,
									"src": "5393:300:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 670,
										"nodeType": "Block",
										"src": "6083:1032:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 609,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 604,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 597,
														"src": "6097:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 607,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6113:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 606,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6105:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 605,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6105:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 608,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6105:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6097:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 641,
													"nodeType": "Block",
													"src": "6271:362:3",
													"statements": [
														{
															"assignments": [
																616
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 616,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6293:11:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 641,
																	"src": "6285:19:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 615,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6285:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 620,
															"initialValue": {
																"baseExpression": {
																	"id": 617,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 372,
																	"src": "6307:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 619,
																"indexExpression": {
																	"id": 618,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 597,
																	"src": "6317:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6307:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6285:37:3"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 623,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 621,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 616,
																	"src": "6340:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 622,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 601,
																	"src": "6354:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6340:19:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 631,
															"nodeType": "IfStatement",
															"src": "6336:115:3",
															"trueBody": {
																"id": 630,
																"nodeType": "Block",
																"src": "6361:90:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 625,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 597,
																					"src": "6411:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 626,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 616,
																					"src": "6417:11:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 627,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 601,
																					"src": "6430:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 624,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6386:24:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 628,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6386:50:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 629,
																		"nodeType": "RevertStatement",
																		"src": "6379:57:3"
																	}
																]
															}
														},
														{
															"id": 640,
															"nodeType": "UncheckedBlock",
															"src": "6464:159:3",
															"statements": [
																{
																	"expression": {
																		"id": 638,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 632,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 372,
																				"src": "6571:9:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 634,
																			"indexExpression": {
																				"id": 633,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 597,
																				"src": "6581:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6571:15:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 637,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 635,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 616,
																				"src": "6589:11:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 636,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 601,
																				"src": "6603:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6589:19:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6571:37:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 639,
																	"nodeType": "ExpressionStatement",
																	"src": "6571:37:3"
																}
															]
														}
													]
												},
												"id": 642,
												"nodeType": "IfStatement",
												"src": "6093:540:3",
												"trueBody": {
													"id": 614,
													"nodeType": "Block",
													"src": "6117:148:3",
													"statements": [
														{
															"expression": {
																"id": 612,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 610,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 380,
																	"src": "6233:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 611,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 601,
																	"src": "6249:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6233:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 613,
															"nodeType": "ExpressionStatement",
															"src": "6233:21:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 648,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 643,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 599,
														"src": "6647:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 646,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6661:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 645,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6653:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 644,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6653:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 647,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6653:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6647:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 662,
													"nodeType": "Block",
													"src": "6862:206:3",
													"statements": [
														{
															"id": 661,
															"nodeType": "UncheckedBlock",
															"src": "6876:182:3",
															"statements": [
																{
																	"expression": {
																		"id": 659,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 655,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 372,
																				"src": "7021:9:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 657,
																			"indexExpression": {
																				"id": 656,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 599,
																				"src": "7031:2:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7021:13:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 658,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 601,
																			"src": "7038:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7021:22:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 660,
																	"nodeType": "ExpressionStatement",
																	"src": "7021:22:3"
																}
															]
														}
													]
												},
												"id": 663,
												"nodeType": "IfStatement",
												"src": "6643:425:3",
												"trueBody": {
													"id": 654,
													"nodeType": "Block",
													"src": "6665:191:3",
													"statements": [
														{
															"id": 653,
															"nodeType": "UncheckedBlock",
															"src": "6679:167:3",
															"statements": [
																{
																	"expression": {
																		"id": 651,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 649,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 380,
																			"src": "6810:12:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 650,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 601,
																			"src": "6826:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6810:21:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 652,
																	"nodeType": "ExpressionStatement",
																	"src": "6810:21:3"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 665,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 597,
															"src": "7092:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 666,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 599,
															"src": "7098:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 667,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 601,
															"src": "7102:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 664,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 876,
														"src": "7083:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 668,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7083:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 669,
												"nodeType": "EmitStatement",
												"src": "7078:30:3"
											}
										]
									},
									"documentation": {
										"id": 595,
										"nodeType": "StructuredDocumentation",
										"src": "5699:304:3",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 671,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6017:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 602,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 597,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6033:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "6025:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 596,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6025:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 599,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6047:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "6039:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 598,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6039:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 601,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6059:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "6051:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 600,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6051:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6024:41:3"
									},
									"returnParameters": {
										"id": 603,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6083:0:3"
									},
									"scope": 864,
									"src": "6008:1107:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 703,
										"nodeType": "Block",
										"src": "7514:152:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 684,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 679,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 674,
														"src": "7528:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 682,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7547:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 681,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7539:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 680,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7539:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 683,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7539:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7528:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 693,
												"nodeType": "IfStatement",
												"src": "7524:91:3",
												"trueBody": {
													"id": 692,
													"nodeType": "Block",
													"src": "7551:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 688,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7601:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 687,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7593:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 686,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7593:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 689,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7593:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 685,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "7572:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 690,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7572:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 691,
															"nodeType": "RevertStatement",
															"src": "7565:39:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 697,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7640:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 696,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7632:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 695,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7632:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 698,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7632:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 699,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 674,
															"src": "7644:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 700,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 676,
															"src": "7653:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 694,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 671,
														"src": "7624:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 701,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7624:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 702,
												"nodeType": "ExpressionStatement",
												"src": "7624:35:3"
											}
										]
									},
									"documentation": {
										"id": 672,
										"nodeType": "StructuredDocumentation",
										"src": "7121:332:3",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 704,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7467:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 674,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7481:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 704,
												"src": "7473:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 673,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7473:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7498:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 704,
												"src": "7490:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 675,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7490:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7472:32:3"
									},
									"returnParameters": {
										"id": 678,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7514:0:3"
									},
									"scope": 864,
									"src": "7458:208:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 736,
										"nodeType": "Block",
										"src": "8040:150:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 717,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 712,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 707,
														"src": "8054:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 715,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8073:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 714,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8065:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 713,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8065:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 716,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8065:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8054:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 726,
												"nodeType": "IfStatement",
												"src": "8050:89:3",
												"trueBody": {
													"id": 725,
													"nodeType": "Block",
													"src": "8077:62:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 721,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8125:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 720,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8117:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 719,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8117:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 722,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8117:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 718,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "8098:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 723,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8098:30:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 724,
															"nodeType": "RevertStatement",
															"src": "8091:37:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 728,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 707,
															"src": "8156:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 731,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8173:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 730,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8165:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 729,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8165:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 732,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8165:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 733,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 709,
															"src": "8177:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 727,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 671,
														"src": "8148:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 734,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8148:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 735,
												"nodeType": "ExpressionStatement",
												"src": "8148:35:3"
											}
										]
									},
									"documentation": {
										"id": 705,
										"nodeType": "StructuredDocumentation",
										"src": "7672:307:3",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 737,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7993:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 710,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 707,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8007:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 737,
												"src": "7999:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 706,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7999:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8024:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 737,
												"src": "8016:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 708,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8016:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7998:32:3"
									},
									"returnParameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8040:0:3"
									},
									"scope": 864,
									"src": "7984:206:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 754,
										"nodeType": "Block",
										"src": "8800:54:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 748,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 740,
															"src": "8819:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 749,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 742,
															"src": "8826:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 750,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 744,
															"src": "8835:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 751,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8842:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 747,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															755,
															815
														],
														"referencedDeclaration": 815,
														"src": "8810:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 752,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8810:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 753,
												"nodeType": "ExpressionStatement",
												"src": "8810:37:3"
											}
										]
									},
									"documentation": {
										"id": 738,
										"nodeType": "StructuredDocumentation",
										"src": "8196:525:3",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 755,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8735:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 745,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8752:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 755,
												"src": "8744:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 739,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8744:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 742,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8767:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 755,
												"src": "8759:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 741,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8759:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 744,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8784:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 755,
												"src": "8776:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 743,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8776:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8743:47:3"
									},
									"returnParameters": {
										"id": 746,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8800:0:3"
									},
									"scope": 864,
									"src": "8726:128:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 814,
										"nodeType": "Block",
										"src": "9799:334:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 772,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 767,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 758,
														"src": "9813:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 770,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9830:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 769,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9822:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 768,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9822:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 771,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9822:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9813:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 781,
												"nodeType": "IfStatement",
												"src": "9809:89:3",
												"trueBody": {
													"id": 780,
													"nodeType": "Block",
													"src": "9834:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 776,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9884:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 775,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9876:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 774,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9876:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 777,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9876:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 773,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "9855:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 778,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9855:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 779,
															"nodeType": "RevertStatement",
															"src": "9848:39:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 787,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 782,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 760,
														"src": "9911:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 785,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9930:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 784,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9922:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 783,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9922:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 786,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9922:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9911:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 796,
												"nodeType": "IfStatement",
												"src": "9907:90:3",
												"trueBody": {
													"id": 795,
													"nodeType": "Block",
													"src": "9934:63:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 791,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9983:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 790,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9975:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 789,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9975:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 792,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9975:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 788,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 188,
																	"src": "9955:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 793,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9955:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 794,
															"nodeType": "RevertStatement",
															"src": "9948:38:3"
														}
													]
												}
											},
											{
												"expression": {
													"id": 803,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 797,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 378,
																"src": "10006:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 800,
															"indexExpression": {
																"id": 798,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 758,
																"src": "10018:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10006:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 801,
														"indexExpression": {
															"id": 799,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 760,
															"src": "10025:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10006:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 802,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 762,
														"src": "10036:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10006:35:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 804,
												"nodeType": "ExpressionStatement",
												"src": "10006:35:3"
											},
											{
												"condition": {
													"id": 805,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 764,
													"src": "10055:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 813,
												"nodeType": "IfStatement",
												"src": "10051:76:3",
												"trueBody": {
													"id": 812,
													"nodeType": "Block",
													"src": "10066:61:3",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 807,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 758,
																		"src": "10094:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 808,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 760,
																		"src": "10101:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 809,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 762,
																		"src": "10110:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 806,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 885,
																	"src": "10085:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 810,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10085:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 811,
															"nodeType": "EmitStatement",
															"src": "10080:36:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 756,
										"nodeType": "StructuredDocumentation",
										"src": "8860:836:3",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 815,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9710:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 765,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 758,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9727:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "9719:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 757,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9719:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 760,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9742:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "9734:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 759,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9734:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 762,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9759:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "9751:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 761,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9751:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 764,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9771:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "9766:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 763,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9766:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9718:63:3"
									},
									"returnParameters": {
										"id": 766,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9799:0:3"
									},
									"scope": 864,
									"src": "9701:432:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 862,
										"nodeType": "Block",
										"src": "10504:387:3",
										"statements": [
											{
												"assignments": [
													826
												],
												"declarations": [
													{
														"constant": false,
														"id": 826,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10522:16:3",
														"nodeType": "VariableDeclaration",
														"scope": 862,
														"src": "10514:24:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 825,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10514:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 831,
												"initialValue": {
													"arguments": [
														{
															"id": 828,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 818,
															"src": "10551:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 829,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 820,
															"src": "10558:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 827,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 491,
														"src": "10541:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 830,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10541:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10514:52:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 838,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 832,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 826,
														"src": "10580:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 835,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10604:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 834,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10604:7:3",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 833,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10599:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 836,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10599:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 837,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10613:3:3",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10599:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10580:36:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 861,
												"nodeType": "IfStatement",
												"src": "10576:309:3",
												"trueBody": {
													"id": 860,
													"nodeType": "Block",
													"src": "10618:267:3",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 841,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 839,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 826,
																	"src": "10636:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 840,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 822,
																	"src": "10655:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10636:24:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 849,
															"nodeType": "IfStatement",
															"src": "10632:130:3",
															"trueBody": {
																"id": 848,
																"nodeType": "Block",
																"src": "10662:100:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 843,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 820,
																					"src": "10714:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 844,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 826,
																					"src": "10723:16:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 845,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 822,
																					"src": "10741:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 842,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 178,
																				"src": "10687:26:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 846,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10687:60:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 847,
																		"nodeType": "RevertStatement",
																		"src": "10680:67:3"
																	}
																]
															}
														},
														{
															"id": 859,
															"nodeType": "UncheckedBlock",
															"src": "10775:100:3",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 851,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 818,
																				"src": "10812:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 852,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 820,
																				"src": "10819:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 855,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 853,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 826,
																					"src": "10828:16:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 854,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 822,
																					"src": "10847:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10828:24:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 856,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10854:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 850,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				755,
																				815
																			],
																			"referencedDeclaration": 815,
																			"src": "10803:8:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 857,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10803:57:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 858,
																	"nodeType": "ExpressionStatement",
																	"src": "10803:57:3"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 816,
										"nodeType": "StructuredDocumentation",
										"src": "10139:271:3",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 863,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10424:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 823,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 818,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10448:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 863,
												"src": "10440:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 817,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10440:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 820,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10463:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 863,
												"src": "10455:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 819,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10455:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 822,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10480:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 863,
												"src": "10472:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 821,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10472:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10439:47:3"
									},
									"returnParameters": {
										"id": 824,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10504:0:3"
									},
									"scope": 864,
									"src": "10415:476:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 865,
							"src": "1106:9787:3",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								876,
								885
							]
						}
					],
					"src": "105:10789:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							942
						]
					},
					"id": 943,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 866,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 867,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:4",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 942,
							"linearizedBaseContracts": [
								942
							],
							"name": "IERC20",
							"nameLocation": "214:6:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 868,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:4",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 876,
									"name": "Transfer",
									"nameLocation": "396:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 870,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "405:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 869,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 872,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "427:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 871,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 874,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "447:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 873,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:4"
									},
									"src": "390:72:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 877,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:4",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 885,
									"name": "Approval",
									"nameLocation": "627:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 884,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 879,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "636:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 878,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 881,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "659:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 880,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 883,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "684:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 882,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:4"
									},
									"src": "621:78:4"
								},
								{
									"documentation": {
										"id": 886,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:4",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 891,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 887,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:4"
									},
									"returnParameters": {
										"id": 890,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 889,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 891,
												"src": "821:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 888,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:4"
									},
									"scope": 942,
									"src": "775:55:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 892,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:4",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 899,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 899,
												"src": "931:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 893,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:4"
									},
									"returnParameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 897,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 899,
												"src": "971:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 896,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:4"
									},
									"scope": 942,
									"src": "912:68:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 900,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:4",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 909,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 905,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 902,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 909,
												"src": "1222:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 901,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 904,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 909,
												"src": "1234:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 903,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:4"
									},
									"returnParameters": {
										"id": 908,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 907,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 909,
												"src": "1267:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 906,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:4"
									},
									"scope": 942,
									"src": "1204:69:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 910,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:4",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 919,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 915,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 912,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 919,
												"src": "1567:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 911,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 914,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 919,
												"src": "1582:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 913,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:4"
									},
									"returnParameters": {
										"id": 918,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 917,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 919,
												"src": "1622:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 916,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:4"
									},
									"scope": 942,
									"src": "1548:83:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 920,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:4",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 929,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 922,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 929,
												"src": "2326:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 921,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 924,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 929,
												"src": "2343:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 923,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:4"
									},
									"returnParameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 929,
												"src": "2376:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 926,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:4"
									},
									"scope": 942,
									"src": "2309:73:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 930,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:4",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 941,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 937,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 932,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "2712:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 931,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 934,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "2726:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 933,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 936,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "2738:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 935,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:4"
									},
									"returnParameters": {
										"id": 940,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 939,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "2771:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 938,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:4"
									},
									"scope": 942,
									"src": "2690:87:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 943,
							"src": "204:2575:4",
							"usedErrors": [],
							"usedEvents": [
								876,
								885
							]
						}
					],
					"src": "106:2674:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
					"exportedSymbols": {
						"Context": [
							1044
						],
						"ERC20": [
							864
						],
						"ERC20Burnable": [
							988
						]
					},
					"id": 989,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 944,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "124:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "../ERC20.sol",
							"id": 946,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 989,
							"sourceUnit": 865,
							"src": "150:35:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 945,
										"name": "ERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 864,
										"src": "158:5:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../../utils/Context.sol",
							"id": 948,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 989,
							"sourceUnit": 1045,
							"src": "186:51:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 947,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1044,
										"src": "194:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 950,
										"name": "Context",
										"nameLocations": [
											"483:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1044,
										"src": "483:7:5"
									},
									"id": 951,
									"nodeType": "InheritanceSpecifier",
									"src": "483:7:5"
								},
								{
									"baseName": {
										"id": 952,
										"name": "ERC20",
										"nameLocations": [
											"492:5:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 864,
										"src": "492:5:5"
									},
									"id": 953,
									"nodeType": "InheritanceSpecifier",
									"src": "492:5:5"
								}
							],
							"canonicalName": "ERC20Burnable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 949,
								"nodeType": "StructuredDocumentation",
								"src": "239:208:5",
								"text": " @dev Extension of {ERC20} that allows token holders to destroy both their own\n tokens and those that they have an allowance for, in a way that can be\n recognized off-chain (via event analysis)."
							},
							"fullyImplemented": true,
							"id": 988,
							"linearizedBaseContracts": [
								988,
								864,
								189,
								1014,
								942,
								1044
							],
							"name": "ERC20Burnable",
							"nameLocation": "466:13:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 965,
										"nodeType": "Block",
										"src": "662:43:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 960,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1026,
																"src": "678:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 961,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "678:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 962,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 956,
															"src": "692:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 959,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 737,
														"src": "672:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 963,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "672:26:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 964,
												"nodeType": "ExpressionStatement",
												"src": "672:26:5"
											}
										]
									},
									"documentation": {
										"id": 954,
										"nodeType": "StructuredDocumentation",
										"src": "504:109:5",
										"text": " @dev Destroys a `value` amount of tokens from the caller.\n See {ERC20-_burn}."
									},
									"functionSelector": "42966c68",
									"id": 966,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "627:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 957,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 956,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "640:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 966,
												"src": "632:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 955,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "632:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "631:15:5"
									},
									"returnParameters": {
										"id": 958,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "662:0:5"
									},
									"scope": 988,
									"src": "618:87:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 986,
										"nodeType": "Block",
										"src": "1086:93:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 975,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 969,
															"src": "1112:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 976,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1026,
																"src": "1121:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 977,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1121:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 978,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 971,
															"src": "1135:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 974,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 863,
														"src": "1096:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 979,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1096:45:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 980,
												"nodeType": "ExpressionStatement",
												"src": "1096:45:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 982,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 969,
															"src": "1157:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 983,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 971,
															"src": "1166:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 981,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 737,
														"src": "1151:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 984,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1151:21:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 985,
												"nodeType": "ExpressionStatement",
												"src": "1151:21:5"
											}
										]
									},
									"documentation": {
										"id": 967,
										"nodeType": "StructuredDocumentation",
										"src": "711:305:5",
										"text": " @dev Destroys a `value` amount of tokens from `account`, deducting from\n the caller's allowance.\n See {ERC20-_burn} and {ERC20-allowance}.\n Requirements:\n - the caller must have allowance for ``accounts``'s tokens of at least\n `value`."
									},
									"functionSelector": "79cc6790",
									"id": 987,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burnFrom",
									"nameLocation": "1030:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 972,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 969,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1047:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 987,
												"src": "1039:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 968,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1039:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 971,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1064:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 987,
												"src": "1056:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 970,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1056:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1038:32:5"
									},
									"returnParameters": {
										"id": 973,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1086:0:5"
									},
									"scope": 988,
									"src": "1021:158:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 989,
							"src": "448:733:5",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								876,
								885
							]
						}
					],
					"src": "124:1058:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							942
						],
						"IERC20Metadata": [
							1014
						]
					},
					"id": 1015,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 990,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 992,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1015,
							"sourceUnit": 943,
							"src": "151:37:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 991,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 942,
										"src": "159:6:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 994,
										"name": "IERC20",
										"nameLocations": [
											"306:6:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 942,
										"src": "306:6:6"
									},
									"id": 995,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:6"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 993,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:6",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 1014,
							"linearizedBaseContracts": [
								1014,
								942
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 996,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:6",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 1001,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 997,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:6"
									},
									"returnParameters": {
										"id": 1000,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 999,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1001,
												"src": "417:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 998,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:6"
									},
									"scope": 1014,
									"src": "378:54:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1002,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:6",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 1007,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1003,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:6"
									},
									"returnParameters": {
										"id": 1006,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1005,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1007,
												"src": "540:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1004,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:6"
									},
									"scope": 1014,
									"src": "499:56:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1008,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:6",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 1013,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1009,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:6"
									},
									"returnParameters": {
										"id": 1012,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1011,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1013,
												"src": "674:5:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1010,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:6"
									},
									"scope": 1014,
									"src": "631:50:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1015,
							"src": "278:405:6",
							"usedErrors": [],
							"usedEvents": [
								876,
								885
							]
						}
					],
					"src": "125:559:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1044
						]
					},
					"id": 1045,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1016,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:7"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1017,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:7",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1044,
							"linearizedBaseContracts": [
								1044
							],
							"name": "Context",
							"nameLocation": "642:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1025,
										"nodeType": "Block",
										"src": "718:34:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1022,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1023,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:7",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1021,
												"id": 1024,
												"nodeType": "Return",
												"src": "728:17:7"
											}
										]
									},
									"id": 1026,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1018,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:7"
									},
									"returnParameters": {
										"id": 1021,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1020,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1026,
												"src": "709:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1019,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:7"
									},
									"scope": 1044,
									"src": "656:96:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1034,
										"nodeType": "Block",
										"src": "825:32:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1031,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1032,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:7",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1030,
												"id": 1033,
												"nodeType": "Return",
												"src": "835:15:7"
											}
										]
									},
									"id": 1035,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1027,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:7"
									},
									"returnParameters": {
										"id": 1030,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1029,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1035,
												"src": "809:14:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1028,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:7"
									},
									"scope": 1044,
									"src": "758:99:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1042,
										"nodeType": "Block",
										"src": "935:25:7",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1040,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1039,
												"id": 1041,
												"nodeType": "Return",
												"src": "945:8:7"
											}
										]
									},
									"id": 1043,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1036,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:7"
									},
									"returnParameters": {
										"id": 1039,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1038,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1043,
												"src": "926:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1037,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:7"
									},
									"scope": 1044,
									"src": "863:97:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1045,
							"src": "624:338:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/cryptography/ECDSA.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
					"exportedSymbols": {
						"ECDSA": [
							1392
						]
					},
					"id": 1393,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1046,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ECDSA",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1047,
								"nodeType": "StructuredDocumentation",
								"src": "138:205:8",
								"text": " @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."
							},
							"fullyImplemented": true,
							"id": 1392,
							"linearizedBaseContracts": [
								1392
							],
							"name": "ECDSA",
							"nameLocation": "352:5:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ECDSA.RecoverError",
									"id": 1052,
									"members": [
										{
											"id": 1048,
											"name": "NoError",
											"nameLocation": "392:7:8",
											"nodeType": "EnumValue",
											"src": "392:7:8"
										},
										{
											"id": 1049,
											"name": "InvalidSignature",
											"nameLocation": "409:16:8",
											"nodeType": "EnumValue",
											"src": "409:16:8"
										},
										{
											"id": 1050,
											"name": "InvalidSignatureLength",
											"nameLocation": "435:22:8",
											"nodeType": "EnumValue",
											"src": "435:22:8"
										},
										{
											"id": 1051,
											"name": "InvalidSignatureS",
											"nameLocation": "467:17:8",
											"nodeType": "EnumValue",
											"src": "467:17:8"
										}
									],
									"name": "RecoverError",
									"nameLocation": "369:12:8",
									"nodeType": "EnumDefinition",
									"src": "364:126:8"
								},
								{
									"documentation": {
										"id": 1053,
										"nodeType": "StructuredDocumentation",
										"src": "496:63:8",
										"text": " @dev The signature derives the `address(0)`."
									},
									"errorSelector": "f645eedf",
									"id": 1055,
									"name": "ECDSAInvalidSignature",
									"nameLocation": "570:21:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1054,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "591:2:8"
									},
									"src": "564:30:8"
								},
								{
									"documentation": {
										"id": 1056,
										"nodeType": "StructuredDocumentation",
										"src": "600:60:8",
										"text": " @dev The signature has an invalid length."
									},
									"errorSelector": "fce698f7",
									"id": 1060,
									"name": "ECDSAInvalidSignatureLength",
									"nameLocation": "671:27:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1059,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1058,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "707:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1060,
												"src": "699:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1057,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "699:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "698:16:8"
									},
									"src": "665:50:8"
								},
								{
									"documentation": {
										"id": 1061,
										"nodeType": "StructuredDocumentation",
										"src": "721:85:8",
										"text": " @dev The signature has an S value that is in the upper half order."
									},
									"errorSelector": "d78bce0c",
									"id": 1065,
									"name": "ECDSAInvalidSignatureS",
									"nameLocation": "817:22:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1064,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1063,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "848:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1065,
												"src": "840:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1062,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "840:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "839:11:8"
									},
									"src": "811:40:8"
								},
								{
									"body": {
										"id": 1117,
										"nodeType": "Block",
										"src": "2285:622:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1083,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1080,
															"name": "signature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1070,
															"src": "2299:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1081,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2309:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2299:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "3635",
														"id": 1082,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2319:2:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_65_by_1",
															"typeString": "int_const 65"
														},
														"value": "65"
													},
													"src": "2299:22:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1115,
													"nodeType": "Block",
													"src": "2793:108:8",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1104,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2823:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1103,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2815:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1102,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2815:7:8",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1105,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2815:10:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 1106,
																			"name": "RecoverError",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1052,
																			"src": "2827:12:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_RecoverError_$1052_$",
																				"typeString": "type(enum ECDSA.RecoverError)"
																			}
																		},
																		"id": 1107,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "2840:22:8",
																		"memberName": "InvalidSignatureLength",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1050,
																		"src": "2827:35:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_RecoverError_$1052",
																			"typeString": "enum ECDSA.RecoverError"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 1110,
																					"name": "signature",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1070,
																					"src": "2872:9:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 1111,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2882:6:8",
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "2872:16:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1109,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2864:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bytes32_$",
																				"typeString": "type(bytes32)"
																			},
																			"typeName": {
																				"id": 1108,
																				"name": "bytes32",
																				"nodeType": "ElementaryTypeName",
																				"src": "2864:7:8",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1112,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2864:25:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"id": 1113,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2814:76:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1052_$_t_bytes32_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"functionReturnParameters": 1079,
															"id": 1114,
															"nodeType": "Return",
															"src": "2807:83:8"
														}
													]
												},
												"id": 1116,
												"nodeType": "IfStatement",
												"src": "2295:606:8",
												"trueBody": {
													"id": 1101,
													"nodeType": "Block",
													"src": "2323:464:8",
													"statements": [
														{
															"assignments": [
																1085
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1085,
																	"mutability": "mutable",
																	"name": "r",
																	"nameLocation": "2345:1:8",
																	"nodeType": "VariableDeclaration",
																	"scope": 1101,
																	"src": "2337:9:8",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 1084,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "2337:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1086,
															"nodeType": "VariableDeclarationStatement",
															"src": "2337:9:8"
														},
														{
															"assignments": [
																1088
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1088,
																	"mutability": "mutable",
																	"name": "s",
																	"nameLocation": "2368:1:8",
																	"nodeType": "VariableDeclaration",
																	"scope": 1101,
																	"src": "2360:9:8",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 1087,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "2360:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1089,
															"nodeType": "VariableDeclarationStatement",
															"src": "2360:9:8"
														},
														{
															"assignments": [
																1091
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1091,
																	"mutability": "mutable",
																	"name": "v",
																	"nameLocation": "2389:1:8",
																	"nodeType": "VariableDeclaration",
																	"scope": 1101,
																	"src": "2383:7:8",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	"typeName": {
																		"id": 1090,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "2383:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1092,
															"nodeType": "VariableDeclarationStatement",
															"src": "2383:7:8"
														},
														{
															"AST": {
																"nativeSrc": "2560:171:8",
																"nodeType": "YulBlock",
																"src": "2560:171:8",
																"statements": [
																	{
																		"nativeSrc": "2578:32:8",
																		"nodeType": "YulAssignment",
																		"src": "2578:32:8",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "signature",
																							"nativeSrc": "2593:9:8",
																							"nodeType": "YulIdentifier",
																							"src": "2593:9:8"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "2604:4:8",
																							"nodeType": "YulLiteral",
																							"src": "2604:4:8",
																							"type": "",
																							"value": "0x20"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "2589:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "2589:3:8"
																					},
																					"nativeSrc": "2589:20:8",
																					"nodeType": "YulFunctionCall",
																					"src": "2589:20:8"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "2583:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "2583:5:8"
																			},
																			"nativeSrc": "2583:27:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2583:27:8"
																		},
																		"variableNames": [
																			{
																				"name": "r",
																				"nativeSrc": "2578:1:8",
																				"nodeType": "YulIdentifier",
																				"src": "2578:1:8"
																			}
																		]
																	},
																	{
																		"nativeSrc": "2627:32:8",
																		"nodeType": "YulAssignment",
																		"src": "2627:32:8",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "signature",
																							"nativeSrc": "2642:9:8",
																							"nodeType": "YulIdentifier",
																							"src": "2642:9:8"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "2653:4:8",
																							"nodeType": "YulLiteral",
																							"src": "2653:4:8",
																							"type": "",
																							"value": "0x40"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "2638:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "2638:3:8"
																					},
																					"nativeSrc": "2638:20:8",
																					"nodeType": "YulFunctionCall",
																					"src": "2638:20:8"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "2632:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "2632:5:8"
																			},
																			"nativeSrc": "2632:27:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2632:27:8"
																		},
																		"variableNames": [
																			{
																				"name": "s",
																				"nativeSrc": "2627:1:8",
																				"nodeType": "YulIdentifier",
																				"src": "2627:1:8"
																			}
																		]
																	},
																	{
																		"nativeSrc": "2676:41:8",
																		"nodeType": "YulAssignment",
																		"src": "2676:41:8",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2686:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2686:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "signature",
																									"nativeSrc": "2699:9:8",
																									"nodeType": "YulIdentifier",
																									"src": "2699:9:8"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2710:4:8",
																									"nodeType": "YulLiteral",
																									"src": "2710:4:8",
																									"type": "",
																									"value": "0x60"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2695:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "2695:3:8"
																							},
																							"nativeSrc": "2695:20:8",
																							"nodeType": "YulFunctionCall",
																							"src": "2695:20:8"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "2689:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "2689:5:8"
																					},
																					"nativeSrc": "2689:27:8",
																					"nodeType": "YulFunctionCall",
																					"src": "2689:27:8"
																				}
																			],
																			"functionName": {
																				"name": "byte",
																				"nativeSrc": "2681:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "2681:4:8"
																			},
																			"nativeSrc": "2681:36:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2681:36:8"
																		},
																		"variableNames": [
																			{
																				"name": "v",
																				"nativeSrc": "2676:1:8",
																				"nodeType": "YulIdentifier",
																				"src": "2676:1:8"
																			}
																		]
																	}
																]
															},
															"evmVersion": "cancun",
															"externalReferences": [
																{
																	"declaration": 1085,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2578:1:8",
																	"valueSize": 1
																},
																{
																	"declaration": 1088,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2627:1:8",
																	"valueSize": 1
																},
																{
																	"declaration": 1070,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2593:9:8",
																	"valueSize": 1
																},
																{
																	"declaration": 1070,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2642:9:8",
																	"valueSize": 1
																},
																{
																	"declaration": 1070,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2699:9:8",
																	"valueSize": 1
																},
																{
																	"declaration": 1091,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2676:1:8",
																	"valueSize": 1
																}
															],
															"flags": [
																"memory-safe"
															],
															"id": 1093,
															"nodeType": "InlineAssembly",
															"src": "2535:196:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1095,
																		"name": "hash",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1068,
																		"src": "2762:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 1096,
																		"name": "v",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1091,
																		"src": "2768:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	{
																		"id": 1097,
																		"name": "r",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1085,
																		"src": "2771:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 1098,
																		"name": "s",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1088,
																		"src": "2774:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 1094,
																	"name": "tryRecover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		1118,
																		1198,
																		1306
																	],
																	"referencedDeclaration": 1306,
																	"src": "2751:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1052_$_t_bytes32_$",
																		"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"
																	}
																},
																"id": 1099,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2751:25:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1052_$_t_bytes32_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"functionReturnParameters": 1079,
															"id": 1100,
															"nodeType": "Return",
															"src": "2744:32:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1066,
										"nodeType": "StructuredDocumentation",
										"src": "857:1267:8",
										"text": " @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n return address(0) without also returning an error description. Errors are documented using an enum (error type)\n and a bytes32 providing additional information about the error.\n If no error is returned, then the address can be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]"
									},
									"id": 1118,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryRecover",
									"nameLocation": "2138:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1071,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1068,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "2166:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1118,
												"src": "2158:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1067,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2158:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1070,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "2193:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1118,
												"src": "2180:22:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1069,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2180:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2148:60:8"
									},
									"returnParameters": {
										"id": 1079,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1073,
												"mutability": "mutable",
												"name": "recovered",
												"nameLocation": "2240:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1118,
												"src": "2232:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1072,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2232:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1076,
												"mutability": "mutable",
												"name": "err",
												"nameLocation": "2264:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 1118,
												"src": "2251:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$1052",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 1075,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1074,
														"name": "RecoverError",
														"nameLocations": [
															"2251:12:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1052,
														"src": "2251:12:8"
													},
													"referencedDeclaration": 1052,
													"src": "2251:12:8",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$1052",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1078,
												"mutability": "mutable",
												"name": "errArg",
												"nameLocation": "2277:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1118,
												"src": "2269:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1077,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2269:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2231:53:8"
									},
									"scope": 1392,
									"src": "2129:778:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1147,
										"nodeType": "Block",
										"src": "3801:168:8",
										"statements": [
											{
												"assignments": [
													1129,
													1132,
													1134
												],
												"declarations": [
													{
														"constant": false,
														"id": 1129,
														"mutability": "mutable",
														"name": "recovered",
														"nameLocation": "3820:9:8",
														"nodeType": "VariableDeclaration",
														"scope": 1147,
														"src": "3812:17:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1128,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3812:7:8",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1132,
														"mutability": "mutable",
														"name": "error",
														"nameLocation": "3844:5:8",
														"nodeType": "VariableDeclaration",
														"scope": 1147,
														"src": "3831:18:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$1052",
															"typeString": "enum ECDSA.RecoverError"
														},
														"typeName": {
															"id": 1131,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1130,
																"name": "RecoverError",
																"nameLocations": [
																	"3831:12:8"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1052,
																"src": "3831:12:8"
															},
															"referencedDeclaration": 1052,
															"src": "3831:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$1052",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1134,
														"mutability": "mutable",
														"name": "errorArg",
														"nameLocation": "3859:8:8",
														"nodeType": "VariableDeclaration",
														"scope": 1147,
														"src": "3851:16:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1133,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "3851:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1139,
												"initialValue": {
													"arguments": [
														{
															"id": 1136,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1121,
															"src": "3882:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1137,
															"name": "signature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1123,
															"src": "3888:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1135,
														"name": "tryRecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1118,
															1198,
															1306
														],
														"referencedDeclaration": 1118,
														"src": "3871:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$1052_$_t_bytes32_$",
															"typeString": "function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError,bytes32)"
														}
													},
													"id": 1138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3871:27:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1052_$_t_bytes32_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3811:87:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1141,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1132,
															"src": "3920:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$1052",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														{
															"id": 1142,
															"name": "errorArg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1134,
															"src": "3927:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_RecoverError_$1052",
																"typeString": "enum ECDSA.RecoverError"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1140,
														"name": "_throwError",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1391,
														"src": "3908:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_enum$_RecoverError_$1052_$_t_bytes32_$returns$__$",
															"typeString": "function (enum ECDSA.RecoverError,bytes32) pure"
														}
													},
													"id": 1143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3908:28:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1144,
												"nodeType": "ExpressionStatement",
												"src": "3908:28:8"
											},
											{
												"expression": {
													"id": 1145,
													"name": "recovered",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1129,
													"src": "3953:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1127,
												"id": 1146,
												"nodeType": "Return",
												"src": "3946:16:8"
											}
										]
									},
									"documentation": {
										"id": 1119,
										"nodeType": "StructuredDocumentation",
										"src": "2913:796:8",
										"text": " @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it."
									},
									"id": 1148,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recover",
									"nameLocation": "3723:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1121,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "3739:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1148,
												"src": "3731:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1120,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3731:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1123,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "3758:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1148,
												"src": "3745:22:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1122,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3745:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3730:38:8"
									},
									"returnParameters": {
										"id": 1127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1126,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1148,
												"src": "3792:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3792:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3791:9:8"
									},
									"scope": 1392,
									"src": "3714:255:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1197,
										"nodeType": "Block",
										"src": "4348:342:8",
										"statements": [
											{
												"id": 1196,
												"nodeType": "UncheckedBlock",
												"src": "4358:326:8",
												"statements": [
													{
														"assignments": [
															1166
														],
														"declarations": [
															{
																"constant": false,
																"id": 1166,
																"mutability": "mutable",
																"name": "s",
																"nameLocation": "4390:1:8",
																"nodeType": "VariableDeclaration",
																"scope": 1196,
																"src": "4382:9:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																"typeName": {
																	"id": 1165,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "4382:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1173,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															"id": 1172,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1167,
																"name": "vs",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1155,
																"src": "4394:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666",
																		"id": 1170,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4407:66:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1",
																			"typeString": "int_const 5789...(69 digits omitted)...9967"
																		},
																		"value": "0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1",
																			"typeString": "int_const 5789...(69 digits omitted)...9967"
																		}
																	],
																	"id": 1169,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4399:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes32_$",
																		"typeString": "type(bytes32)"
																	},
																	"typeName": {
																		"id": 1168,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "4399:7:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 1171,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4399:75:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"src": "4394:80:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4382:92:8"
													},
													{
														"assignments": [
															1175
														],
														"declarations": [
															{
																"constant": false,
																"id": 1175,
																"mutability": "mutable",
																"name": "v",
																"nameLocation": "4591:1:8",
																"nodeType": "VariableDeclaration",
																"scope": 1196,
																"src": "4585:7:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"typeName": {
																	"id": 1174,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "4585:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1188,
														"initialValue": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1186,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1183,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"arguments": [
																						{
																							"id": 1180,
																							"name": "vs",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1155,
																							"src": "4610:2:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						],
																						"id": 1179,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "4602:7:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_uint256_$",
																							"typeString": "type(uint256)"
																						},
																						"typeName": {
																							"id": 1178,
																							"name": "uint256",
																							"nodeType": "ElementaryTypeName",
																							"src": "4602:7:8",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1181,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "4602:11:8",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">>",
																				"rightExpression": {
																					"hexValue": "323535",
																					"id": 1182,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "4617:3:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_255_by_1",
																						"typeString": "int_const 255"
																					},
																					"value": "255"
																				},
																				"src": "4602:18:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1184,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "4601:20:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "3237",
																		"id": 1185,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4624:2:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_27_by_1",
																			"typeString": "int_const 27"
																		},
																		"value": "27"
																	},
																	"src": "4601:25:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1177,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4595:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 1176,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "4595:5:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1187,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4595:32:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4585:42:8"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 1190,
																	"name": "hash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1151,
																	"src": "4659:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 1191,
																	"name": "v",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1175,
																	"src": "4665:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																{
																	"id": 1192,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1153,
																	"src": "4668:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 1193,
																	"name": "s",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1166,
																	"src": "4671:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"id": 1189,
																"name": "tryRecover",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1118,
																	1198,
																	1306
																],
																"referencedDeclaration": 1306,
																"src": "4648:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1052_$_t_bytes32_$",
																	"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"id": 1194,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4648:25:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1052_$_t_bytes32_$",
																"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
															}
														},
														"functionReturnParameters": 1164,
														"id": 1195,
														"nodeType": "Return",
														"src": "4641:32:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1149,
										"nodeType": "StructuredDocumentation",
										"src": "3975:205:8",
										"text": " @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[ERC-2098 short signatures]"
									},
									"id": 1198,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryRecover",
									"nameLocation": "4194:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1151,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "4222:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1198,
												"src": "4214:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1150,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4214:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1153,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "4244:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1198,
												"src": "4236:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1152,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4236:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1155,
												"mutability": "mutable",
												"name": "vs",
												"nameLocation": "4263:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1198,
												"src": "4255:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1154,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4255:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4204:67:8"
									},
									"returnParameters": {
										"id": 1164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1158,
												"mutability": "mutable",
												"name": "recovered",
												"nameLocation": "4303:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1198,
												"src": "4295:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1157,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4295:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1161,
												"mutability": "mutable",
												"name": "err",
												"nameLocation": "4327:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 1198,
												"src": "4314:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$1052",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 1160,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1159,
														"name": "RecoverError",
														"nameLocations": [
															"4314:12:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1052,
														"src": "4314:12:8"
													},
													"referencedDeclaration": 1052,
													"src": "4314:12:8",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$1052",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1163,
												"mutability": "mutable",
												"name": "errArg",
												"nameLocation": "4340:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1198,
												"src": "4332:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1162,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4332:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4294:53:8"
									},
									"scope": 1392,
									"src": "4185:505:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1230,
										"nodeType": "Block",
										"src": "4903:164:8",
										"statements": [
											{
												"assignments": [
													1211,
													1214,
													1216
												],
												"declarations": [
													{
														"constant": false,
														"id": 1211,
														"mutability": "mutable",
														"name": "recovered",
														"nameLocation": "4922:9:8",
														"nodeType": "VariableDeclaration",
														"scope": 1230,
														"src": "4914:17:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1210,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4914:7:8",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1214,
														"mutability": "mutable",
														"name": "error",
														"nameLocation": "4946:5:8",
														"nodeType": "VariableDeclaration",
														"scope": 1230,
														"src": "4933:18:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$1052",
															"typeString": "enum ECDSA.RecoverError"
														},
														"typeName": {
															"id": 1213,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1212,
																"name": "RecoverError",
																"nameLocations": [
																	"4933:12:8"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1052,
																"src": "4933:12:8"
															},
															"referencedDeclaration": 1052,
															"src": "4933:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$1052",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1216,
														"mutability": "mutable",
														"name": "errorArg",
														"nameLocation": "4961:8:8",
														"nodeType": "VariableDeclaration",
														"scope": 1230,
														"src": "4953:16:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1215,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "4953:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1222,
												"initialValue": {
													"arguments": [
														{
															"id": 1218,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1201,
															"src": "4984:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1219,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1203,
															"src": "4990:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1220,
															"name": "vs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1205,
															"src": "4993:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1217,
														"name": "tryRecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1118,
															1198,
															1306
														],
														"referencedDeclaration": 1198,
														"src": "4973:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1052_$_t_bytes32_$",
															"typeString": "function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"
														}
													},
													"id": 1221,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4973:23:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1052_$_t_bytes32_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4913:83:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1224,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1214,
															"src": "5018:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$1052",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														{
															"id": 1225,
															"name": "errorArg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1216,
															"src": "5025:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_RecoverError_$1052",
																"typeString": "enum ECDSA.RecoverError"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1223,
														"name": "_throwError",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1391,
														"src": "5006:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_enum$_RecoverError_$1052_$_t_bytes32_$returns$__$",
															"typeString": "function (enum ECDSA.RecoverError,bytes32) pure"
														}
													},
													"id": 1226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5006:28:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1227,
												"nodeType": "ExpressionStatement",
												"src": "5006:28:8"
											},
											{
												"expression": {
													"id": 1228,
													"name": "recovered",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1211,
													"src": "5051:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1209,
												"id": 1229,
												"nodeType": "Return",
												"src": "5044:16:8"
											}
										]
									},
									"documentation": {
										"id": 1199,
										"nodeType": "StructuredDocumentation",
										"src": "4696:116:8",
										"text": " @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately."
									},
									"id": 1231,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recover",
									"nameLocation": "4826:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1201,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "4842:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "4834:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1200,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4834:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1203,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "4856:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "4848:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1202,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4848:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1205,
												"mutability": "mutable",
												"name": "vs",
												"nameLocation": "4867:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "4859:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1204,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4859:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4833:37:8"
									},
									"returnParameters": {
										"id": 1209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1208,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "4894:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1207,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4894:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4893:9:8"
									},
									"scope": 1392,
									"src": "4817:250:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1305,
										"nodeType": "Block",
										"src": "5382:1372:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1252,
																"name": "s",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1240,
																"src": "6278:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 1251,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6270:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 1250,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "6270:7:8",
																"typeDescriptions": {}
															}
														},
														"id": 1253,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6270:10:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130",
														"id": 1254,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6283:66:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1",
															"typeString": "int_const 5789...(69 digits omitted)...7168"
														},
														"value": "0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"
													},
													"src": "6270:79:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1266,
												"nodeType": "IfStatement",
												"src": "6266:164:8",
												"trueBody": {
													"id": 1265,
													"nodeType": "Block",
													"src": "6351:79:8",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1258,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6381:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1257,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6373:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1256,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6373:7:8",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1259,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6373:10:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 1260,
																			"name": "RecoverError",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1052,
																			"src": "6385:12:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_RecoverError_$1052_$",
																				"typeString": "type(enum ECDSA.RecoverError)"
																			}
																		},
																		"id": 1261,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "6398:17:8",
																		"memberName": "InvalidSignatureS",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1051,
																		"src": "6385:30:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_RecoverError_$1052",
																			"typeString": "enum ECDSA.RecoverError"
																		}
																	},
																	{
																		"id": 1262,
																		"name": "s",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1240,
																		"src": "6417:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"id": 1263,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6372:47:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1052_$_t_bytes32_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"functionReturnParameters": 1249,
															"id": 1264,
															"nodeType": "Return",
															"src": "6365:54:8"
														}
													]
												}
											},
											{
												"assignments": [
													1268
												],
												"declarations": [
													{
														"constant": false,
														"id": 1268,
														"mutability": "mutable",
														"name": "signer",
														"nameLocation": "6532:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 1305,
														"src": "6524:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1267,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6524:7:8",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1275,
												"initialValue": {
													"arguments": [
														{
															"id": 1270,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1234,
															"src": "6551:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1271,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1236,
															"src": "6557:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 1272,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1238,
															"src": "6560:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1273,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1240,
															"src": "6563:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1269,
														"name": "ecrecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967290,
														"src": "6541:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
														}
													},
													"id": 1274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6541:24:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6524:41:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1281,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1276,
														"name": "signer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1268,
														"src": "6579:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1279,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6597:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1278,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6589:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1277,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6589:7:8",
																"typeDescriptions": {}
															}
														},
														"id": 1280,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6589:10:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6579:20:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1295,
												"nodeType": "IfStatement",
												"src": "6575:113:8",
												"trueBody": {
													"id": 1294,
													"nodeType": "Block",
													"src": "6601:87:8",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1284,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6631:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1283,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6623:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1282,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6623:7:8",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1285,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6623:10:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 1286,
																			"name": "RecoverError",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1052,
																			"src": "6635:12:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_RecoverError_$1052_$",
																				"typeString": "type(enum ECDSA.RecoverError)"
																			}
																		},
																		"id": 1287,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "6648:16:8",
																		"memberName": "InvalidSignature",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1049,
																		"src": "6635:29:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_RecoverError_$1052",
																			"typeString": "enum ECDSA.RecoverError"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1290,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6674:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1289,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6666:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bytes32_$",
																				"typeString": "type(bytes32)"
																			},
																			"typeName": {
																				"id": 1288,
																				"name": "bytes32",
																				"nodeType": "ElementaryTypeName",
																				"src": "6666:7:8",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1291,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6666:10:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"id": 1292,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6622:55:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1052_$_t_bytes32_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"functionReturnParameters": 1249,
															"id": 1293,
															"nodeType": "Return",
															"src": "6615:62:8"
														}
													]
												}
											},
											{
												"expression": {
													"components": [
														{
															"id": 1296,
															"name": "signer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1268,
															"src": "6706:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1297,
																"name": "RecoverError",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1052,
																"src": "6714:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_RecoverError_$1052_$",
																	"typeString": "type(enum ECDSA.RecoverError)"
																}
															},
															"id": 1298,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "6727:7:8",
															"memberName": "NoError",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1048,
															"src": "6714:20:8",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$1052",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1301,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6744:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1300,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6736:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1299,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "6736:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1302,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6736:10:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"id": 1303,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "6705:42:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1052_$_t_bytes32_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
													}
												},
												"functionReturnParameters": 1249,
												"id": 1304,
												"nodeType": "Return",
												"src": "6698:49:8"
											}
										]
									},
									"documentation": {
										"id": 1232,
										"nodeType": "StructuredDocumentation",
										"src": "5073:125:8",
										"text": " @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately."
									},
									"id": 1306,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryRecover",
									"nameLocation": "5212:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1234,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "5240:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1306,
												"src": "5232:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1233,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5232:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1236,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "5260:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1306,
												"src": "5254:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1235,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5254:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1238,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "5279:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1306,
												"src": "5271:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1237,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5271:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1240,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "5298:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1306,
												"src": "5290:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1239,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5290:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5222:83:8"
									},
									"returnParameters": {
										"id": 1249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1243,
												"mutability": "mutable",
												"name": "recovered",
												"nameLocation": "5337:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1306,
												"src": "5329:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1242,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5329:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1246,
												"mutability": "mutable",
												"name": "err",
												"nameLocation": "5361:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 1306,
												"src": "5348:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$1052",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 1245,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1244,
														"name": "RecoverError",
														"nameLocations": [
															"5348:12:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1052,
														"src": "5348:12:8"
													},
													"referencedDeclaration": 1052,
													"src": "5348:12:8",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$1052",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1248,
												"mutability": "mutable",
												"name": "errArg",
												"nameLocation": "5374:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1306,
												"src": "5366:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1247,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5366:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5328:53:8"
									},
									"scope": 1392,
									"src": "5203:1551:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1341,
										"nodeType": "Block",
										"src": "6981:166:8",
										"statements": [
											{
												"assignments": [
													1321,
													1324,
													1326
												],
												"declarations": [
													{
														"constant": false,
														"id": 1321,
														"mutability": "mutable",
														"name": "recovered",
														"nameLocation": "7000:9:8",
														"nodeType": "VariableDeclaration",
														"scope": 1341,
														"src": "6992:17:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1320,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6992:7:8",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1324,
														"mutability": "mutable",
														"name": "error",
														"nameLocation": "7024:5:8",
														"nodeType": "VariableDeclaration",
														"scope": 1341,
														"src": "7011:18:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$1052",
															"typeString": "enum ECDSA.RecoverError"
														},
														"typeName": {
															"id": 1323,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1322,
																"name": "RecoverError",
																"nameLocations": [
																	"7011:12:8"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1052,
																"src": "7011:12:8"
															},
															"referencedDeclaration": 1052,
															"src": "7011:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$1052",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1326,
														"mutability": "mutable",
														"name": "errorArg",
														"nameLocation": "7039:8:8",
														"nodeType": "VariableDeclaration",
														"scope": 1341,
														"src": "7031:16:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1325,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "7031:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1333,
												"initialValue": {
													"arguments": [
														{
															"id": 1328,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1309,
															"src": "7062:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1329,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1311,
															"src": "7068:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 1330,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1313,
															"src": "7071:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1331,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1315,
															"src": "7074:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1327,
														"name": "tryRecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1118,
															1198,
															1306
														],
														"referencedDeclaration": 1306,
														"src": "7051:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1052_$_t_bytes32_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"
														}
													},
													"id": 1332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7051:25:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1052_$_t_bytes32_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6991:85:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1335,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1324,
															"src": "7098:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$1052",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														{
															"id": 1336,
															"name": "errorArg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1326,
															"src": "7105:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_RecoverError_$1052",
																"typeString": "enum ECDSA.RecoverError"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1334,
														"name": "_throwError",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1391,
														"src": "7086:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_enum$_RecoverError_$1052_$_t_bytes32_$returns$__$",
															"typeString": "function (enum ECDSA.RecoverError,bytes32) pure"
														}
													},
													"id": 1337,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7086:28:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1338,
												"nodeType": "ExpressionStatement",
												"src": "7086:28:8"
											},
											{
												"expression": {
													"id": 1339,
													"name": "recovered",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1321,
													"src": "7131:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1319,
												"id": 1340,
												"nodeType": "Return",
												"src": "7124:16:8"
											}
										]
									},
									"documentation": {
										"id": 1307,
										"nodeType": "StructuredDocumentation",
										"src": "6760:122:8",
										"text": " @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."
									},
									"id": 1342,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recover",
									"nameLocation": "6896:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1309,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "6912:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1342,
												"src": "6904:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1308,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6904:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1311,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "6924:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1342,
												"src": "6918:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1310,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "6918:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1313,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "6935:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1342,
												"src": "6927:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1312,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6927:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1315,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "6946:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1342,
												"src": "6938:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1314,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6938:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6903:45:8"
									},
									"returnParameters": {
										"id": 1319,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1318,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1342,
												"src": "6972:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1317,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6972:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6971:9:8"
									},
									"scope": 1392,
									"src": "6887:260:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1390,
										"nodeType": "Block",
										"src": "7352:460:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_enum$_RecoverError_$1052",
														"typeString": "enum ECDSA.RecoverError"
													},
													"id": 1354,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1351,
														"name": "error",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1346,
														"src": "7366:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$1052",
															"typeString": "enum ECDSA.RecoverError"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"id": 1352,
															"name": "RecoverError",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1052,
															"src": "7375:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_RecoverError_$1052_$",
																"typeString": "type(enum ECDSA.RecoverError)"
															}
														},
														"id": 1353,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "7388:7:8",
														"memberName": "NoError",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1048,
														"src": "7375:20:8",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$1052",
															"typeString": "enum ECDSA.RecoverError"
														}
													},
													"src": "7366:29:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_enum$_RecoverError_$1052",
															"typeString": "enum ECDSA.RecoverError"
														},
														"id": 1360,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1357,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1346,
															"src": "7462:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$1052",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 1358,
																"name": "RecoverError",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1052,
																"src": "7471:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_RecoverError_$1052_$",
																	"typeString": "type(enum ECDSA.RecoverError)"
																}
															},
															"id": 1359,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "7484:16:8",
															"memberName": "InvalidSignature",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1049,
															"src": "7471:29:8",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$1052",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"src": "7462:38:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_enum$_RecoverError_$1052",
																"typeString": "enum ECDSA.RecoverError"
															},
															"id": 1368,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1365,
																"name": "error",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1346,
																"src": "7567:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_RecoverError_$1052",
																	"typeString": "enum ECDSA.RecoverError"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1366,
																	"name": "RecoverError",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1052,
																	"src": "7576:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_RecoverError_$1052_$",
																		"typeString": "type(enum ECDSA.RecoverError)"
																	}
																},
																"id": 1367,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "7589:22:8",
																"memberName": "InvalidSignatureLength",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1050,
																"src": "7576:35:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_RecoverError_$1052",
																	"typeString": "enum ECDSA.RecoverError"
																}
															},
															"src": "7567:44:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_enum$_RecoverError_$1052",
																	"typeString": "enum ECDSA.RecoverError"
																},
																"id": 1380,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1377,
																	"name": "error",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1346,
																	"src": "7701:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_RecoverError_$1052",
																		"typeString": "enum ECDSA.RecoverError"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"id": 1378,
																		"name": "RecoverError",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1052,
																		"src": "7710:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_RecoverError_$1052_$",
																			"typeString": "type(enum ECDSA.RecoverError)"
																		}
																	},
																	"id": 1379,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "7723:17:8",
																	"memberName": "InvalidSignatureS",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1051,
																	"src": "7710:30:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_RecoverError_$1052",
																		"typeString": "enum ECDSA.RecoverError"
																	}
																},
																"src": "7701:39:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1386,
															"nodeType": "IfStatement",
															"src": "7697:109:8",
															"trueBody": {
																"id": 1385,
																"nodeType": "Block",
																"src": "7742:64:8",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1382,
																					"name": "errorArg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1348,
																					"src": "7786:8:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				],
																				"id": 1381,
																				"name": "ECDSAInvalidSignatureS",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1065,
																				"src": "7763:22:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_bytes32_$returns$_t_error_$",
																					"typeString": "function (bytes32) pure returns (error)"
																				}
																			},
																			"id": 1383,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7763:32:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 1384,
																		"nodeType": "RevertStatement",
																		"src": "7756:39:8"
																	}
																]
															}
														},
														"id": 1387,
														"nodeType": "IfStatement",
														"src": "7563:243:8",
														"trueBody": {
															"id": 1376,
															"nodeType": "Block",
															"src": "7613:78:8",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"id": 1372,
																						"name": "errorArg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1348,
																						"src": "7670:8:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					],
																					"id": 1371,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "7662:7:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 1370,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "7662:7:8",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1373,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "7662:17:8",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1369,
																			"name": "ECDSAInvalidSignatureLength",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1060,
																			"src": "7634:27:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																				"typeString": "function (uint256) pure returns (error)"
																			}
																		},
																		"id": 1374,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7634:46:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 1375,
																	"nodeType": "RevertStatement",
																	"src": "7627:53:8"
																}
															]
														}
													},
													"id": 1388,
													"nodeType": "IfStatement",
													"src": "7458:348:8",
													"trueBody": {
														"id": 1364,
														"nodeType": "Block",
														"src": "7502:55:8",
														"statements": [
															{
																"errorCall": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1361,
																		"name": "ECDSAInvalidSignature",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1055,
																		"src": "7523:21:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																			"typeString": "function () pure returns (error)"
																		}
																	},
																	"id": 1362,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7523:23:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 1363,
																"nodeType": "RevertStatement",
																"src": "7516:30:8"
															}
														]
													}
												},
												"id": 1389,
												"nodeType": "IfStatement",
												"src": "7362:444:8",
												"trueBody": {
													"id": 1356,
													"nodeType": "Block",
													"src": "7397:55:8",
													"statements": [
														{
															"functionReturnParameters": 1350,
															"id": 1355,
															"nodeType": "Return",
															"src": "7411:7:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1343,
										"nodeType": "StructuredDocumentation",
										"src": "7153:122:8",
										"text": " @dev Optionally reverts with the corresponding custom error according to the `error` argument provided."
									},
									"id": 1391,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_throwError",
									"nameLocation": "7289:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1346,
												"mutability": "mutable",
												"name": "error",
												"nameLocation": "7314:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1391,
												"src": "7301:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$1052",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 1345,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1344,
														"name": "RecoverError",
														"nameLocations": [
															"7301:12:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1052,
														"src": "7301:12:8"
													},
													"referencedDeclaration": 1052,
													"src": "7301:12:8",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$1052",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1348,
												"mutability": "mutable",
												"name": "errorArg",
												"nameLocation": "7329:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1391,
												"src": "7321:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1347,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7321:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7300:38:8"
									},
									"returnParameters": {
										"id": 1350,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7352:0:8"
									},
									"scope": 1392,
									"src": "7280:532:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1393,
							"src": "344:7470:8",
							"usedErrors": [
								1055,
								1060,
								1065
							],
							"usedEvents": []
						}
					],
					"src": "112:7703:8"
				},
				"id": 8
			},
			"contracts/LiquidityAccelerationToken.sol": {
				"ast": {
					"absolutePath": "contracts/LiquidityAccelerationToken.sol",
					"exportedSymbols": {
						"Context": [
							1044
						],
						"ECDSA": [
							1392
						],
						"ERC20": [
							864
						],
						"ERC20Burnable": [
							988
						],
						"IERC20": [
							942
						],
						"ILatToken": [
							1410
						],
						"ITreasuryVault": [
							1419
						],
						"LiquidityAccelerationToken": [
							2363
						],
						"Ownable": [
							147
						],
						"ReentrancyGuard": [
							349
						]
					},
					"id": 2364,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1394,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".28"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 1395,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2364,
							"sourceUnit": 943,
							"src": "147:56:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
							"file": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
							"id": 1396,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2364,
							"sourceUnit": 989,
							"src": "204:74:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 1397,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2364,
							"sourceUnit": 148,
							"src": "279:52:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 1398,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2364,
							"sourceUnit": 350,
							"src": "332:62:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
							"file": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
							"id": 1399,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2364,
							"sourceUnit": 1393,
							"src": "395:62:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1401,
										"name": "IERC20",
										"nameLocations": [
											"530:6:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 942,
										"src": "530:6:9"
									},
									"id": 1402,
									"nodeType": "InheritanceSpecifier",
									"src": "530:6:9"
								}
							],
							"canonicalName": "ILatToken",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1400,
								"nodeType": "StructuredDocumentation",
								"src": "459:48:9",
								"text": "@notice Interface for a mintable LAT token."
							},
							"fullyImplemented": false,
							"id": 1410,
							"linearizedBaseContracts": [
								1410,
								942
							],
							"name": "ILatToken",
							"nameLocation": "517:9:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "40c10f19",
									"id": 1409,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "552:4:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1404,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "565:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1409,
												"src": "557:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1403,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "557:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1406,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "577:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1409,
												"src": "569:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1405,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "569:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "556:28:9"
									},
									"returnParameters": {
										"id": 1408,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "593:0:9"
									},
									"scope": 1410,
									"src": "543:51:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2364,
							"src": "507:89:9",
							"usedErrors": [],
							"usedEvents": [
								876,
								885
							]
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ITreasuryVault",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1411,
								"nodeType": "StructuredDocumentation",
								"src": "598:69:9",
								"text": "@notice Interface for a treasury vault that holds staked tokens."
							},
							"fullyImplemented": false,
							"id": 1419,
							"linearizedBaseContracts": [
								1419
							],
							"name": "ITreasuryVault",
							"nameLocation": "677:14:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "f3fef3a3",
									"id": 1418,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "707:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1413,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "724:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1418,
												"src": "716:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1412,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "716:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1415,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "743:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1418,
												"src": "735:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1414,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "735:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "715:35:9"
									},
									"returnParameters": {
										"id": 1417,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:0:9"
									},
									"scope": 1419,
									"src": "698:62:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2364,
							"src": "667:95:9",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1421,
										"name": "Ownable",
										"nameLocations": [
											"1200:7:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "1200:7:9"
									},
									"id": 1422,
									"nodeType": "InheritanceSpecifier",
									"src": "1200:7:9"
								},
								{
									"baseName": {
										"id": 1423,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"1209:15:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 349,
										"src": "1209:15:9"
									},
									"id": 1424,
									"nodeType": "InheritanceSpecifier",
									"src": "1209:15:9"
								}
							],
							"canonicalName": "LiquidityAccelerationToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1420,
								"nodeType": "StructuredDocumentation",
								"src": "764:397:9",
								"text": "@title LiquidityAccelerationToken\n @notice This contract mimics a Solana Anchor program by implementing epoch‑based trading rewards,\n off‑chain signature verification, staking (with vesting, weighted rewards, and inactivity slashing),\n early withdrawal penalties, and a separate treasury vault for staked tokens.\n It also includes reentrancy protection and an emergency pause."
							},
							"fullyImplemented": true,
							"id": 2363,
							"linearizedBaseContracts": [
								2363,
								349,
								147,
								1044
							],
							"name": "LiquidityAccelerationToken",
							"nameLocation": "1170:26:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1427,
									"libraryName": {
										"id": 1425,
										"name": "ECDSA",
										"nameLocations": [
											"1237:5:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1392,
										"src": "1237:5:9"
									},
									"nodeType": "UsingForDirective",
									"src": "1231:24:9",
									"typeName": {
										"id": 1426,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1247:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "0fd7bf50",
									"id": 1430,
									"mutability": "mutable",
									"name": "latToken",
									"nameLocation": "1415:8:9",
									"nodeType": "VariableDeclaration",
									"scope": 2363,
									"src": "1398:25:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_ILatToken_$1410",
										"typeString": "contract ILatToken"
									},
									"typeName": {
										"id": 1429,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1428,
											"name": "ILatToken",
											"nameLocations": [
												"1398:9:9"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1410,
											"src": "1398:9:9"
										},
										"referencedDeclaration": 1410,
										"src": "1398:9:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ILatToken_$1410",
											"typeString": "contract ILatToken"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f6cc5157",
									"id": 1432,
									"mutability": "mutable",
									"name": "tradeRewardRate",
									"nameLocation": "1445:15:9",
									"nodeType": "VariableDeclaration",
									"scope": 2363,
									"src": "1430:30:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1431,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1430:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ccc8362c",
									"id": 1434,
									"mutability": "mutable",
									"name": "stakeRewardRate",
									"nameLocation": "1481:15:9",
									"nodeType": "VariableDeclaration",
									"scope": 2363,
									"src": "1466:30:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1433,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1466:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e275c997",
									"id": 1436,
									"mutability": "mutable",
									"name": "totalTrades",
									"nameLocation": "1517:11:9",
									"nodeType": "VariableDeclaration",
									"scope": 2363,
									"src": "1502:26:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1435,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1502:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "519445e2",
									"id": 1438,
									"mutability": "mutable",
									"name": "epochTradeVolume",
									"nameLocation": "1549:16:9",
									"nodeType": "VariableDeclaration",
									"scope": 2363,
									"src": "1534:31:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1437,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1534:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f1ea7692",
									"id": 1440,
									"mutability": "mutable",
									"name": "tradeEpochDuration",
									"nameLocation": "1586:18:9",
									"nodeType": "VariableDeclaration",
									"scope": 2363,
									"src": "1571:33:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1439,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1571:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "eab35b77",
									"id": 1442,
									"mutability": "mutable",
									"name": "poolTradingVolume",
									"nameLocation": "1663:17:9",
									"nodeType": "VariableDeclaration",
									"scope": 2363,
									"src": "1648:32:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1441,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1648:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "64cb6142",
									"id": 1444,
									"mutability": "mutable",
									"name": "poolVolumeThreshold",
									"nameLocation": "1701:19:9",
									"nodeType": "VariableDeclaration",
									"scope": 2363,
									"src": "1686:34:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1443,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1686:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1bff38cd",
									"id": 1446,
									"mutability": "mutable",
									"name": "poolBoostMultiplier",
									"nameLocation": "1741:19:9",
									"nodeType": "VariableDeclaration",
									"scope": 2363,
									"src": "1726:34:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1445,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1726:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "16330d40",
									"id": 1449,
									"mutability": "mutable",
									"name": "earlyWithdrawalFee",
									"nameLocation": "1781:18:9",
									"nodeType": "VariableDeclaration",
									"scope": 2363,
									"src": "1766:38:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1447,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1766:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3130",
										"id": 1448,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1802:2:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10_by_1",
											"typeString": "int_const 10"
										},
										"value": "10"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c2362dd5",
									"id": 1451,
									"mutability": "mutable",
									"name": "lastEpochBlock",
									"nameLocation": "1913:14:9",
									"nodeType": "VariableDeclaration",
									"scope": 2363,
									"src": "1898:29:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1450,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1898:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "4ff0876a",
									"id": 1453,
									"mutability": "mutable",
									"name": "epochDuration",
									"nameLocation": "1948:13:9",
									"nodeType": "VariableDeclaration",
									"scope": 2363,
									"src": "1933:28:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1452,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1933:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8119185b",
									"id": 1456,
									"mutability": "mutable",
									"name": "inactivitySlashingTime",
									"nameLocation": "2062:22:9",
									"nodeType": "VariableDeclaration",
									"scope": 2363,
									"src": "2047:47:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1454,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2047:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3330",
										"id": 1455,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2087:7:9",
										"subdenomination": "days",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2592000_by_1",
											"typeString": "int_const 2592000"
										},
										"value": "30"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "94d9b235",
									"id": 1459,
									"mutability": "mutable",
									"name": "inactivityPenaltyRate",
									"nameLocation": "2115:21:9",
									"nodeType": "VariableDeclaration",
									"scope": 2363,
									"src": "2100:41:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1457,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2100:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 1458,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2139:2:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f03f80c3",
									"id": 1466,
									"mutability": "mutable",
									"name": "maxClaimable",
									"nameLocation": "2258:12:9",
									"nodeType": "VariableDeclaration",
									"scope": 2363,
									"src": "2243:48:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1460,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2243:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_1000000000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000000000"
										},
										"id": 1465,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "315f3030305f303030",
											"id": 1461,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2273:9:9",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000_by_1",
												"typeString": "int_const 1000000"
											},
											"value": "1_000_000"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"id": 1464,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 1462,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "2285:2:9",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "3138",
												"id": 1463,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "2289:2:9",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_18_by_1",
													"typeString": "int_const 18"
												},
												"value": "18"
											},
											"src": "2285:6:9",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "2273:18:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "5c975abb",
									"id": 1468,
									"mutability": "mutable",
									"name": "paused",
									"nameLocation": "2344:6:9",
									"nodeType": "VariableDeclaration",
									"scope": 2363,
									"src": "2332:18:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1467,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "2332:4:9",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "158ef93e",
									"id": 1470,
									"mutability": "mutable",
									"name": "initialized",
									"nameLocation": "2420:11:9",
									"nodeType": "VariableDeclaration",
									"scope": 2363,
									"src": "2408:23:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1469,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "2408:4:9",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7ecebe00",
									"id": 1474,
									"mutability": "mutable",
									"name": "nonces",
									"nameLocation": "2529:6:9",
									"nodeType": "VariableDeclaration",
									"scope": 2363,
									"src": "2494:41:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1473,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1471,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2502:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2494:27:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1472,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2513:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f3482650",
									"id": 1478,
									"mutability": "mutable",
									"name": "lastSignedClaim",
									"nameLocation": "2624:15:9",
									"nodeType": "VariableDeclaration",
									"scope": 2363,
									"src": "2589:50:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1477,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1475,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2597:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2589:27:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1476,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2608:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "5e2a9fa2",
									"id": 1482,
									"mutability": "mutable",
									"name": "makerRebates",
									"nameLocation": "2745:12:9",
									"nodeType": "VariableDeclaration",
									"scope": 2363,
									"src": "2710:47:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1481,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1479,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2718:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2710:27:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1480,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2729:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "011a4568",
									"id": 1486,
									"mutability": "mutable",
									"name": "takerFees",
									"nameLocation": "2798:9:9",
									"nodeType": "VariableDeclaration",
									"scope": 2363,
									"src": "2763:44:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1485,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1483,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2771:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2763:27:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1484,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2782:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "5829b3c7",
									"id": 1490,
									"mutability": "mutable",
									"name": "liquidityBoostMultiplier",
									"nameLocation": "2925:24:9",
									"nodeType": "VariableDeclaration",
									"scope": 2363,
									"src": "2890:59:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1489,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1487,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2898:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2890:27:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1488,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2909:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "LiquidityAccelerationToken.TraderStats",
									"id": 1499,
									"members": [
										{
											"constant": false,
											"id": 1492,
											"mutability": "mutable",
											"name": "tradeCount",
											"nameLocation": "3019:10:9",
											"nodeType": "VariableDeclaration",
											"scope": 1499,
											"src": "3011:18:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1491,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3011:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1494,
											"mutability": "mutable",
											"name": "totalVolume",
											"nameLocation": "3047:11:9",
											"nodeType": "VariableDeclaration",
											"scope": 1499,
											"src": "3039:19:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1493,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3039:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1496,
											"mutability": "mutable",
											"name": "pendingTradeRewards",
											"nameLocation": "3076:19:9",
											"nodeType": "VariableDeclaration",
											"scope": 1499,
											"src": "3068:27:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1495,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3068:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1498,
											"mutability": "mutable",
											"name": "lastClaim",
											"nameLocation": "3113:9:9",
											"nodeType": "VariableDeclaration",
											"scope": 1499,
											"src": "3105:17:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1497,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3105:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "TraderStats",
									"nameLocation": "2989:11:9",
									"nodeType": "StructDefinition",
									"scope": 2363,
									"src": "2982:147:9",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "05c50a35",
									"id": 1504,
									"mutability": "mutable",
									"name": "traderStats",
									"nameLocation": "3173:11:9",
									"nodeType": "VariableDeclaration",
									"scope": 2363,
									"src": "3134:50:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_TraderStats_$1499_storage_$",
										"typeString": "mapping(address => struct LiquidityAccelerationToken.TraderStats)"
									},
									"typeName": {
										"id": 1503,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1500,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "3142:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "3134:31:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_TraderStats_$1499_storage_$",
											"typeString": "mapping(address => struct LiquidityAccelerationToken.TraderStats)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1502,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1501,
												"name": "TraderStats",
												"nameLocations": [
													"3153:11:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1499,
												"src": "3153:11:9"
											},
											"referencedDeclaration": 1499,
											"src": "3153:11:9",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_TraderStats_$1499_storage_ptr",
												"typeString": "struct LiquidityAccelerationToken.TraderStats"
											}
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "LiquidityAccelerationToken.Stake",
									"id": 1511,
									"members": [
										{
											"constant": false,
											"id": 1506,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "3250:6:9",
											"nodeType": "VariableDeclaration",
											"scope": 1511,
											"src": "3242:14:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1505,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3242:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1508,
											"mutability": "mutable",
											"name": "lastUpdated",
											"nameLocation": "3274:11:9",
											"nodeType": "VariableDeclaration",
											"scope": 1511,
											"src": "3266:19:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1507,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3266:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1510,
											"mutability": "mutable",
											"name": "stakeStart",
											"nameLocation": "3303:10:9",
											"nodeType": "VariableDeclaration",
											"scope": 1511,
											"src": "3295:18:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1509,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3295:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Stake",
									"nameLocation": "3226:5:9",
									"nodeType": "StructDefinition",
									"scope": 2363,
									"src": "3219:101:9",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "16934fc4",
									"id": 1516,
									"mutability": "mutable",
									"name": "stakes",
									"nameLocation": "3358:6:9",
									"nodeType": "VariableDeclaration",
									"scope": 2363,
									"src": "3325:39:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$1511_storage_$",
										"typeString": "mapping(address => struct LiquidityAccelerationToken.Stake)"
									},
									"typeName": {
										"id": 1515,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1512,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "3333:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "3325:25:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$1511_storage_$",
											"typeString": "mapping(address => struct LiquidityAccelerationToken.Stake)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1514,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1513,
												"name": "Stake",
												"nameLocations": [
													"3344:5:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1511,
												"src": "3344:5:9"
											},
											"referencedDeclaration": 1511,
											"src": "3344:5:9",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Stake_$1511_storage_ptr",
												"typeString": "struct LiquidityAccelerationToken.Stake"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "58ba9d27",
									"id": 1520,
									"mutability": "mutable",
									"name": "stakedWeight",
									"nameLocation": "3464:12:9",
									"nodeType": "VariableDeclaration",
									"scope": 2363,
									"src": "3429:47:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1519,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1517,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "3437:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "3429:27:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1518,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "3448:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "LiquidityAccelerationToken.VestingEntry",
									"id": 1529,
									"members": [
										{
											"constant": false,
											"id": 1522,
											"mutability": "mutable",
											"name": "totalReward",
											"nameLocation": "3577:11:9",
											"nodeType": "VariableDeclaration",
											"scope": 1529,
											"src": "3569:19:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1521,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3569:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1524,
											"mutability": "mutable",
											"name": "claimed",
											"nameLocation": "3606:7:9",
											"nodeType": "VariableDeclaration",
											"scope": 1529,
											"src": "3598:15:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1523,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3598:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1526,
											"mutability": "mutable",
											"name": "startTime",
											"nameLocation": "3631:9:9",
											"nodeType": "VariableDeclaration",
											"scope": 1529,
											"src": "3623:17:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1525,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3623:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1528,
											"mutability": "mutable",
											"name": "duration",
											"nameLocation": "3658:8:9",
											"nodeType": "VariableDeclaration",
											"scope": 1529,
											"src": "3650:16:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1527,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3650:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "VestingEntry",
									"nameLocation": "3546:12:9",
									"nodeType": "StructDefinition",
									"scope": 2363,
									"src": "3539:148:9",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "45626bd6",
									"id": 1535,
									"mutability": "mutable",
									"name": "vestingSchedules",
									"nameLocation": "3734:16:9",
									"nodeType": "VariableDeclaration",
									"scope": 2363,
									"src": "3692:58:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_VestingEntry_$1529_storage_$dyn_storage_$",
										"typeString": "mapping(address => struct LiquidityAccelerationToken.VestingEntry[])"
									},
									"typeName": {
										"id": 1534,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1530,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "3700:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "3692:34:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_VestingEntry_$1529_storage_$dyn_storage_$",
											"typeString": "mapping(address => struct LiquidityAccelerationToken.VestingEntry[])"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"baseType": {
												"id": 1532,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1531,
													"name": "VestingEntry",
													"nameLocations": [
														"3711:12:9"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1529,
													"src": "3711:12:9"
												},
												"referencedDeclaration": 1529,
												"src": "3711:12:9",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_VestingEntry_$1529_storage_ptr",
													"typeString": "struct LiquidityAccelerationToken.VestingEntry"
												}
											},
											"id": 1533,
											"nodeType": "ArrayTypeName",
											"src": "3711:14:9",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_struct$_VestingEntry_$1529_storage_$dyn_storage_ptr",
												"typeString": "struct LiquidityAccelerationToken.VestingEntry[]"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "430bf08a",
									"id": 1537,
									"mutability": "mutable",
									"name": "vaultAddress",
									"nameLocation": "3832:12:9",
									"nodeType": "VariableDeclaration",
									"scope": 2363,
									"src": "3817:27:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1536,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "3817:7:9",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "4b85156045f2844cf6b638ff8a8ddb82c940ccdbe3c46e6e67d2583722c7dc71",
									"id": 1545,
									"name": "TradeRecorded",
									"nameLocation": "3963:13:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1539,
												"indexed": true,
												"mutability": "mutable",
												"name": "trader",
												"nameLocation": "3993:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1545,
												"src": "3977:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1538,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3977:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1541,
												"indexed": false,
												"mutability": "mutable",
												"name": "tradeVolume",
												"nameLocation": "4009:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1545,
												"src": "4001:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1540,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4001:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1543,
												"indexed": false,
												"mutability": "mutable",
												"name": "isMaker",
												"nameLocation": "4027:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1545,
												"src": "4022:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1542,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4022:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3976:59:9"
									},
									"src": "3957:79:9"
								},
								{
									"anonymous": false,
									"eventSelector": "b127973bf29d1dae6424fef4f7461e0b9c444636ab23a8392d9969500034a13d",
									"id": 1551,
									"name": "TradeRewardsClaimed",
									"nameLocation": "4047:19:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1550,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1547,
												"indexed": true,
												"mutability": "mutable",
												"name": "trader",
												"nameLocation": "4083:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1551,
												"src": "4067:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1546,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4067:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1549,
												"indexed": false,
												"mutability": "mutable",
												"name": "reward",
												"nameLocation": "4099:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1551,
												"src": "4091:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1548,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4091:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4066:40:9"
									},
									"src": "4041:66:9"
								},
								{
									"anonymous": false,
									"eventSelector": "6afd9b8c734cbfeda8ba55afbdd1ac413bf617456b50196186371d2cc95b8572",
									"id": 1557,
									"name": "StakeLat",
									"nameLocation": "4118:8:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1556,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1553,
												"indexed": true,
												"mutability": "mutable",
												"name": "trader",
												"nameLocation": "4143:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1557,
												"src": "4127:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1552,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4127:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1555,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4159:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1557,
												"src": "4151:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1554,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4151:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4126:40:9"
									},
									"src": "4112:55:9"
								},
								{
									"anonymous": false,
									"eventSelector": "4dd465eb9d4bf90caf3400cc334c731b4cef0aa7f013e5d72f20b0cec2e30ea9",
									"id": 1563,
									"name": "StakeRewardsClaimed",
									"nameLocation": "4178:19:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1562,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1559,
												"indexed": true,
												"mutability": "mutable",
												"name": "trader",
												"nameLocation": "4214:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1563,
												"src": "4198:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1558,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4198:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1561,
												"indexed": false,
												"mutability": "mutable",
												"name": "reward",
												"nameLocation": "4230:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1563,
												"src": "4222:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1560,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4222:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4197:40:9"
									},
									"src": "4172:66:9"
								},
								{
									"anonymous": false,
									"eventSelector": "933735aa8de6d7547d0126171b2f31b9c34dd00f3ecd4be85a0ba047db4fafef",
									"id": 1571,
									"name": "StakeWithdrawn",
									"nameLocation": "4249:14:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1570,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1565,
												"indexed": true,
												"mutability": "mutable",
												"name": "trader",
												"nameLocation": "4280:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1571,
												"src": "4264:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1564,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4264:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1567,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountAfterPenalty",
												"nameLocation": "4296:18:9",
												"nodeType": "VariableDeclaration",
												"scope": 1571,
												"src": "4288:26:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1566,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4288:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1569,
												"indexed": false,
												"mutability": "mutable",
												"name": "penalty",
												"nameLocation": "4324:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1571,
												"src": "4316:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1568,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4316:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4263:69:9"
									},
									"src": "4243:90:9"
								},
								{
									"anonymous": false,
									"eventSelector": "abcc9b515858a553f53609bb223669708665910a51030d923c842de23f099913",
									"id": 1577,
									"name": "LiquidityMultiplierUpdated",
									"nameLocation": "4344:26:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1576,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1573,
												"indexed": true,
												"mutability": "mutable",
												"name": "trader",
												"nameLocation": "4387:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1577,
												"src": "4371:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1572,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4371:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1575,
												"indexed": false,
												"mutability": "mutable",
												"name": "multiplier",
												"nameLocation": "4403:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1577,
												"src": "4395:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1574,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4395:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4370:44:9"
									},
									"src": "4338:77:9"
								},
								{
									"anonymous": false,
									"eventSelector": "0e2fb031ee032dc02d8011dc50b816eb450cf856abd8261680dac74f72165bd2",
									"id": 1581,
									"name": "Paused",
									"nameLocation": "4426:6:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1580,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1579,
												"indexed": false,
												"mutability": "mutable",
												"name": "isPaused",
												"nameLocation": "4438:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1581,
												"src": "4433:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1578,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4433:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4432:15:9"
									},
									"src": "4420:28:9"
								},
								{
									"body": {
										"id": 1590,
										"nodeType": "Block",
										"src": "4593:66:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1585,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "4611:7:9",
															"subExpression": {
																"id": 1584,
																"name": "paused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1468,
																"src": "4612:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f6e747261637420697320706175736564",
															"id": 1586,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4620:20:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e55600974a468a5baf1f1454a24481ec68f787ee02cd9f1d97c35ce2a8d2093d",
																"typeString": "literal_string \"Contract is paused\""
															},
															"value": "Contract is paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e55600974a468a5baf1f1454a24481ec68f787ee02cd9f1d97c35ce2a8d2093d",
																"typeString": "literal_string \"Contract is paused\""
															}
														],
														"id": 1583,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4603:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1587,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4603:38:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1588,
												"nodeType": "ExpressionStatement",
												"src": "4603:38:9"
											},
											{
												"id": 1589,
												"nodeType": "PlaceholderStatement",
												"src": "4651:1:9"
											}
										]
									},
									"id": 1591,
									"name": "whenNotPaused",
									"nameLocation": "4577:13:9",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1582,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4590:2:9"
									},
									"src": "4568:91:9",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1598,
										"nodeType": "Block",
										"src": "4814:2:9",
										"statements": []
									},
									"id": 1599,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 1594,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "4802:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1595,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4806:6:9",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "4802:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1596,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1593,
												"name": "Ownable",
												"nameLocations": [
													"4794:7:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "4794:7:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "4794:19:9"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1592,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4791:2:9"
									},
									"returnParameters": {
										"id": 1597,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4814:0:9"
									},
									"scope": 2363,
									"src": "4780:36:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1681,
										"nodeType": "Block",
										"src": "5921:564:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1624,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "5939:12:9",
															"subExpression": {
																"id": 1623,
																"name": "initialized",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1470,
																"src": "5940:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416c726561647920696e697469616c697a6564",
															"id": 1625,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5953:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0",
																"typeString": "literal_string \"Already initialized\""
															},
															"value": "Already initialized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0",
																"typeString": "literal_string \"Already initialized\""
															}
														],
														"id": 1622,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5931:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1626,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5931:44:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1627,
												"nodeType": "ExpressionStatement",
												"src": "5931:44:9"
											},
											{
												"expression": {
													"id": 1630,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1628,
														"name": "latToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1430,
														"src": "5985:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ILatToken_$1410",
															"typeString": "contract ILatToken"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1629,
														"name": "_latToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1603,
														"src": "5996:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ILatToken_$1410",
															"typeString": "contract ILatToken"
														}
													},
													"src": "5985:20:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ILatToken_$1410",
														"typeString": "contract ILatToken"
													}
												},
												"id": 1631,
												"nodeType": "ExpressionStatement",
												"src": "5985:20:9"
											},
											{
												"expression": {
													"id": 1634,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1632,
														"name": "tradeRewardRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1432,
														"src": "6015:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1633,
														"name": "_tradeRewardRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1605,
														"src": "6033:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6015:34:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1635,
												"nodeType": "ExpressionStatement",
												"src": "6015:34:9"
											},
											{
												"expression": {
													"id": 1638,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1636,
														"name": "stakeRewardRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1434,
														"src": "6059:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1637,
														"name": "_stakeRewardRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1607,
														"src": "6077:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6059:34:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1639,
												"nodeType": "ExpressionStatement",
												"src": "6059:34:9"
											},
											{
												"expression": {
													"id": 1642,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1640,
														"name": "totalTrades",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1436,
														"src": "6103:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1641,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6117:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6103:15:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1643,
												"nodeType": "ExpressionStatement",
												"src": "6103:15:9"
											},
											{
												"expression": {
													"id": 1646,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1644,
														"name": "epochTradeVolume",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1438,
														"src": "6128:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1645,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6147:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6128:20:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1647,
												"nodeType": "ExpressionStatement",
												"src": "6128:20:9"
											},
											{
												"expression": {
													"id": 1650,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1648,
														"name": "tradeEpochDuration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1440,
														"src": "6158:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1649,
														"name": "_tradeEpochDuration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1609,
														"src": "6179:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6158:40:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1651,
												"nodeType": "ExpressionStatement",
												"src": "6158:40:9"
											},
											{
												"expression": {
													"id": 1654,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1652,
														"name": "poolTradingVolume",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1442,
														"src": "6208:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1653,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6228:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6208:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1655,
												"nodeType": "ExpressionStatement",
												"src": "6208:21:9"
											},
											{
												"expression": {
													"id": 1658,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1656,
														"name": "poolVolumeThreshold",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1444,
														"src": "6239:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1657,
														"name": "_poolVolumeThreshold",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1611,
														"src": "6261:20:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6239:42:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1659,
												"nodeType": "ExpressionStatement",
												"src": "6239:42:9"
											},
											{
												"expression": {
													"id": 1662,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1660,
														"name": "poolBoostMultiplier",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1446,
														"src": "6291:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1661,
														"name": "_poolBoostMultiplier",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1613,
														"src": "6313:20:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6291:42:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1663,
												"nodeType": "ExpressionStatement",
												"src": "6291:42:9"
											},
											{
												"expression": {
													"id": 1666,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1664,
														"name": "epochDuration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1453,
														"src": "6343:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1665,
														"name": "_epochDuration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1615,
														"src": "6359:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6343:30:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1667,
												"nodeType": "ExpressionStatement",
												"src": "6343:30:9"
											},
											{
												"expression": {
													"id": 1671,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1668,
														"name": "lastEpochBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1451,
														"src": "6383:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1669,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "6400:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1670,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6406:6:9",
														"memberName": "number",
														"nodeType": "MemberAccess",
														"src": "6400:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6383:29:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1672,
												"nodeType": "ExpressionStatement",
												"src": "6383:29:9"
											},
											{
												"expression": {
													"id": 1675,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1673,
														"name": "vaultAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1537,
														"src": "6422:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1674,
														"name": "_vaultAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1617,
														"src": "6437:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6422:28:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1676,
												"nodeType": "ExpressionStatement",
												"src": "6422:28:9"
											},
											{
												"expression": {
													"id": 1679,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1677,
														"name": "initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1470,
														"src": "6460:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1678,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6474:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "6460:18:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1680,
												"nodeType": "ExpressionStatement",
												"src": "6460:18:9"
											}
										]
									},
									"documentation": {
										"id": 1600,
										"nodeType": "StructuredDocumentation",
										"src": "4941:657:9",
										"text": "@notice Initializes the global state. Can only be called once by the owner.\n @param _latToken The mintable LAT token.\n @param _tradeRewardRate Base reward rate for trades.\n @param _stakeRewardRate Base reward rate for staking.\n @param _tradeEpochDuration Duration (in seconds) for trade reward epochs.\n @param _poolVolumeThreshold Threshold to trigger liquidity pool boost.\n @param _poolBoostMultiplier Boost multiplier (in percentage) for staking rewards.\n @param _epochDuration Epoch duration in blocks (for checkpointing).\n @param _vaultAddress The treasury vault address to hold staked tokens."
									},
									"functionSelector": "848ff684",
									"id": 1682,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1620,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1619,
												"name": "onlyOwner",
												"nameLocations": [
													"5911:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "5911:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "5911:9:9"
										}
									],
									"name": "initialize",
									"nameLocation": "5612:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1618,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1603,
												"mutability": "mutable",
												"name": "_latToken",
												"nameLocation": "5642:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1682,
												"src": "5632:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ILatToken_$1410",
													"typeString": "contract ILatToken"
												},
												"typeName": {
													"id": 1602,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1601,
														"name": "ILatToken",
														"nameLocations": [
															"5632:9:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1410,
														"src": "5632:9:9"
													},
													"referencedDeclaration": 1410,
													"src": "5632:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ILatToken_$1410",
														"typeString": "contract ILatToken"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1605,
												"mutability": "mutable",
												"name": "_tradeRewardRate",
												"nameLocation": "5669:16:9",
												"nodeType": "VariableDeclaration",
												"scope": 1682,
												"src": "5661:24:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1604,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5661:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1607,
												"mutability": "mutable",
												"name": "_stakeRewardRate",
												"nameLocation": "5703:16:9",
												"nodeType": "VariableDeclaration",
												"scope": 1682,
												"src": "5695:24:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1606,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5695:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1609,
												"mutability": "mutable",
												"name": "_tradeEpochDuration",
												"nameLocation": "5737:19:9",
												"nodeType": "VariableDeclaration",
												"scope": 1682,
												"src": "5729:27:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5729:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1611,
												"mutability": "mutable",
												"name": "_poolVolumeThreshold",
												"nameLocation": "5774:20:9",
												"nodeType": "VariableDeclaration",
												"scope": 1682,
												"src": "5766:28:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5766:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1613,
												"mutability": "mutable",
												"name": "_poolBoostMultiplier",
												"nameLocation": "5812:20:9",
												"nodeType": "VariableDeclaration",
												"scope": 1682,
												"src": "5804:28:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1612,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5804:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1615,
												"mutability": "mutable",
												"name": "_epochDuration",
												"nameLocation": "5850:14:9",
												"nodeType": "VariableDeclaration",
												"scope": 1682,
												"src": "5842:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1614,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5842:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1617,
												"mutability": "mutable",
												"name": "_vaultAddress",
												"nameLocation": "5882:13:9",
												"nodeType": "VariableDeclaration",
												"scope": 1682,
												"src": "5874:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1616,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5874:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5622:279:9"
									},
									"returnParameters": {
										"id": 1621,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5921:0:9"
									},
									"scope": 2363,
									"src": "5603:882:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1698,
										"nodeType": "Block",
										"src": "6615:63:9",
										"statements": [
											{
												"expression": {
													"id": 1692,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1690,
														"name": "paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1468,
														"src": "6625:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1691,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1685,
														"src": "6634:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6625:16:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1693,
												"nodeType": "ExpressionStatement",
												"src": "6625:16:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1695,
															"name": "_paused",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1685,
															"src": "6663:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1694,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1581,
														"src": "6656:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bool_$returns$__$",
															"typeString": "function (bool)"
														}
													},
													"id": 1696,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6656:15:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1697,
												"nodeType": "EmitStatement",
												"src": "6651:20:9"
											}
										]
									},
									"documentation": {
										"id": 1683,
										"nodeType": "StructuredDocumentation",
										"src": "6491:67:9",
										"text": "@notice Emergency pause function to disable critical functions."
									},
									"functionSelector": "16c38b3c",
									"id": 1699,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1688,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1687,
												"name": "onlyOwner",
												"nameLocations": [
													"6605:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "6605:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "6605:9:9"
										}
									],
									"name": "setPaused",
									"nameLocation": "6572:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1686,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1685,
												"mutability": "mutable",
												"name": "_paused",
												"nameLocation": "6587:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1699,
												"src": "6582:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1684,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6582:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6581:14:9"
									},
									"returnParameters": {
										"id": 1689,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6615:0:9"
									},
									"scope": 2363,
									"src": "6563:115:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1833,
										"nodeType": "Block",
										"src": "7220:1264:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1712,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1470,
															"src": "7238:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420696e697469616c697a6564",
															"id": 1713,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7251:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6ae2314e839d4d9cfe442dd3a2386a5c83b76bbc48be45cca60d84c71c4359b2",
																"typeString": "literal_string \"Not initialized\""
															},
															"value": "Not initialized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6ae2314e839d4d9cfe442dd3a2386a5c83b76bbc48be45cca60d84c71c4359b2",
																"typeString": "literal_string \"Not initialized\""
															}
														],
														"id": 1711,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7230:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1714,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7230:39:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1715,
												"nodeType": "ExpressionStatement",
												"src": "7230:39:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1721,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1716,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "7378:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1717,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7384:6:9",
														"memberName": "number",
														"nodeType": "MemberAccess",
														"src": "7378:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1720,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1718,
															"name": "lastEpochBlock",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1451,
															"src": "7394:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 1719,
															"name": "epochDuration",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1453,
															"src": "7411:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "7394:30:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7378:46:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1732,
												"nodeType": "IfStatement",
												"src": "7374:140:9",
												"trueBody": {
													"id": 1731,
													"nodeType": "Block",
													"src": "7426:88:9",
													"statements": [
														{
															"expression": {
																"id": 1724,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1722,
																	"name": "epochTradeVolume",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1438,
																	"src": "7440:16:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 1723,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7459:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7440:20:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1725,
															"nodeType": "ExpressionStatement",
															"src": "7440:20:9"
														},
														{
															"expression": {
																"id": 1729,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1726,
																	"name": "lastEpochBlock",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1451,
																	"src": "7474:14:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 1727,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "7491:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1728,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7497:6:9",
																	"memberName": "number",
																	"nodeType": "MemberAccess",
																	"src": "7491:12:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7474:29:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1730,
															"nodeType": "ExpressionStatement",
															"src": "7474:29:9"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1735,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1733,
														"name": "totalTrades",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1436,
														"src": "7524:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 1734,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7539:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "7524:16:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1736,
												"nodeType": "ExpressionStatement",
												"src": "7524:16:9"
											},
											{
												"expression": {
													"id": 1739,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1737,
														"name": "epochTradeVolume",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1438,
														"src": "7550:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1738,
														"name": "tradeVolume",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1702,
														"src": "7570:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7550:31:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1740,
												"nodeType": "ExpressionStatement",
												"src": "7550:31:9"
											},
											{
												"expression": {
													"id": 1743,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1741,
														"name": "poolTradingVolume",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1442,
														"src": "7591:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1742,
														"name": "tradeVolume",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1702,
														"src": "7612:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7591:32:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1744,
												"nodeType": "ExpressionStatement",
												"src": "7591:32:9"
											},
											{
												"assignments": [
													1747
												],
												"declarations": [
													{
														"constant": false,
														"id": 1747,
														"mutability": "mutable",
														"name": "stats",
														"nameLocation": "7654:5:9",
														"nodeType": "VariableDeclaration",
														"scope": 1833,
														"src": "7634:25:9",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TraderStats_$1499_storage_ptr",
															"typeString": "struct LiquidityAccelerationToken.TraderStats"
														},
														"typeName": {
															"id": 1746,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1745,
																"name": "TraderStats",
																"nameLocations": [
																	"7634:11:9"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1499,
																"src": "7634:11:9"
															},
															"referencedDeclaration": 1499,
															"src": "7634:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TraderStats_$1499_storage_ptr",
																"typeString": "struct LiquidityAccelerationToken.TraderStats"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1752,
												"initialValue": {
													"baseExpression": {
														"id": 1748,
														"name": "traderStats",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1504,
														"src": "7662:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_TraderStats_$1499_storage_$",
															"typeString": "mapping(address => struct LiquidityAccelerationToken.TraderStats storage ref)"
														}
													},
													"id": 1751,
													"indexExpression": {
														"expression": {
															"id": 1749,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "7674:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1750,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7678:6:9",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "7674:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7662:23:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TraderStats_$1499_storage",
														"typeString": "struct LiquidityAccelerationToken.TraderStats storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7634:51:9"
											},
											{
												"expression": {
													"id": 1757,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1753,
															"name": "stats",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1747,
															"src": "7695:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TraderStats_$1499_storage_ptr",
																"typeString": "struct LiquidityAccelerationToken.TraderStats storage pointer"
															}
														},
														"id": 1755,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "7701:10:9",
														"memberName": "tradeCount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1492,
														"src": "7695:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 1756,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7715:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "7695:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1758,
												"nodeType": "ExpressionStatement",
												"src": "7695:21:9"
											},
											{
												"expression": {
													"id": 1763,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1759,
															"name": "stats",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1747,
															"src": "7726:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TraderStats_$1499_storage_ptr",
																"typeString": "struct LiquidityAccelerationToken.TraderStats storage pointer"
															}
														},
														"id": 1761,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "7732:11:9",
														"memberName": "totalVolume",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1494,
														"src": "7726:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1762,
														"name": "tradeVolume",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1702,
														"src": "7747:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7726:32:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1764,
												"nodeType": "ExpressionStatement",
												"src": "7726:32:9"
											},
											{
												"assignments": [
													1766
												],
												"declarations": [
													{
														"constant": false,
														"id": 1766,
														"mutability": "mutable",
														"name": "multiplier",
														"nameLocation": "7856:10:9",
														"nodeType": "VariableDeclaration",
														"scope": 1833,
														"src": "7848:18:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1765,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7848:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1773,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1769,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1767,
															"name": "epochTradeVolume",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1438,
															"src": "7869:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 1768,
															"name": "poolVolumeThreshold",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1444,
															"src": "7888:19:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "7869:38:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "313030",
														"id": 1771,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7916:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"id": 1772,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "7869:50:9",
													"trueExpression": {
														"hexValue": "313530",
														"id": 1770,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7910:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_150_by_1",
															"typeString": "int_const 150"
														},
														"value": "150"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7848:71:9"
											},
											{
												"assignments": [
													1775
												],
												"declarations": [
													{
														"constant": false,
														"id": 1775,
														"mutability": "mutable",
														"name": "reward",
														"nameLocation": "7937:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 1833,
														"src": "7929:14:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1774,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7929:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1784,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1783,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1780,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1778,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1776,
																		"name": "tradeVolume",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1702,
																		"src": "7947:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1777,
																		"name": "tradeRewardRate",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1432,
																		"src": "7961:15:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7947:29:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1779,
																	"name": "multiplier",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1766,
																	"src": "7979:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7947:42:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1781,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7946:44:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "313030",
														"id": 1782,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7993:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "7946:50:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7929:67:9"
											},
											{
												"expression": {
													"id": 1789,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1785,
															"name": "stats",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1747,
															"src": "8006:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TraderStats_$1499_storage_ptr",
																"typeString": "struct LiquidityAccelerationToken.TraderStats storage pointer"
															}
														},
														"id": 1787,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "8012:19:9",
														"memberName": "pendingTradeRewards",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1496,
														"src": "8006:25:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1788,
														"name": "reward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1775,
														"src": "8035:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8006:35:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1790,
												"nodeType": "ExpressionStatement",
												"src": "8006:35:9"
											},
											{
												"condition": {
													"id": 1791,
													"name": "isMaker",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1704,
													"src": "8115:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1811,
													"nodeType": "Block",
													"src": "8200:67:9",
													"statements": [
														{
															"expression": {
																"id": 1809,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1802,
																		"name": "takerFees",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1486,
																		"src": "8214:9:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1805,
																	"indexExpression": {
																		"expression": {
																			"id": 1803,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "8224:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1804,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "8228:6:9",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "8224:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "8214:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1808,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1806,
																		"name": "tradeVolume",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1702,
																		"src": "8239:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "313030",
																		"id": 1807,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8253:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_100_by_1",
																			"typeString": "int_const 100"
																		},
																		"value": "100"
																	},
																	"src": "8239:17:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8214:42:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1810,
															"nodeType": "ExpressionStatement",
															"src": "8214:42:9"
														}
													]
												},
												"id": 1812,
												"nodeType": "IfStatement",
												"src": "8111:156:9",
												"trueBody": {
													"id": 1801,
													"nodeType": "Block",
													"src": "8124:70:9",
													"statements": [
														{
															"expression": {
																"id": 1799,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1792,
																		"name": "makerRebates",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1482,
																		"src": "8138:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1795,
																	"indexExpression": {
																		"expression": {
																			"id": 1793,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "8151:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1794,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "8155:6:9",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "8151:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "8138:24:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1798,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1796,
																		"name": "tradeVolume",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1702,
																		"src": "8166:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "313030",
																		"id": 1797,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8180:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_100_by_1",
																			"typeString": "int_const 100"
																		},
																		"value": "100"
																	},
																	"src": "8166:17:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8138:45:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1800,
															"nodeType": "ExpressionStatement",
															"src": "8138:45:9"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1816,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1813,
															"name": "stats",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1747,
															"src": "8335:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TraderStats_$1499_storage_ptr",
																"typeString": "struct LiquidityAccelerationToken.TraderStats storage pointer"
															}
														},
														"id": 1814,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8341:9:9",
														"memberName": "lastClaim",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1498,
														"src": "8335:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1815,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8354:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8335:20:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1825,
												"nodeType": "IfStatement",
												"src": "8331:84:9",
												"trueBody": {
													"id": 1824,
													"nodeType": "Block",
													"src": "8357:58:9",
													"statements": [
														{
															"expression": {
																"id": 1822,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1817,
																		"name": "stats",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1747,
																		"src": "8371:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_TraderStats_$1499_storage_ptr",
																			"typeString": "struct LiquidityAccelerationToken.TraderStats storage pointer"
																		}
																	},
																	"id": 1819,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "8377:9:9",
																	"memberName": "lastClaim",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1498,
																	"src": "8371:15:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 1820,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "8389:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1821,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "8395:9:9",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "8389:15:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8371:33:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1823,
															"nodeType": "ExpressionStatement",
															"src": "8371:33:9"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1827,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "8444:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1828,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8448:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "8444:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1829,
															"name": "tradeVolume",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1702,
															"src": "8456:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1830,
															"name": "isMaker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1704,
															"src": "8469:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1826,
														"name": "TradeRecorded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1545,
														"src": "8430:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,uint256,bool)"
														}
													},
													"id": 1831,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8430:47:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1832,
												"nodeType": "EmitStatement",
												"src": "8425:52:9"
											}
										]
									},
									"documentation": {
										"id": 1700,
										"nodeType": "StructuredDocumentation",
										"src": "6818:305:9",
										"text": "@notice Records a trade and updates global and per-trader statistics.\n If a new epoch has started, the epoch trade volume is reset.\n Also records maker rebates or taker fees.\n @param tradeVolume The volume of the trade.\n @param isMaker Whether the trader is a market maker."
									},
									"functionSelector": "e927e7c0",
									"id": 1834,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1707,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1706,
												"name": "whenNotPaused",
												"nameLocations": [
													"7193:13:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1591,
												"src": "7193:13:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "7193:13:9"
										},
										{
											"id": 1709,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1708,
												"name": "nonReentrant",
												"nameLocations": [
													"7207:12:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 314,
												"src": "7207:12:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "7207:12:9"
										}
									],
									"name": "recordTrade",
									"nameLocation": "7137:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1702,
												"mutability": "mutable",
												"name": "tradeVolume",
												"nameLocation": "7157:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1834,
												"src": "7149:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1701,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7149:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1704,
												"mutability": "mutable",
												"name": "isMaker",
												"nameLocation": "7175:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1834,
												"src": "7170:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1703,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7170:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7148:35:9"
									},
									"returnParameters": {
										"id": 1710,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7220:0:9"
									},
									"scope": 2363,
									"src": "7128:1356:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1942,
										"nodeType": "Block",
										"src": "8915:833:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1847,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1470,
															"src": "8933:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420696e697469616c697a6564",
															"id": 1848,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8946:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6ae2314e839d4d9cfe442dd3a2386a5c83b76bbc48be45cca60d84c71c4359b2",
																"typeString": "literal_string \"Not initialized\""
															},
															"value": "Not initialized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6ae2314e839d4d9cfe442dd3a2386a5c83b76bbc48be45cca60d84c71c4359b2",
																"typeString": "literal_string \"Not initialized\""
															}
														],
														"id": 1846,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8925:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1849,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8925:39:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1850,
												"nodeType": "ExpressionStatement",
												"src": "8925:39:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1857,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 1852,
																	"name": "nonces",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1474,
																	"src": "8982:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1855,
																"indexExpression": {
																	"expression": {
																		"id": 1853,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "8989:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1854,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "8993:6:9",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "8989:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8982:18:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1856,
																"name": "expectedNonce",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1837,
																"src": "9004:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8982:35:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964206e6f6e6365",
															"id": 1858,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9019:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_19a9c5fdfc984667e300523283171e2aca8bb9e593f19eef41052fcdbfdb1568",
																"typeString": "literal_string \"Invalid nonce\""
															},
															"value": "Invalid nonce"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_19a9c5fdfc984667e300523283171e2aca8bb9e593f19eef41052fcdbfdb1568",
																"typeString": "literal_string \"Invalid nonce\""
															}
														],
														"id": 1851,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8974:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1859,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8974:61:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1860,
												"nodeType": "ExpressionStatement",
												"src": "8974:61:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1863,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "9069:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1864,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "9073:6:9",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "9069:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1865,
																	"name": "expectedNonce",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1837,
																	"src": "9081:13:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1866,
																	"name": "signature",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1839,
																	"src": "9096:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1862,
																"name": "verifySignature",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2362,
																"src": "9053:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) pure returns (bool)"
																}
															},
															"id": 1867,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9053:53:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964207369676e6174757265",
															"id": 1868,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9108:19:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7",
																"typeString": "literal_string \"Invalid signature\""
															},
															"value": "Invalid signature"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7",
																"typeString": "literal_string \"Invalid signature\""
															}
														],
														"id": 1861,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9045:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1869,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9045:83:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1870,
												"nodeType": "ExpressionStatement",
												"src": "9045:83:9"
											},
											{
												"expression": {
													"id": 1875,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "9139:20:9",
													"subExpression": {
														"baseExpression": {
															"id": 1871,
															"name": "nonces",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1474,
															"src": "9139:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1874,
														"indexExpression": {
															"expression": {
																"id": 1872,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "9146:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1873,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9150:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "9146:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9139:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1876,
												"nodeType": "ExpressionStatement",
												"src": "9139:20:9"
											},
											{
												"assignments": [
													1879
												],
												"declarations": [
													{
														"constant": false,
														"id": 1879,
														"mutability": "mutable",
														"name": "stats",
														"nameLocation": "9190:5:9",
														"nodeType": "VariableDeclaration",
														"scope": 1942,
														"src": "9170:25:9",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TraderStats_$1499_storage_ptr",
															"typeString": "struct LiquidityAccelerationToken.TraderStats"
														},
														"typeName": {
															"id": 1878,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1877,
																"name": "TraderStats",
																"nameLocations": [
																	"9170:11:9"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1499,
																"src": "9170:11:9"
															},
															"referencedDeclaration": 1499,
															"src": "9170:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TraderStats_$1499_storage_ptr",
																"typeString": "struct LiquidityAccelerationToken.TraderStats"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1884,
												"initialValue": {
													"baseExpression": {
														"id": 1880,
														"name": "traderStats",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1504,
														"src": "9198:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_TraderStats_$1499_storage_$",
															"typeString": "mapping(address => struct LiquidityAccelerationToken.TraderStats storage ref)"
														}
													},
													"id": 1883,
													"indexExpression": {
														"expression": {
															"id": 1881,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "9210:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1882,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9214:6:9",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "9210:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9198:23:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TraderStats_$1499_storage",
														"typeString": "struct LiquidityAccelerationToken.TraderStats storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9170:51:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1892,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1886,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "9239:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1887,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "9245:9:9",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "9239:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1891,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1888,
																		"name": "stats",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1879,
																		"src": "9258:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_TraderStats_$1499_storage_ptr",
																			"typeString": "struct LiquidityAccelerationToken.TraderStats storage pointer"
																		}
																	},
																	"id": 1889,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "9264:9:9",
																	"memberName": "lastClaim",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1498,
																	"src": "9258:15:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 1890,
																	"name": "tradeEpochDuration",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1440,
																	"src": "9276:18:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9258:36:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9239:55:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45706f6368206475726174696f6e206e6f7420656e646564",
															"id": 1893,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9296:26:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_173f724573e03b30b01a0c9de192b085764dd4bd6eb36c485bbfc55c18287d76",
																"typeString": "literal_string \"Epoch duration not ended\""
															},
															"value": "Epoch duration not ended"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_173f724573e03b30b01a0c9de192b085764dd4bd6eb36c485bbfc55c18287d76",
																"typeString": "literal_string \"Epoch duration not ended\""
															}
														],
														"id": 1885,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9231:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1894,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9231:92:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1895,
												"nodeType": "ExpressionStatement",
												"src": "9231:92:9"
											},
											{
												"assignments": [
													1897
												],
												"declarations": [
													{
														"constant": false,
														"id": 1897,
														"mutability": "mutable",
														"name": "reward",
														"nameLocation": "9341:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 1942,
														"src": "9333:14:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1896,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9333:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1900,
												"initialValue": {
													"expression": {
														"id": 1898,
														"name": "stats",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1879,
														"src": "9350:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TraderStats_$1499_storage_ptr",
															"typeString": "struct LiquidityAccelerationToken.TraderStats storage pointer"
														}
													},
													"id": 1899,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "9356:19:9",
													"memberName": "pendingTradeRewards",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1496,
													"src": "9350:25:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9333:42:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1904,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1902,
																"name": "reward",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1897,
																"src": "9393:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1903,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9402:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9393:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f2070656e64696e672072657761726473",
															"id": 1905,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9405:20:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8114dcf72780e60e19572e2c60a0c1f9869923f8566298d433960bbbf02ee9bd",
																"typeString": "literal_string \"No pending rewards\""
															},
															"value": "No pending rewards"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8114dcf72780e60e19572e2c60a0c1f9869923f8566298d433960bbbf02ee9bd",
																"typeString": "literal_string \"No pending rewards\""
															}
														],
														"id": 1901,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9385:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1906,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9385:41:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1907,
												"nodeType": "ExpressionStatement",
												"src": "9385:41:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1911,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1909,
																"name": "reward",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1897,
																"src": "9444:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1910,
																"name": "maxClaimable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1466,
																"src": "9454:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9444:22:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265776172642065786365656473206d617820636c61696d61626c65",
															"id": 1912,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9468:30:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6de2a2be9ca38ada1b84a026463e7b712a73f0cb3c748e36f625c3a785b75809",
																"typeString": "literal_string \"Reward exceeds max claimable\""
															},
															"value": "Reward exceeds max claimable"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6de2a2be9ca38ada1b84a026463e7b712a73f0cb3c748e36f625c3a785b75809",
																"typeString": "literal_string \"Reward exceeds max claimable\""
															}
														],
														"id": 1908,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9436:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1913,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9436:63:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1914,
												"nodeType": "ExpressionStatement",
												"src": "9436:63:9"
											},
											{
												"expression": {
													"id": 1919,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1915,
															"name": "stats",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1879,
															"src": "9571:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TraderStats_$1499_storage_ptr",
																"typeString": "struct LiquidityAccelerationToken.TraderStats storage pointer"
															}
														},
														"id": 1917,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "9577:19:9",
														"memberName": "pendingTradeRewards",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1496,
														"src": "9571:25:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1918,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9599:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "9571:29:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1920,
												"nodeType": "ExpressionStatement",
												"src": "9571:29:9"
											},
											{
												"expression": {
													"id": 1926,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1921,
															"name": "stats",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1879,
															"src": "9610:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TraderStats_$1499_storage_ptr",
																"typeString": "struct LiquidityAccelerationToken.TraderStats storage pointer"
															}
														},
														"id": 1923,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "9616:9:9",
														"memberName": "lastClaim",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1498,
														"src": "9610:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1924,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "9628:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1925,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9634:9:9",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "9628:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9610:33:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1927,
												"nodeType": "ExpressionStatement",
												"src": "9610:33:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1931,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "9668:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1932,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9672:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "9668:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1933,
															"name": "reward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1897,
															"src": "9680:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1928,
															"name": "latToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1430,
															"src": "9654:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ILatToken_$1410",
																"typeString": "contract ILatToken"
															}
														},
														"id": 1930,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9663:4:9",
														"memberName": "mint",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1409,
														"src": "9654:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256) external"
														}
													},
													"id": 1934,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9654:33:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1935,
												"nodeType": "ExpressionStatement",
												"src": "9654:33:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1937,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "9722:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1938,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9726:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "9722:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1939,
															"name": "reward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1897,
															"src": "9734:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1936,
														"name": "TradeRewardsClaimed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1551,
														"src": "9702:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1940,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9702:39:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1941,
												"nodeType": "EmitStatement",
												"src": "9697:44:9"
											}
										]
									},
									"documentation": {
										"id": 1835,
										"nodeType": "StructuredDocumentation",
										"src": "8490:310:9",
										"text": "@notice Allows traders to claim accumulated trade rewards after the epoch duration.\n Uses a nonce and off‑chain EIP‑712 style signature for replay protection.\n @param expectedNonce The expected nonce for msg.sender.\n @param signature The signature over (msg.sender, expectedNonce)."
									},
									"functionSelector": "e90b0d76",
									"id": 1943,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1842,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1841,
												"name": "whenNotPaused",
												"nameLocations": [
													"8888:13:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1591,
												"src": "8888:13:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "8888:13:9"
										},
										{
											"id": 1844,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1843,
												"name": "nonReentrant",
												"nameLocations": [
													"8902:12:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 314,
												"src": "8902:12:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "8902:12:9"
										}
									],
									"name": "claimTradeRewards",
									"nameLocation": "8814:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1837,
												"mutability": "mutable",
												"name": "expectedNonce",
												"nameLocation": "8840:13:9",
												"nodeType": "VariableDeclaration",
												"scope": 1943,
												"src": "8832:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1836,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8832:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1839,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "8868:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1943,
												"src": "8855:22:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1838,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8855:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8831:47:9"
									},
									"returnParameters": {
										"id": 1845,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8915:0:9"
									},
									"scope": 2363,
									"src": "8805:943:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2024,
										"nodeType": "Block",
										"src": "10221:635:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1954,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1470,
															"src": "10239:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420696e697469616c697a6564",
															"id": 1955,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10252:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6ae2314e839d4d9cfe442dd3a2386a5c83b76bbc48be45cca60d84c71c4359b2",
																"typeString": "literal_string \"Not initialized\""
															},
															"value": "Not initialized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6ae2314e839d4d9cfe442dd3a2386a5c83b76bbc48be45cca60d84c71c4359b2",
																"typeString": "literal_string \"Not initialized\""
															}
														],
														"id": 1953,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10231:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1956,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10231:39:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1957,
												"nodeType": "ExpressionStatement",
												"src": "10231:39:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1961,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "10374:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1962,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "10378:6:9",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "10374:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1963,
																	"name": "vaultAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1537,
																	"src": "10386:12:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1964,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1946,
																	"src": "10400:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1959,
																	"name": "latToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1430,
																	"src": "10352:8:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ILatToken_$1410",
																		"typeString": "contract ILatToken"
																	}
																},
																"id": 1960,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "10361:12:9",
																"memberName": "transferFrom",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 941,
																"src": "10352:21:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256) external returns (bool)"
																}
															},
															"id": 1965,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10352:55:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e73666572206661696c6564",
															"id": 1966,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10409:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																"typeString": "literal_string \"Transfer failed\""
															},
															"value": "Transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																"typeString": "literal_string \"Transfer failed\""
															}
														],
														"id": 1958,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10344:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1967,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10344:83:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1968,
												"nodeType": "ExpressionStatement",
												"src": "10344:83:9"
											},
											{
												"assignments": [
													1971
												],
												"declarations": [
													{
														"constant": false,
														"id": 1971,
														"mutability": "mutable",
														"name": "s",
														"nameLocation": "10452:1:9",
														"nodeType": "VariableDeclaration",
														"scope": 2024,
														"src": "10438:15:9",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$1511_storage_ptr",
															"typeString": "struct LiquidityAccelerationToken.Stake"
														},
														"typeName": {
															"id": 1970,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1969,
																"name": "Stake",
																"nameLocations": [
																	"10438:5:9"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1511,
																"src": "10438:5:9"
															},
															"referencedDeclaration": 1511,
															"src": "10438:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$1511_storage_ptr",
																"typeString": "struct LiquidityAccelerationToken.Stake"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1976,
												"initialValue": {
													"baseExpression": {
														"id": 1972,
														"name": "stakes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1516,
														"src": "10456:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$1511_storage_$",
															"typeString": "mapping(address => struct LiquidityAccelerationToken.Stake storage ref)"
														}
													},
													"id": 1975,
													"indexExpression": {
														"expression": {
															"id": 1973,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "10463:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1974,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "10467:6:9",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "10463:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "10456:18:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$1511_storage",
														"typeString": "struct LiquidityAccelerationToken.Stake storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10438:36:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1980,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1977,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1971,
															"src": "10488:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$1511_storage_ptr",
																"typeString": "struct LiquidityAccelerationToken.Stake storage pointer"
															}
														},
														"id": 1978,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "10490:10:9",
														"memberName": "stakeStart",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1510,
														"src": "10488:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1979,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10504:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "10488:17:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2003,
													"nodeType": "Block",
													"src": "10628:109:9",
													"statements": [
														{
															"expression": {
																"id": 2001,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1996,
																		"name": "stakedWeight",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1520,
																		"src": "10696:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1999,
																	"indexExpression": {
																		"expression": {
																			"id": 1997,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "10709:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1998,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "10713:6:9",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "10709:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "10696:24:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "3130",
																	"id": 2000,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10724:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "10696:30:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2002,
															"nodeType": "ExpressionStatement",
															"src": "10696:30:9"
														}
													]
												},
												"id": 2004,
												"nodeType": "IfStatement",
												"src": "10484:253:9",
												"trueBody": {
													"id": 1995,
													"nodeType": "Block",
													"src": "10507:115:9",
													"statements": [
														{
															"expression": {
																"id": 1986,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1981,
																		"name": "s",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1971,
																		"src": "10521:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Stake_$1511_storage_ptr",
																			"typeString": "struct LiquidityAccelerationToken.Stake storage pointer"
																		}
																	},
																	"id": 1983,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "10523:10:9",
																	"memberName": "stakeStart",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1510,
																	"src": "10521:12:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 1984,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "10536:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1985,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "10542:9:9",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "10536:15:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10521:30:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1987,
															"nodeType": "ExpressionStatement",
															"src": "10521:30:9"
														},
														{
															"expression": {
																"id": 1993,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1988,
																		"name": "stakedWeight",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1520,
																		"src": "10565:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1991,
																	"indexExpression": {
																		"expression": {
																			"id": 1989,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "10578:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1990,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "10582:6:9",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "10578:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "10565:24:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "313030",
																	"id": 1992,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10592:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	},
																	"value": "100"
																},
																"src": "10565:30:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1994,
															"nodeType": "ExpressionStatement",
															"src": "10565:30:9"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2009,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2005,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1971,
															"src": "10746:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$1511_storage_ptr",
																"typeString": "struct LiquidityAccelerationToken.Stake storage pointer"
															}
														},
														"id": 2007,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "10748:6:9",
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1506,
														"src": "10746:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 2008,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1946,
														"src": "10758:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10746:18:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2010,
												"nodeType": "ExpressionStatement",
												"src": "10746:18:9"
											},
											{
												"expression": {
													"id": 2016,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2011,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1971,
															"src": "10774:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$1511_storage_ptr",
																"typeString": "struct LiquidityAccelerationToken.Stake storage pointer"
															}
														},
														"id": 2013,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "10776:11:9",
														"memberName": "lastUpdated",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1508,
														"src": "10774:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 2014,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "10790:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 2015,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "10796:9:9",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "10790:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10774:31:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2017,
												"nodeType": "ExpressionStatement",
												"src": "10774:31:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2019,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "10830:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2020,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10834:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "10830:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2021,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1946,
															"src": "10842:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2018,
														"name": "StakeLat",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1557,
														"src": "10821:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2022,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10821:28:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2023,
												"nodeType": "EmitStatement",
												"src": "10816:33:9"
											}
										]
									},
									"documentation": {
										"id": 1944,
										"nodeType": "StructuredDocumentation",
										"src": "9880:266:9",
										"text": "@notice Stakes LAT tokens by transferring them to a treasury vault.\n The user must approve this contract beforehand.\n Also updates the staked weight (used for long‑term reward multipliers).\n @param amount The amount of LAT tokens to stake."
									},
									"functionSelector": "0524fb7e",
									"id": 2025,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1949,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1948,
												"name": "whenNotPaused",
												"nameLocations": [
													"10194:13:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1591,
												"src": "10194:13:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "10194:13:9"
										},
										{
											"id": 1951,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1950,
												"name": "nonReentrant",
												"nameLocations": [
													"10208:12:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 314,
												"src": "10208:12:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "10208:12:9"
										}
									],
									"name": "stakeLat",
									"nameLocation": "10160:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1947,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1946,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10177:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 2025,
												"src": "10169:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1945,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10169:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10168:16:9"
									},
									"returnParameters": {
										"id": 1952,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10221:0:9"
									},
									"scope": 2363,
									"src": "10151:705:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2195,
										"nodeType": "Block",
										"src": "11241:1570:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2036,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1470,
															"src": "11259:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420696e697469616c697a6564",
															"id": 2037,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11272:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6ae2314e839d4d9cfe442dd3a2386a5c83b76bbc48be45cca60d84c71c4359b2",
																"typeString": "literal_string \"Not initialized\""
															},
															"value": "Not initialized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6ae2314e839d4d9cfe442dd3a2386a5c83b76bbc48be45cca60d84c71c4359b2",
																"typeString": "literal_string \"Not initialized\""
															}
														],
														"id": 2035,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11251:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2038,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11251:39:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2039,
												"nodeType": "ExpressionStatement",
												"src": "11251:39:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2046,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 2041,
																	"name": "nonces",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1474,
																	"src": "11308:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2044,
																"indexExpression": {
																	"expression": {
																		"id": 2042,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "11315:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2043,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "11319:6:9",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "11315:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "11308:18:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 2045,
																"name": "expectedNonce",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2028,
																"src": "11330:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11308:35:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964206e6f6e6365",
															"id": 2047,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11345:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_19a9c5fdfc984667e300523283171e2aca8bb9e593f19eef41052fcdbfdb1568",
																"typeString": "literal_string \"Invalid nonce\""
															},
															"value": "Invalid nonce"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_19a9c5fdfc984667e300523283171e2aca8bb9e593f19eef41052fcdbfdb1568",
																"typeString": "literal_string \"Invalid nonce\""
															}
														],
														"id": 2040,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11300:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2048,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11300:61:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2049,
												"nodeType": "ExpressionStatement",
												"src": "11300:61:9"
											},
											{
												"expression": {
													"id": 2054,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "11371:20:9",
													"subExpression": {
														"baseExpression": {
															"id": 2050,
															"name": "nonces",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1474,
															"src": "11371:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2053,
														"indexExpression": {
															"expression": {
																"id": 2051,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "11378:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2052,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11382:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "11378:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11371:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2055,
												"nodeType": "ExpressionStatement",
												"src": "11371:20:9"
											},
											{
												"assignments": [
													2058
												],
												"declarations": [
													{
														"constant": false,
														"id": 2058,
														"mutability": "mutable",
														"name": "s",
														"nameLocation": "11416:1:9",
														"nodeType": "VariableDeclaration",
														"scope": 2195,
														"src": "11402:15:9",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$1511_storage_ptr",
															"typeString": "struct LiquidityAccelerationToken.Stake"
														},
														"typeName": {
															"id": 2057,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2056,
																"name": "Stake",
																"nameLocations": [
																	"11402:5:9"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1511,
																"src": "11402:5:9"
															},
															"referencedDeclaration": 1511,
															"src": "11402:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$1511_storage_ptr",
																"typeString": "struct LiquidityAccelerationToken.Stake"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2063,
												"initialValue": {
													"baseExpression": {
														"id": 2059,
														"name": "stakes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1516,
														"src": "11420:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$1511_storage_$",
															"typeString": "mapping(address => struct LiquidityAccelerationToken.Stake storage ref)"
														}
													},
													"id": 2062,
													"indexExpression": {
														"expression": {
															"id": 2060,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "11427:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 2061,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "11431:6:9",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "11427:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "11420:18:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$1511_storage",
														"typeString": "struct LiquidityAccelerationToken.Stake storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11402:36:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2068,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2065,
																	"name": "s",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2058,
																	"src": "11456:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Stake_$1511_storage_ptr",
																		"typeString": "struct LiquidityAccelerationToken.Stake storage pointer"
																	}
																},
																"id": 2066,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "11458:10:9",
																"memberName": "stakeStart",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1510,
																"src": "11456:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 2067,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11472:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11456:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f207374616b6520666f756e64",
															"id": 2069,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11475:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8495ddd36ba9b32a0cb09aa87f940a1af6e06f502729a7774df9db0ac3d8e45a",
																"typeString": "literal_string \"No stake found\""
															},
															"value": "No stake found"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8495ddd36ba9b32a0cb09aa87f940a1af6e06f502729a7774df9db0ac3d8e45a",
																"typeString": "literal_string \"No stake found\""
															}
														],
														"id": 2064,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11448:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2070,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11448:44:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2071,
												"nodeType": "ExpressionStatement",
												"src": "11448:44:9"
											},
											{
												"assignments": [
													2073
												],
												"declarations": [
													{
														"constant": false,
														"id": 2073,
														"mutability": "mutable",
														"name": "elapsed",
														"nameLocation": "11511:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 2195,
														"src": "11503:15:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2072,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11503:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2079,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2078,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2074,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "11521:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 2075,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "11527:9:9",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "11521:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"expression": {
															"id": 2076,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2058,
															"src": "11539:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$1511_storage_ptr",
																"typeString": "struct LiquidityAccelerationToken.Stake storage pointer"
															}
														},
														"id": 2077,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "11541:11:9",
														"memberName": "lastUpdated",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1508,
														"src": "11539:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11521:31:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11503:49:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2083,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2081,
																"name": "elapsed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2073,
																"src": "11570:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2082,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11580:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11570:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f2074696d6520656c6170736564",
															"id": 2084,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11583:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3b595757d501f3a780236362fb65cac1873bab94376c90d08bc706e4116d8674",
																"typeString": "literal_string \"No time elapsed\""
															},
															"value": "No time elapsed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3b595757d501f3a780236362fb65cac1873bab94376c90d08bc706e4116d8674",
																"typeString": "literal_string \"No time elapsed\""
															}
														],
														"id": 2080,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11562:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2085,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11562:39:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2086,
												"nodeType": "ExpressionStatement",
												"src": "11562:39:9"
											},
											{
												"assignments": [
													2088
												],
												"declarations": [
													{
														"constant": false,
														"id": 2088,
														"mutability": "mutable",
														"name": "effectiveStakeRewardRate",
														"nameLocation": "11670:24:9",
														"nodeType": "VariableDeclaration",
														"scope": 2195,
														"src": "11662:32:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2087,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11662:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2090,
												"initialValue": {
													"id": 2089,
													"name": "stakeRewardRate",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1434,
													"src": "11697:15:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11662:50:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2093,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2091,
														"name": "poolTradingVolume",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1442,
														"src": "11726:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 2092,
														"name": "poolVolumeThreshold",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1444,
														"src": "11746:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11726:39:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2104,
												"nodeType": "IfStatement",
												"src": "11722:142:9",
												"trueBody": {
													"id": 2103,
													"nodeType": "Block",
													"src": "11767:97:9",
													"statements": [
														{
															"expression": {
																"id": 2101,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2094,
																	"name": "effectiveStakeRewardRate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2088,
																	"src": "11781:24:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2100,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2097,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2095,
																					"name": "stakeRewardRate",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1434,
																					"src": "11809:15:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 2096,
																					"name": "poolBoostMultiplier",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1446,
																					"src": "11827:19:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11809:37:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 2098,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "11808:39:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "313030",
																		"id": 2099,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11850:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_100_by_1",
																			"typeString": "int_const 100"
																		},
																		"value": "100"
																	},
																	"src": "11808:45:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11781:72:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2102,
															"nodeType": "ExpressionStatement",
															"src": "11781:72:9"
														}
													]
												}
											},
											{
												"assignments": [
													2106
												],
												"declarations": [
													{
														"constant": false,
														"id": 2106,
														"mutability": "mutable",
														"name": "liquidityMultiplier",
														"nameLocation": "11954:19:9",
														"nodeType": "VariableDeclaration",
														"scope": 2195,
														"src": "11946:27:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2105,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11946:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2119,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2112,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 2107,
																"name": "liquidityBoostMultiplier",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1490,
																"src": "11976:24:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 2110,
															"indexExpression": {
																"expression": {
																	"id": 2108,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "12001:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2109,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "12005:6:9",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "12001:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "11976:36:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 2111,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12016:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "11976:41:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"baseExpression": {
															"id": 2114,
															"name": "liquidityBoostMultiplier",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1490,
															"src": "12050:24:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2117,
														"indexExpression": {
															"expression": {
																"id": 2115,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "12075:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2116,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "12079:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "12075:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "12050:36:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "11976:110:9",
													"trueExpression": {
														"hexValue": "313030",
														"id": 2113,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12032:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11946:140:9"
											},
											{
												"expression": {
													"id": 2127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2120,
														"name": "effectiveStakeRewardRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2088,
														"src": "12096:24:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2126,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2123,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2121,
																		"name": "effectiveStakeRewardRate",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2088,
																		"src": "12124:24:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2122,
																		"name": "liquidityMultiplier",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2106,
																		"src": "12151:19:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "12124:46:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2124,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "12123:48:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "313030",
															"id": 2125,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12174:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															},
															"value": "100"
														},
														"src": "12123:54:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12096:81:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2128,
												"nodeType": "ExpressionStatement",
												"src": "12096:81:9"
											},
											{
												"assignments": [
													2130
												],
												"declarations": [
													{
														"constant": false,
														"id": 2130,
														"mutability": "mutable",
														"name": "reward",
														"nameLocation": "12232:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 2195,
														"src": "12224:14:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2129,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12224:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2137,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2134,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 2131,
																"name": "s",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2058,
																"src": "12241:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Stake_$1511_storage_ptr",
																	"typeString": "struct LiquidityAccelerationToken.Stake storage pointer"
																}
															},
															"id": 2132,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "12243:6:9",
															"memberName": "amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1506,
															"src": "12241:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 2133,
															"name": "effectiveStakeRewardRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2088,
															"src": "12252:24:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "12241:35:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 2135,
														"name": "elapsed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2073,
														"src": "12279:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12241:45:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12224:62:9"
											},
											{
												"expression": {
													"id": 2148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2138,
														"name": "reward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2130,
														"src": "12340:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2147,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2144,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2139,
																		"name": "reward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2130,
																		"src": "12350:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"baseExpression": {
																			"id": 2140,
																			"name": "stakedWeight",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1520,
																			"src": "12359:12:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																				"typeString": "mapping(address => uint256)"
																			}
																		},
																		"id": 2143,
																		"indexExpression": {
																			"expression": {
																				"id": 2141,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "12372:3:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 2142,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "12376:6:9",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "12372:10:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "12359:24:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "12350:33:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2145,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "12349:35:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "313030",
															"id": 2146,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12387:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															},
															"value": "100"
														},
														"src": "12349:41:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12340:50:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2149,
												"nodeType": "ExpressionStatement",
												"src": "12340:50:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2150,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "12488:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 2151,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "12494:9:9",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "12488:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2155,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 2152,
																"name": "s",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2058,
																"src": "12506:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Stake_$1511_storage_ptr",
																	"typeString": "struct LiquidityAccelerationToken.Stake storage pointer"
																}
															},
															"id": 2153,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "12508:11:9",
															"memberName": "lastUpdated",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1508,
															"src": "12506:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 2154,
															"name": "inactivitySlashingTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1456,
															"src": "12522:22:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "12506:38:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12488:56:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2173,
												"nodeType": "IfStatement",
												"src": "12484:182:9",
												"trueBody": {
													"id": 2172,
													"nodeType": "Block",
													"src": "12546:120:9",
													"statements": [
														{
															"assignments": [
																2158
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2158,
																	"mutability": "mutable",
																	"name": "penalty",
																	"nameLocation": "12568:7:9",
																	"nodeType": "VariableDeclaration",
																	"scope": 2172,
																	"src": "12560:15:9",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2157,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "12560:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2165,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2164,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2161,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2159,
																				"name": "reward",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2130,
																				"src": "12579:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 2160,
																				"name": "inactivityPenaltyRate",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1459,
																				"src": "12588:21:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "12579:30:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2162,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "12578:32:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "313030",
																	"id": 2163,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12613:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	},
																	"value": "100"
																},
																"src": "12578:38:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "12560:56:9"
														},
														{
															"expression": {
																"id": 2170,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2166,
																	"name": "reward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2130,
																	"src": "12630:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2169,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2167,
																		"name": "reward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2130,
																		"src": "12639:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 2168,
																		"name": "penalty",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2158,
																		"src": "12648:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "12639:16:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "12630:25:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2171,
															"nodeType": "ExpressionStatement",
															"src": "12630:25:9"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2179,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2174,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2058,
															"src": "12676:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$1511_storage_ptr",
																"typeString": "struct LiquidityAccelerationToken.Stake storage pointer"
															}
														},
														"id": 2176,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "12678:11:9",
														"memberName": "lastUpdated",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1508,
														"src": "12676:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 2177,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "12692:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 2178,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "12698:9:9",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "12692:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12676:31:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2180,
												"nodeType": "ExpressionStatement",
												"src": "12676:31:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2184,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "12731:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2185,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "12735:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "12731:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2186,
															"name": "reward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2130,
															"src": "12743:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2181,
															"name": "latToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1430,
															"src": "12717:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ILatToken_$1410",
																"typeString": "contract ILatToken"
															}
														},
														"id": 2183,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "12726:4:9",
														"memberName": "mint",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1409,
														"src": "12717:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256) external"
														}
													},
													"id": 2187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12717:33:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2188,
												"nodeType": "ExpressionStatement",
												"src": "12717:33:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2190,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "12785:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2191,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "12789:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "12785:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2192,
															"name": "reward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2130,
															"src": "12797:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2189,
														"name": "StakeRewardsClaimed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1563,
														"src": "12765:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2193,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12765:39:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2194,
												"nodeType": "EmitStatement",
												"src": "12760:44:9"
											}
										]
									},
									"documentation": {
										"id": 2026,
										"nodeType": "StructuredDocumentation",
										"src": "10862:288:9",
										"text": "@notice Claims staking rewards based on the staked amount and elapsed time.\n Applies pool boosts, liquidity boosts, staked weight, and inactivity slashing if applicable.\n Uses nonce-based replay protection.\n @param expectedNonce The expected nonce for msg.sender."
									},
									"functionSelector": "dd69becd",
									"id": 2196,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2031,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2030,
												"name": "whenNotPaused",
												"nameLocations": [
													"11214:13:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1591,
												"src": "11214:13:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "11214:13:9"
										},
										{
											"id": 2033,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2032,
												"name": "nonReentrant",
												"nameLocations": [
													"11228:12:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 314,
												"src": "11228:12:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "11228:12:9"
										}
									],
									"name": "claimStakeRewards",
									"nameLocation": "11164:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2029,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2028,
												"mutability": "mutable",
												"name": "expectedNonce",
												"nameLocation": "11190:13:9",
												"nodeType": "VariableDeclaration",
												"scope": 2196,
												"src": "11182:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2027,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11182:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11181:23:9"
									},
									"returnParameters": {
										"id": 2034,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11241:0:9"
									},
									"scope": 2363,
									"src": "11155:1656:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2291,
										"nodeType": "Block",
										"src": "13109:858:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2207,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1470,
															"src": "13127:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420696e697469616c697a6564",
															"id": 2208,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13140:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6ae2314e839d4d9cfe442dd3a2386a5c83b76bbc48be45cca60d84c71c4359b2",
																"typeString": "literal_string \"Not initialized\""
															},
															"value": "Not initialized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6ae2314e839d4d9cfe442dd3a2386a5c83b76bbc48be45cca60d84c71c4359b2",
																"typeString": "literal_string \"Not initialized\""
															}
														],
														"id": 2206,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13119:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13119:39:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2210,
												"nodeType": "ExpressionStatement",
												"src": "13119:39:9"
											},
											{
												"assignments": [
													2213
												],
												"declarations": [
													{
														"constant": false,
														"id": 2213,
														"mutability": "mutable",
														"name": "s",
														"nameLocation": "13182:1:9",
														"nodeType": "VariableDeclaration",
														"scope": 2291,
														"src": "13168:15:9",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$1511_storage_ptr",
															"typeString": "struct LiquidityAccelerationToken.Stake"
														},
														"typeName": {
															"id": 2212,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2211,
																"name": "Stake",
																"nameLocations": [
																	"13168:5:9"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1511,
																"src": "13168:5:9"
															},
															"referencedDeclaration": 1511,
															"src": "13168:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$1511_storage_ptr",
																"typeString": "struct LiquidityAccelerationToken.Stake"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2218,
												"initialValue": {
													"baseExpression": {
														"id": 2214,
														"name": "stakes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1516,
														"src": "13186:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$1511_storage_$",
															"typeString": "mapping(address => struct LiquidityAccelerationToken.Stake storage ref)"
														}
													},
													"id": 2217,
													"indexExpression": {
														"expression": {
															"id": 2215,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "13193:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 2216,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "13197:6:9",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "13193:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "13186:18:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$1511_storage",
														"typeString": "struct LiquidityAccelerationToken.Stake storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13168:36:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2223,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2220,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2199,
																"src": "13222:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"expression": {
																	"id": 2221,
																	"name": "s",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2213,
																	"src": "13232:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Stake_$1511_storage_ptr",
																		"typeString": "struct LiquidityAccelerationToken.Stake storage pointer"
																	}
																},
																"id": 2222,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "13234:6:9",
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1506,
																"src": "13232:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "13222:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e74207374616b656420616d6f756e74",
															"id": 2224,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13242:28:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0dd13570e20c96a9bfc56c79d1eb9235438d62a04250ac67a0d9f423a83cdc16",
																"typeString": "literal_string \"Insufficient staked amount\""
															},
															"value": "Insufficient staked amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0dd13570e20c96a9bfc56c79d1eb9235438d62a04250ac67a0d9f423a83cdc16",
																"typeString": "literal_string \"Insufficient staked amount\""
															}
														],
														"id": 2219,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13214:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13214:57:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2226,
												"nodeType": "ExpressionStatement",
												"src": "13214:57:9"
											},
											{
												"assignments": [
													2228
												],
												"declarations": [
													{
														"constant": false,
														"id": 2228,
														"mutability": "mutable",
														"name": "penalty",
														"nameLocation": "13290:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 2291,
														"src": "13282:15:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2227,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13282:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2230,
												"initialValue": {
													"hexValue": "30",
													"id": 2229,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13300:1:9",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13282:19:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2237,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2231,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "13397:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 2232,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "13403:9:9",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "13397:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2236,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 2233,
																"name": "s",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2213,
																"src": "13415:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Stake_$1511_storage_ptr",
																	"typeString": "struct LiquidityAccelerationToken.Stake storage pointer"
																}
															},
															"id": 2234,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "13417:10:9",
															"memberName": "stakeStart",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1510,
															"src": "13415:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "37",
															"id": 2235,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13430:6:9",
															"subdenomination": "days",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_604800_by_1",
																"typeString": "int_const 604800"
															},
															"value": "7"
														},
														"src": "13415:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13397:39:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2248,
												"nodeType": "IfStatement",
												"src": "13393:115:9",
												"trueBody": {
													"id": 2247,
													"nodeType": "Block",
													"src": "13438:70:9",
													"statements": [
														{
															"expression": {
																"id": 2245,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2238,
																	"name": "penalty",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2228,
																	"src": "13452:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2244,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2241,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2239,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2199,
																					"src": "13463:6:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 2240,
																					"name": "earlyWithdrawalFee",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1449,
																					"src": "13472:18:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "13463:27:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 2242,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "13462:29:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "313030",
																		"id": 2243,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13494:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_100_by_1",
																			"typeString": "int_const 100"
																		},
																		"value": "100"
																	},
																	"src": "13462:35:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "13452:45:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2246,
															"nodeType": "ExpressionStatement",
															"src": "13452:45:9"
														}
													]
												}
											},
											{
												"assignments": [
													2250
												],
												"declarations": [
													{
														"constant": false,
														"id": 2250,
														"mutability": "mutable",
														"name": "amountAfterPenalty",
														"nameLocation": "13525:18:9",
														"nodeType": "VariableDeclaration",
														"scope": 2291,
														"src": "13517:26:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2249,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13517:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2254,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2251,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2199,
														"src": "13546:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 2252,
														"name": "penalty",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2228,
														"src": "13555:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13546:16:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13517:45:9"
											},
											{
												"expression": {
													"id": 2259,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2255,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2213,
															"src": "13572:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$1511_storage_ptr",
																"typeString": "struct LiquidityAccelerationToken.Stake storage pointer"
															}
														},
														"id": 2257,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "13574:6:9",
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1506,
														"src": "13572:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 2258,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2199,
														"src": "13584:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13572:18:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2260,
												"nodeType": "ExpressionStatement",
												"src": "13572:18:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2265,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "13699:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2266,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "13703:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "13699:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2267,
															"name": "amountAfterPenalty",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2250,
															"src": "13711:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2262,
																	"name": "vaultAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1537,
																	"src": "13676:12:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2261,
																"name": "ITreasuryVault",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1419,
																"src": "13661:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ITreasuryVault_$1419_$",
																	"typeString": "type(contract ITreasuryVault)"
																}
															},
															"id": 2263,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13661:28:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ITreasuryVault_$1419",
																"typeString": "contract ITreasuryVault"
															}
														},
														"id": 2264,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "13690:8:9",
														"memberName": "withdraw",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1418,
														"src": "13661:37:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256) external"
														}
													},
													"id": 2268,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13661:69:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2269,
												"nodeType": "ExpressionStatement",
												"src": "13661:69:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2272,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2270,
														"name": "penalty",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2228,
														"src": "13797:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2271,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13807:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "13797:11:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2283,
												"nodeType": "IfStatement",
												"src": "13793:97:9",
												"trueBody": {
													"id": 2282,
													"nodeType": "Block",
													"src": "13810:80:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2277,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 67,
																			"src": "13862:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 2278,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "13862:7:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2279,
																		"name": "penalty",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2228,
																		"src": "13871:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 2274,
																				"name": "vaultAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1537,
																				"src": "13839:12:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 2273,
																			"name": "ITreasuryVault",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1419,
																			"src": "13824:14:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_ITreasuryVault_$1419_$",
																				"typeString": "type(contract ITreasuryVault)"
																			}
																		},
																		"id": 2275,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "13824:28:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ITreasuryVault_$1419",
																			"typeString": "contract ITreasuryVault"
																		}
																	},
																	"id": 2276,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "13853:8:9",
																	"memberName": "withdraw",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1418,
																	"src": "13824:37:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256) external"
																	}
																},
																"id": 2280,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13824:55:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2281,
															"nodeType": "ExpressionStatement",
															"src": "13824:55:9"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2285,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "13920:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2286,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "13924:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "13920:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2287,
															"name": "amountAfterPenalty",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2250,
															"src": "13932:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2288,
															"name": "penalty",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2228,
															"src": "13952:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2284,
														"name": "StakeWithdrawn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1571,
														"src": "13905:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 2289,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13905:55:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2290,
												"nodeType": "EmitStatement",
												"src": "13900:60:9"
											}
										]
									},
									"documentation": {
										"id": 2197,
										"nodeType": "StructuredDocumentation",
										"src": "12817:212:9",
										"text": "@notice Withdraws staked LAT tokens from the treasury vault.\n If withdrawn before 7 days from staking, an early withdrawal fee is applied.\n @param amount The amount of staked tokens to withdraw."
									},
									"functionSelector": "25d5971f",
									"id": 2292,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2202,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2201,
												"name": "whenNotPaused",
												"nameLocations": [
													"13082:13:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1591,
												"src": "13082:13:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "13082:13:9"
										},
										{
											"id": 2204,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2203,
												"name": "nonReentrant",
												"nameLocations": [
													"13096:12:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 314,
												"src": "13096:12:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "13096:12:9"
										}
									],
									"name": "withdrawStake",
									"nameLocation": "13043:13:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2199,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "13065:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 2292,
												"src": "13057:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2198,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13057:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13056:16:9"
									},
									"returnParameters": {
										"id": 2205,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13109:0:9"
									},
									"scope": 2363,
									"src": "13034:933:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2320,
										"nodeType": "Block",
										"src": "14425:159:9",
										"statements": [
											{
												"expression": {
													"id": 2311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2302,
															"name": "liquidityBoostMultiplier",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1490,
															"src": "14435:24:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2304,
														"indexExpression": {
															"id": 2303,
															"name": "trader",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2295,
															"src": "14460:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "14435:32:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2307,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2305,
																"name": "lpTokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2297,
																"src": "14470:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2306,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14481:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14470:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseExpression": {
															"hexValue": "313030",
															"id": 2309,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14491:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															},
															"value": "100"
														},
														"id": 2310,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "Conditional",
														"src": "14470:24:9",
														"trueExpression": {
															"hexValue": "313230",
															"id": 2308,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14485:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_120_by_1",
																"typeString": "int_const 120"
															},
															"value": "120"
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "14435:59:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2312,
												"nodeType": "ExpressionStatement",
												"src": "14435:59:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2314,
															"name": "trader",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2295,
															"src": "14536:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"baseExpression": {
																"id": 2315,
																"name": "liquidityBoostMultiplier",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1490,
																"src": "14544:24:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 2317,
															"indexExpression": {
																"id": 2316,
																"name": "trader",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2295,
																"src": "14569:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "14544:32:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2313,
														"name": "LiquidityMultiplierUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1577,
														"src": "14509:26:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2318,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14509:68:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2319,
												"nodeType": "EmitStatement",
												"src": "14504:73:9"
											}
										]
									},
									"documentation": {
										"id": 2293,
										"nodeType": "StructuredDocumentation",
										"src": "14098:234:9",
										"text": "@notice Admin-only function to update a trader's liquidity boost multiplier.\n @param trader The address of the trader.\n @param lpTokens The amount of liquidity provider tokens held (if > 0, multiplier is set to 120)."
									},
									"functionSelector": "31fdc2ba",
									"id": 2321,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2300,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2299,
												"name": "onlyOwner",
												"nameLocations": [
													"14415:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "14415:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "14415:9:9"
										}
									],
									"name": "updateLiquidityMultiplier",
									"nameLocation": "14346:25:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2295,
												"mutability": "mutable",
												"name": "trader",
												"nameLocation": "14380:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 2321,
												"src": "14372:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2294,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14372:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2297,
												"mutability": "mutable",
												"name": "lpTokens",
												"nameLocation": "14396:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 2321,
												"src": "14388:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2296,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14388:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14371:34:9"
									},
									"returnParameters": {
										"id": 2301,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14425:0:9"
									},
									"scope": 2363,
									"src": "14337:247:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2361,
										"nodeType": "Block",
										"src": "15241:298:9",
										"statements": [
											{
												"assignments": [
													2334
												],
												"declarations": [
													{
														"constant": false,
														"id": 2334,
														"mutability": "mutable",
														"name": "messageHash",
														"nameLocation": "15264:11:9",
														"nodeType": "VariableDeclaration",
														"scope": 2361,
														"src": "15256:19:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 2333,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "15256:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2342,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2338,
																	"name": "signer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2324,
																	"src": "15305:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2339,
																	"name": "expectedNonce",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2326,
																	"src": "15313:13:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 2336,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "15288:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2337,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "15292:12:9",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "15288:16:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 2340,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15288:39:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2335,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "15278:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 2341,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15278:50:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15256:72:9"
											},
											{
												"assignments": [
													2344
												],
												"declarations": [
													{
														"constant": false,
														"id": 2344,
														"mutability": "mutable",
														"name": "ethSignedMessageHash",
														"nameLocation": "15351:20:9",
														"nodeType": "VariableDeclaration",
														"scope": 2361,
														"src": "15343:28:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 2343,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "15343:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2352,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "19457468657265756d205369676e6564204d6573736167653a0a3332",
																	"id": 2348,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "15401:34:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73",
																		"typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a3332\""
																	},
																	"value": "\u0019Ethereum Signed Message:\n32"
																},
																{
																	"id": 2349,
																	"name": "messageHash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2334,
																	"src": "15437:11:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73",
																		"typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a3332\""
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 2346,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "15384:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2347,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "15388:12:9",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "15384:16:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 2350,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15384:65:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2345,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "15374:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 2351,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15374:76:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15343:107:9"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2359,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 2355,
																"name": "ethSignedMessageHash",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2344,
																"src": "15486:20:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 2356,
																"name": "signature",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2328,
																"src": "15508:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 2353,
																"name": "ECDSA",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1392,
																"src": "15472:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ECDSA_$1392_$",
																	"typeString": "type(library ECDSA)"
																}
															},
															"id": 2354,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "15478:7:9",
															"memberName": "recover",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1148,
															"src": "15472:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$",
																"typeString": "function (bytes32,bytes memory) pure returns (address)"
															}
														},
														"id": 2357,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "15472:46:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 2358,
														"name": "signer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2324,
														"src": "15522:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "15472:56:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2332,
												"id": 2360,
												"nodeType": "Return",
												"src": "15465:63:9"
											}
										]
									},
									"documentation": {
										"id": 2322,
										"nodeType": "StructuredDocumentation",
										"src": "14743:374:9",
										"text": "@notice Verifies that the provided signature is valid for (signer, expectedNonce) using the Ethereum Signed Message format.\n @param signer The expected signer address.\n @param expectedNonce The expected nonce to prevent replay attacks.\n @param signature The ECDSA signature to verify.\n @return True if the signature is valid, false otherwise."
									},
									"id": 2362,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifySignature",
									"nameLocation": "15133:15:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2324,
												"mutability": "mutable",
												"name": "signer",
												"nameLocation": "15157:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 2362,
												"src": "15149:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2323,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15149:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2326,
												"mutability": "mutable",
												"name": "expectedNonce",
												"nameLocation": "15173:13:9",
												"nodeType": "VariableDeclaration",
												"scope": 2362,
												"src": "15165:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2325,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15165:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2328,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "15201:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 2362,
												"src": "15188:22:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2327,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15188:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15148:63:9"
									},
									"returnParameters": {
										"id": 2332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2331,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2362,
												"src": "15235:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2330,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15235:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15234:6:9"
									},
									"scope": 2363,
									"src": "15124:415:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2364,
							"src": "1161:14380:9",
							"usedErrors": [
								13,
								18,
								1055,
								1060,
								1065
							],
							"usedEvents": [
								24,
								1545,
								1551,
								1557,
								1563,
								1571,
								1577,
								1581
							]
						}
					],
					"src": "32:15510:9"
				},
				"id": 9
			}
		}
	}
}